{"version":3,"sources":["webpack:///src/app/interfaces/response/prop.ts","webpack:///src/app/modules/adm/adm-routing.module.ts","webpack:///src/app/modules/adm/adm.module.ts","webpack:///src/app/modules/adm/components/dynamic-prop/dynamic-prop.component.ts","webpack:///src/app/modules/adm/components/dynamic-prop/dynamic-prop.component.html","webpack:///src/app/modules/adm/components/dynamic-props/dynamic-props.component.ts","webpack:///src/app/modules/adm/components/dynamic-props/dynamic-props.component.html","webpack:///src/app/modules/adm/components/dynamic-value/dynamic-value.component.ts","webpack:///src/app/modules/adm/components/dynamic-value/dynamic-value.component.html","webpack:///src/app/modules/adm/components/dynamic-values/dynamic-values.component.ts","webpack:///src/app/modules/adm/components/dynamic-values/dynamic-values.component.html","webpack:///src/app/modules/adm/components/forms-ads/forms-ads-delete-ads-adid/forms-ads-delete-ads-adid.component.ts","webpack:///src/app/modules/adm/components/forms-ads/forms-ads-delete-ads-adid/forms-ads-delete-ads-adid.component.html","webpack:///src/app/modules/adm/components/forms-ads/forms-ads-get-ads-adid/forms-ads-get-ads-adid.component.ts","webpack:///src/app/modules/adm/components/forms-ads/forms-ads-get-ads-adid/forms-ads-get-ads-adid.component.html","webpack:///src/app/modules/adm/components/forms-ads/forms-ads-get-ads/forms-ads-get-ads.component.ts","webpack:///src/app/modules/adm/components/forms-ads/forms-ads-get-ads/forms-ads-get-ads.component.html","webpack:///src/app/modules/adm/components/forms-ads/forms-ads-post-ads/forms-ads-post-ads.component.ts","webpack:///src/app/modules/adm/components/forms-ads/forms-ads-post-ads/forms-ads-post-ads.component.html","webpack:///src/app/modules/adm/components/forms-ads/forms-ads-put-ads-adid/forms-ads-put-ads-adid.component.ts","webpack:///src/app/modules/adm/components/forms-ads/forms-ads-put-ads-adid/forms-ads-put-ads-adid.component.html","webpack:///src/app/modules/adm/components/forms-cats/forms-cats-delete-cats-catid/forms-cats-delete-cats-catid.component.ts","webpack:///src/app/modules/adm/components/forms-cats/forms-cats-delete-cats-catid/forms-cats-delete-cats-catid.component.html","webpack:///src/app/modules/adm/components/forms-cats/forms-cats-get-cats-catid/forms-cats-get-cats-catid.component.ts","webpack:///src/app/modules/adm/components/forms-cats/forms-cats-get-cats-catid/forms-cats-get-cats-catid.component.html","webpack:///src/app/modules/adm/components/forms-cats/forms-cats-get-cats/forms-cats-get-cats.component.ts","webpack:///src/app/modules/adm/components/forms-cats/forms-cats-get-cats/forms-cats-get-cats.component.html","webpack:///src/app/modules/adm/components/forms-cats/forms-cats-post-cats/forms-cats-post-cats.component.ts","webpack:///src/app/modules/adm/components/forms-cats/forms-cats-post-cats/forms-cats-post-cats.component.html","webpack:///src/app/modules/adm/components/forms-cats/forms-cats-put-cats-catid/forms-cats-put-cats-catid.component.ts","webpack:///src/app/modules/adm/components/forms-cats/forms-cats-put-cats-catid/forms-cats-put-cats-catid.component.html","webpack:///src/app/modules/adm/components/forms-kind-props/forms-kind-props-delete/forms-kind-props-delete.component.ts","webpack:///src/app/modules/adm/components/forms-kind-props/forms-kind-props-delete/forms-kind-props-delete.component.html","webpack:///src/app/modules/adm/components/forms-kind-props/forms-kind-props-get-all/forms-kind-props-get-all.component.ts","webpack:///src/app/modules/adm/components/forms-kind-props/forms-kind-props-get-all/forms-kind-props-get-all.component.html","webpack:///src/app/modules/adm/components/forms-kind-props/forms-kind-props-get-one/forms-kind-props-get-one.component.ts","webpack:///src/app/modules/adm/components/forms-kind-props/forms-kind-props-get-one/forms-kind-props-get-one.component.html","webpack:///src/app/modules/adm/components/forms-kind-props/forms-kind-props-post/forms-kind-props-post.component.ts","webpack:///src/app/modules/adm/components/forms-kind-props/forms-kind-props-post/forms-kind-props-post.component.html","webpack:///src/app/modules/adm/components/forms-kind-props/forms-kind-props-put/forms-kind-props-put.component.ts","webpack:///src/app/modules/adm/components/forms-kind-props/forms-kind-props-put/forms-kind-props-put.component.html","webpack:///src/app/modules/adm/components/forms-pages/forms-pages-ad-adid/forms-pages-ad-adid.component.ts","webpack:///src/app/modules/adm/components/forms-pages/forms-pages-ad-adid/forms-pages-ad-adid.component.html","webpack:///src/app/modules/adm/components/forms-pages/forms-pages-main/forms-pages-main.component.ts","webpack:///src/app/modules/adm/components/forms-pages/forms-pages-main/forms-pages-main.component.html","webpack:///src/app/modules/adm/components/forms-props/forms-props-delete-props-propid/forms-props-delete-props-propid.component.ts","webpack:///src/app/modules/adm/components/forms-props/forms-props-delete-props-propid/forms-props-delete-props-propid.component.html","webpack:///src/app/modules/adm/components/forms-props/forms-props-get-props-propid/forms-props-get-props-propid.component.ts","webpack:///src/app/modules/adm/components/forms-props/forms-props-get-props-propid/forms-props-get-props-propid.component.html","webpack:///src/app/modules/adm/components/forms-props/forms-props-get-props/forms-props-get-props.component.ts","webpack:///src/app/modules/adm/components/forms-props/forms-props-get-props/forms-props-get-props.component.html","webpack:///src/app/modules/adm/components/forms-props/forms-props-post-props/forms-props-post-props.component.ts","webpack:///src/app/modules/adm/components/forms-props/forms-props-post-props/forms-props-post-props.component.html","webpack:///src/app/modules/adm/components/forms-props/forms-props-post-put-prop/forms-props-post-put-prop.component.ts","webpack:///src/app/modules/adm/components/forms-props/forms-props-post-put-prop/forms-props-post-put-prop.component.html","webpack:///src/app/modules/adm/components/forms-props/forms-props-put-props-propid/forms-props-put-props-propid.component.ts","webpack:///src/app/modules/adm/components/forms-props/forms-props-put-props-propid/forms-props-put-props-propid.component.html","webpack:///src/app/modules/adm/components/forms-search/forms-search-ads/forms-search-ads.component.ts","webpack:///src/app/modules/adm/components/forms-search/forms-search-ads/forms-search-ads.component.html","webpack:///src/app/modules/adm/components/forms-test/forms-test.component.ts","webpack:///src/app/modules/adm/components/forms-test/forms-test.component.html","webpack:///src/app/modules/adm/components/forms-users/forms-users-delete-users-userid/forms-users-delete-users-userid.component.ts","webpack:///src/app/modules/adm/components/forms-users/forms-users-delete-users-userid/forms-users-delete-users-userid.component.html","webpack:///src/app/modules/adm/components/forms-users/forms-users-get-users-userid/forms-users-get-users-userid.component.ts","webpack:///src/app/modules/adm/components/forms-users/forms-users-get-users-userid/forms-users-get-users-userid.component.html","webpack:///src/app/modules/adm/components/forms-users/forms-users-get-users/forms-users-get-users.component.ts","webpack:///src/app/modules/adm/components/forms-users/forms-users-get-users/forms-users-get-users.component.html","webpack:///src/app/modules/adm/components/forms-users/forms-users-post-users/forms-users-post-users.component.ts","webpack:///src/app/modules/adm/components/forms-users/forms-users-post-users/forms-users-post-users.component.html","webpack:///src/app/modules/adm/components/forms-users/forms-users-put-users-userid/forms-users-put-users-userid.component.ts","webpack:///src/app/modules/adm/components/forms-users/forms-users-put-users-userid/forms-users-put-users-userid.component.html","webpack:///src/app/modules/adm/components/page-adm/page-adm.component.ts","webpack:///src/app/modules/adm/components/page-adm/page-adm.component.html","webpack:///src/app/modules/adm/pipes/pretty-json.pipe.ts","webpack:///src/app/services/kind-props.service.ts","webpack:///src/app/services/test.service.ts","webpack:///src/app/services/user.service.ts"],"names":["PropsAssignedForCat","x","propId","title","comment","pos","isRequire","isCanAsFilter","privateComment","propComment","propPos","propIsRequire","propIsCanAsFilter","routes","path","component","AdmRoutingModule","forChild","imports","exports","AdmModule","declarations","DynamicPropComponent","removed","selector","templateUrl","styleUrls","propsAssignedFormArray","DynamicPropsComponent","fb","serviceManager","subscriptions","propsReserv","s","settings$","subscribe","props","push","forEach","unsubscribe","parseInt","select","nativeElement","value","i","tmp","length","kindPropId","name","suffix","kindPropName","values","group","id","result","controls","get","addItem","DynamicValueComponent","valuesFormArray","DynamicValuesComponent","valueId","FormsAdsDeleteAdsAdidComponent","serviceAds","json","form","adId","required","min","target","invalid","key","formControl","status","console","log","emit","reset","submitForm","FormsAdsGetAdsAdidComponent","getOne","FormsAdsGetAdsComponent","catTreeOneLevel","catId","limit","max","offset","getCatTreeAsOneLevel","catsTree","getFromCat","FormsAdsPostAdsComponent","FormsAdsPutAdsAdidComponent","formPostPutWrap","classList","remove","adForm","ad","FormsCatsDeleteCatsCatidComponent","serviceCats","formDeleteCatsCatId","submitFormDeleteCatsCatId","FormsCatsGetCatsCatidComponent","formGetCatsCatId","withPropsOnlyFiltered","isWithPropsOnlyFiltered","getCatId","submitFormGetCatsCatId","FormsCatsGetCatsComponent","formGetCats","asTree","fn","getTree","getList","submitFormGetCats","FormsCatsPostCatsComponent","minLength","parentId","priceAlias","priceSuffix","titleHelp","titleComment","isAutogenerateTitle","propsAssignedForCat","array","post","clear","submitFormPostCats","FormsCatsPutCatsCatidComponent","formGet","formPut","slug","isDisabled","formPutEl","patchValue","aProps","map","y","setControl","put","submitFormGetCatDataForPut","submitFormPutCatsCatId","FormsKindPropsDeleteComponent","serviceKindProps","FormsKindPropsGetAllComponent","getAll","FormsKindPropsGetOneComponent","FormsKindPropsPostComponent","create","FormsKindPropsPutComponent","update","submitFormGet","submitFormPut","FormsPagesAdAdidComponent","servicePages","pageAd","FormsPagesMainComponent","pageMain","FormsPropsDeletePropsPropidComponent","serviceProps","FormsPropsGetPropsPropidComponent","FormsPropsGetPropsComponent","getPropsFullForCat","FormsPropsPostPropsComponent","FormsPropsPostPutPropComponent","defaultControls","kindProps","tagKindNumber","selectAsTextarea","valueChanges","curKindPropName","setValue","indexOf","toString","_editPropFull","FormsPropsPutPropsPropidComponent","formPutWrapper","formsPropsPostPutProp","editPropFull","FormsSearchAdsComponent","serviceSearch","query","ads","FormsTestComponent","serviceTest","request","FormsUsersDeleteUsersUseridComponent","serviceUsers","userId","FormsUsersGetUsersUseridComponent","getUser","FormsUsersGetUsersComponent","getUsers","submitFormGetUsers","FormsUsersPostUsersComponent","email","password","minLenPassword","passwordConfirm","files","isEmailConfirmed","newFormData","getNewFormData","addPhoto","FormsUsersPutUsersUseridComponent","url","apiUrl","avatar","formPutTag","submitFormGetUsersUserId","submitFormPutUsersUserId","PageAdmComponent","document","body","add","catTree","encapsulation","None","PrettyJsonPipe","res","JSON","stringify","KindPropsService","http","elId","data","providedIn","TestService","UserService"],"mappings":"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","file":"modules-adm-adm-module-es5.js","sourcesContent":["import {ValuePropInterface} from './value-prop';\n\nexport interface PropInterface {\n    propId: number;\n    title: string;\n    kindPropId: number;\n    name: string;\n    suffix: string;\n    comment: string;\n    privateComment: string;\n}\n\nexport interface PropFullInterface extends PropInterface, PropDopInterface {\n}\n\ninterface PropDopInterface {\n    kindPropName: string;\n    propPos: number;\n    propIsRequire: boolean;\n    propIsCanAsFilter: boolean;\n    propComment: string;\n    values: ValuePropInterface[];\n}\n\nexport interface PropAssignedForCatInterface {\n    propId: number;\n    title: string;\n    comment: string;\n    pos: number;\n    isRequire: boolean;\n    isCanAsFilter: boolean;\n}\n\nexport class PropsAssignedForCat implements PropAssignedForCatInterface {\n    propId: number = 0;\n    title: string = '';\n    comment: string = '';\n    pos: number = 1;\n    isRequire: boolean = false;\n    isCanAsFilter: boolean = false;\n\n    constructor(x: PropFullInterface) {\n        this.propId = x.propId;\n        this.title = x.title + (x.privateComment ? ` (${x.privateComment})` : '');\n        this.comment = x.propComment;\n        this.pos = x.propPos;\n        this.isRequire = x.propIsRequire;\n        this.isCanAsFilter = x.propIsCanAsFilter;\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {PageAdmComponent} from './components/page-adm/page-adm.component';\n\nconst routes: Routes = [\n    {path: '', component: PageAdmComponent},\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class AdmRoutingModule {\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {AdmRoutingModule} from './adm-routing.module';\nimport {DynamicPropComponent} from './components/dynamic-prop/dynamic-prop.component';\nimport {DynamicPropsComponent} from './components/dynamic-props/dynamic-props.component';\nimport {DynamicValueComponent} from './components/dynamic-value/dynamic-value.component';\nimport {DynamicValuesComponent} from './components/dynamic-values/dynamic-values.component';\nimport {FormsAdsDeleteAdsAdidComponent} from './components/forms-ads/forms-ads-delete-ads-adid/forms-ads-delete-ads-adid.component';\nimport {FormsAdsGetAdsAdidComponent} from './components/forms-ads/forms-ads-get-ads-adid/forms-ads-get-ads-adid.component';\nimport {FormsAdsGetAdsComponent} from './components/forms-ads/forms-ads-get-ads/forms-ads-get-ads.component';\nimport {FormsAdsPostAdsComponent} from './components/forms-ads/forms-ads-post-ads/forms-ads-post-ads.component';\nimport {FormsAdsPutAdsAdidComponent} from './components/forms-ads/forms-ads-put-ads-adid/forms-ads-put-ads-adid.component';\nimport {FormsCatsDeleteCatsCatidComponent} from './components/forms-cats/forms-cats-delete-cats-catid/forms-cats-delete-cats-catid.component';\nimport {FormsCatsGetCatsCatidComponent} from './components/forms-cats/forms-cats-get-cats-catid/forms-cats-get-cats-catid.component';\nimport {FormsCatsGetCatsComponent} from './components/forms-cats/forms-cats-get-cats/forms-cats-get-cats.component';\nimport {FormsCatsPostCatsComponent} from './components/forms-cats/forms-cats-post-cats/forms-cats-post-cats.component';\nimport {FormsCatsPutCatsCatidComponent} from './components/forms-cats/forms-cats-put-cats-catid/forms-cats-put-cats-catid.component';\nimport {FormsKindPropsDeleteComponent} from './components/forms-kind-props/forms-kind-props-delete/forms-kind-props-delete.component';\nimport {FormsKindPropsGetAllComponent} from './components/forms-kind-props/forms-kind-props-get-all/forms-kind-props-get-all.component';\nimport {FormsKindPropsGetOneComponent} from './components/forms-kind-props/forms-kind-props-get-one/forms-kind-props-get-one.component';\nimport {FormsKindPropsPostComponent} from './components/forms-kind-props/forms-kind-props-post/forms-kind-props-post.component';\nimport {FormsKindPropsPutComponent} from './components/forms-kind-props/forms-kind-props-put/forms-kind-props-put.component';\nimport {FormsPagesAdAdidComponent} from './components/forms-pages/forms-pages-ad-adid/forms-pages-ad-adid.component';\nimport {FormsPagesMainComponent} from './components/forms-pages/forms-pages-main/forms-pages-main.component';\nimport {FormsPropsDeletePropsPropidComponent} from './components/forms-props/forms-props-delete-props-propid/forms-props-delete-props-propid.component';\nimport {FormsPropsGetPropsComponent} from './components/forms-props/forms-props-get-props/forms-props-get-props.component';\nimport {FormsPropsGetPropsPropidComponent} from './components/forms-props/forms-props-get-props-propid/forms-props-get-props-propid.component';\nimport {FormsPropsPostPropsComponent} from './components/forms-props/forms-props-post-props/forms-props-post-props.component';\nimport {FormsPropsPostPutPropComponent} from './components/forms-props/forms-props-post-put-prop/forms-props-post-put-prop.component';\nimport {FormsPropsPutPropsPropidComponent} from './components/forms-props/forms-props-put-props-propid/forms-props-put-props-propid.component';\nimport {FormsSearchAdsComponent} from './components/forms-search/forms-search-ads/forms-search-ads.component';\nimport {FormsTestComponent} from './components/forms-test/forms-test.component';\nimport {FormsUsersDeleteUsersUseridComponent} from './components/forms-users/forms-users-delete-users-userid/forms-users-delete-users-userid.component';\nimport {FormsUsersGetUsersComponent} from './components/forms-users/forms-users-get-users/forms-users-get-users.component';\nimport {FormsUsersGetUsersUseridComponent} from './components/forms-users/forms-users-get-users-userid/forms-users-get-users-userid.component';\nimport {FormsUsersPostUsersComponent} from './components/forms-users/forms-users-post-users/forms-users-post-users.component';\nimport {FormsUsersPutUsersUseridComponent} from './components/forms-users/forms-users-put-users-userid/forms-users-put-users-userid.component';\nimport {PageAdmComponent} from './components/page-adm/page-adm.component';\nimport {PrettyJsonPipe} from './pipes/pretty-json.pipe';\nimport {SharedModule} from '../shared/shared.module';\n\n@NgModule({\n    declarations: [\n        DynamicPropComponent,\n        DynamicPropsComponent,\n        DynamicValueComponent,\n        DynamicValuesComponent,\n        FormsAdsDeleteAdsAdidComponent,\n        FormsAdsGetAdsAdidComponent,\n        FormsAdsGetAdsComponent,\n        FormsAdsPostAdsComponent,\n        FormsAdsPutAdsAdidComponent,\n        FormsCatsDeleteCatsCatidComponent,\n        FormsCatsGetCatsCatidComponent,\n        FormsCatsGetCatsComponent,\n        FormsCatsPostCatsComponent,\n        FormsCatsPutCatsCatidComponent,\n        FormsKindPropsDeleteComponent,\n        FormsKindPropsGetAllComponent,\n        FormsKindPropsGetOneComponent,\n        FormsKindPropsPostComponent,\n        FormsKindPropsPutComponent,\n        FormsPagesAdAdidComponent,\n        FormsPagesMainComponent,\n        FormsPropsDeletePropsPropidComponent,\n        FormsPropsGetPropsComponent,\n        FormsPropsGetPropsPropidComponent,\n        FormsPropsPostPropsComponent,\n        FormsPropsPostPutPropComponent,\n        FormsPropsPutPropsPropidComponent,\n        FormsSearchAdsComponent,\n        FormsTestComponent,\n        FormsUsersDeleteUsersUseridComponent,\n        FormsUsersGetUsersComponent,\n        FormsUsersGetUsersUseridComponent,\n        FormsUsersPostUsersComponent,\n        FormsUsersPutUsersUseridComponent,\n        PageAdmComponent,\n        PrettyJsonPipe,\n    ],\n    imports: [\n        AdmRoutingModule,\n        CommonModule,\n        ReactiveFormsModule,\n        SharedModule,\n    ],\n    exports: [],\n})\nexport class AdmModule {\n}\n","import {Component, EventEmitter, Input, Output} from '@angular/core';\nimport {FormGroup} from '@angular/forms';\n\n@Component({\n    selector: 'app-dynamic-prop',\n    templateUrl: './dynamic-prop.component.html',\n    styleUrls: ['./dynamic-prop.component.less'],\n})\nexport class DynamicPropComponent {\n    @Input() index: number;\n    @Input() propAssigned: FormGroup;\n    @Output() removed: EventEmitter<number> = new EventEmitter<number>();\n}\n","<div class=\"dynamic-prop\" [formGroup]=\"propAssigned\">\n    <input type=\"hidden\" formControlName=\"propId\"/>\n\n    <div class=\"dynamic-prop_title\">\n        {{ propAssigned.get('title').value }}\n    </div>\n    <div class=\"dynamic-prop_content\">\n        <div>\n            <div class=\"dynamic-prop_inputs\">\n                <div>\n                    <input formControlName=\"comment\" type=\"text\" placeholder=\"комментарий (покажется под свойством)\"/>\n                </div>\n                <div>\n                    <input formControlName=\"pos\" type=\"number\" placeholder=\"позиция\"/>\n                </div>\n            </div>\n            <div class=\"dynamic-prop_dop\">\n                <div>\n                    <label>\n                        <input formControlName=\"isRequire\" type=\"checkbox\"/>\n                        обязателен\n                    </label>\n                </div>\n                <div>\n                    <label>\n                        <input formControlName=\"isCanAsFilter\" type=\"checkbox\"/>\n                        как фильтр (тоже)\n                    </label>\n                </div>\n            </div>\n        </div>\n        <div>\n            <button (click)=\"removed.emit(index)\" type=\"button\">-</button>\n        </div>\n    </div>\n</div>\n","import {AfterViewInit, Component, ElementRef, Input, OnDestroy, OnInit, ViewChild} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {FormArray, FormBuilder} from '@angular/forms';\nimport {PropFullInterface, PropInterface, PropsAssignedForCat} from '../../../../interfaces/response/prop';\nimport {ManagerService} from '../../../../services/manager.service';\n\n@Component({\n    selector: 'app-dynamic-props',\n    templateUrl: './dynamic-props.component.html',\n    styleUrls: ['./dynamic-props.component.less'],\n})\nexport class DynamicPropsComponent implements OnInit, OnDestroy, AfterViewInit {\n    private subscriptions: Subscription[] = [];\n    propsReserv: PropInterface[] = [];\n    @Input() propsAssignedFormArray: FormArray;\n    @ViewChild('select', {static: true}) select: ElementRef;\n\n    constructor(\n        private fb: FormBuilder,\n        private serviceManager: ManagerService,\n    ) {\n    }\n\n    ngOnInit(): void {\n        const s = this.serviceManager.settings$.subscribe(x => this.propsReserv = x.props);\n        this.subscriptions.push(s);\n    }\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach(x => x.unsubscribe());\n    }\n\n    ngAfterViewInit(): void {\n    }\n\n    addItem(): void {\n        let propId: number = parseInt(this.select.nativeElement.value, 10);\n\n        if (!propId) {\n            return;\n        }\n\n        this.propsReserv.forEach((x, i) => {\n            if (x.propId !== propId) {\n                return;\n            }\n\n            const tmp: PropFullInterface = {\n                propId: x.propId,\n                title: x.title,\n                comment: x.comment,\n                propPos: this.propsAssignedFormArray.length + 1,\n                privateComment: x.privateComment,\n                propIsRequire: false,\n                propIsCanAsFilter: false,\n                kindPropId: 0,\n                name: '',\n                suffix: '',\n                kindPropName: '',\n                propComment: '',\n                values: [],\n            };\n            this.propsAssignedFormArray.push(this.fb.group(new PropsAssignedForCat(tmp)));\n            return false; // только один раз\n        });\n\n        this.select.nativeElement.value = 0;\n    }\n\n    isSelected(id: number): boolean {\n        let result: boolean = false;\n\n        if (!this.propsAssignedFormArray.length) {\n            return result;\n        }\n\n        this.propsAssignedFormArray.controls.forEach(x => {\n            if (x.get('propId').value === id) {\n                result = true;\n                return false;\n            }\n        });\n\n        return result;\n    }\n}\n","<div class=\"dynamic-props\">\n    <div class=\"dynamic-props_header\">\n        <div>\n            <select #select>\n                <option value=\"0\"></option>\n                <option *ngFor=\"let x of propsReserv\" [value]=\"x.propId\" [disabled]=\"isSelected(x.propId)\">\n                    {{ x.title }}\n                    {{ x.privateComment ? ' (' + x.privateComment + ')' : '' }}\n                </option>\n            </select>\n        </div>\n        <div>\n            <button (click)=\"addItem()\" type=\"button\">+</button>\n        </div>\n    </div>\n    <div class=\"dynamic-props_body\">\n        <app-dynamic-prop *ngFor=\"let p of propsAssignedFormArray.controls; let i = index\"\n                          [index]=\"i\"\n                          [propAssigned]=\"p\"\n                          (removed)=\"propsAssignedFormArray.removeAt($event)\">\n        </app-dynamic-prop>\n    </div>\n</div>\n","import {Component, EventEmitter, Input, Output} from '@angular/core';\nimport {FormGroup} from '@angular/forms';\n\n@Component({\n    selector: 'app-dynamic-value',\n    templateUrl: './dynamic-value.component.html',\n    styleUrls: ['./dynamic-value.component.less'],\n})\nexport class DynamicValueComponent {\n    @Input() index: number;\n    @Input() value: FormGroup;\n    @Output() removed: EventEmitter<number> = new EventEmitter<number>();\n}\n","<div class=\"dynamic-value\" [formGroup]=\"value\">\n    <div>\n        <input type=\"hidden\" formControlName=\"valueId\"/>\n        <input type=\"hidden\" formControlName=\"propId\"/>\n        <input formControlName=\"title\" type=\"text\" placeholder=\"название\"/>\n    </div>\n    <div>\n        <input formControlName=\"pos\" type=\"number\" placeholder=\"позиция\"/>\n    </div>\n    <div>\n        <button (click)=\"removed.emit(index)\" type=\"button\">-</button>\n    </div>\n</div>\n","import {Component, Input} from '@angular/core';\nimport {FormArray, FormBuilder} from '@angular/forms';\nimport {ValuePropInterface} from '../../../../interfaces/response/value-prop';\n\n@Component({\n    selector: 'app-dynamic-values',\n    templateUrl: './dynamic-values.component.html',\n    styleUrls: ['./dynamic-values.component.less'],\n})\nexport class DynamicValuesComponent {\n    values: ValuePropInterface[] = [];\n    @Input() propId: number;\n    @Input() valuesFormArray: FormArray;\n\n    constructor(\n        private fb: FormBuilder,\n    ) {\n    }\n\n    addItem(): void {\n        this.valuesFormArray.push(this.fb.group({\n            valueId: 0,\n            title: '',\n            pos: this.valuesFormArray.length + 1,\n            propId: this.propId,\n        }));\n    }\n}\n","<div class=\"dynamic-values\">\n    <div class=\"dynamic-values_header\">\n        <div></div>\n        <div>\n            <button (click)=\"addItem()\" type=\"button\">+</button>\n        </div>\n    </div>\n    <div class=\"dynamic-values_body\">\n        <app-dynamic-value *ngFor=\"let value of valuesFormArray.controls; let i = index\"\n                           [index]=\"i\"\n                           [value]=\"value\"\n                           (removed)=\"valuesFormArray.removeAt($event)\">\n        </app-dynamic-value>\n    </div>\n</div>\n","import {Component, EventEmitter, OnDestroy, OnInit, Output} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {AdService} from '../../../../../services/ad.service';\n\n@Component({\n    selector: 'app-forms-ads-delete-ads-adid',\n    templateUrl: './forms-ads-delete-ads-adid.component.html',\n    styleUrls: ['./forms-ads-delete-ads-adid.component.less'],\n})\nexport class FormsAdsDeleteAdsAdidComponent implements OnInit, OnDestroy {\n    private subscriptions: Subscription[] = [];\n    form: FormGroup;\n    @Output() json: EventEmitter<any> = new EventEmitter();\n\n    constructor(\n        private fb: FormBuilder,\n        private serviceAds: AdService,\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.form = this.fb.group({\n            adId: [0, [Validators.required, Validators.min(1)]],\n        });\n    }\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach(x => x.unsubscribe());\n    }\n\n    submitForm({target}): void {\n        if (this.form.invalid) {\n            for (let key in this.form.controls) {\n                const formControl = this.form.get(key);\n\n                if (formControl.status === 'INVALID') {\n                    console.log('INVALID:', key);\n                }\n            }\n            return;\n        }\n\n        const s = this.serviceAds.delete(this.form.get('adId').value).subscribe(x => {\n            this.json.emit(x);\n            this.form.reset();\n        });\n        this.subscriptions.push(s);\n    }\n}\n","<div class=\"page-adm_box\">\n    <div class=\"page-adm_box_title\" appToggleActive>\n        DELETE: /api/v1/ads/:adId\n    </div>\n    <div class=\"page-adm_box_body\">\n        <form [formGroup]=\"form\" (ngSubmit)=\"submitForm($event)\" class=\"form\">\n            <div class=\"form_row\">\n                <div class=\"form_title\">id объявления</div>\n                <input type=\"number\" formControlName=\"adId\" class=\"form_100\"/>\n            </div>\n            <div class=\"form_row\">\n                <input type=\"submit\"/>\n            </div>\n            <div class=\"form_row\">\n                {{ form.value | json }}\n            </div>\n        </form>\n    </div>\n</div>\n","import {Component, EventEmitter, OnDestroy, OnInit, Output} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {AdService} from '../../../../../services/ad.service';\n\n@Component({\n    selector: 'app-forms-ads-get-ads-adid',\n    templateUrl: './forms-ads-get-ads-adid.component.html',\n    styleUrls: ['./forms-ads-get-ads-adid.component.less'],\n})\nexport class FormsAdsGetAdsAdidComponent implements OnInit, OnDestroy {\n    private subscriptions: Subscription[] = [];\n    form: FormGroup;\n    @Output() json: EventEmitter<any> = new EventEmitter();\n\n    constructor(\n        private fb: FormBuilder,\n        private serviceAds: AdService,\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.form = this.fb.group({\n            adId: [0, [Validators.required, Validators.min(1)]],\n        });\n    }\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach(x => x.unsubscribe());\n    }\n\n    submitForm({target}): void {\n        if (this.form.invalid) {\n            for (let key in this.form.controls) {\n                const formControl = this.form.get(key);\n\n                if (formControl.status === 'INVALID') {\n                    console.log('INVALID:', key);\n                }\n            }\n            return;\n        }\n\n        const s = this.serviceAds.getOne(this.form.get('adId').value).subscribe(x => this.json.emit(x));\n        this.subscriptions.push(s);\n    }\n}\n","<div class=\"page-adm_box\">\n    <div class=\"page-adm_box_title\" appToggleActive>\n        GET: /api/v1/ads/:adId\n    </div>\n    <div class=\"page-adm_box_body\">\n        <form [formGroup]=\"form\" (ngSubmit)=\"submitForm($event)\" class=\"form\">\n            <div class=\"form_row\">\n                <div class=\"form_title\">id объявления</div>\n                <input type=\"number\" formControlName=\"adId\" class=\"form_100\"/>\n            </div>\n            <div class=\"form_row\">\n                <input type=\"submit\"/>\n            </div>\n            <div class=\"form_row\">\n                {{ form.value | json }}\n            </div>\n        </form>\n    </div>\n</div>\n","import {Component, EventEmitter, OnDestroy, OnInit, Output} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {CatWithDeepInterface} from '../../../../../interfaces/response/cat';\nimport {AdService} from '../../../../../services/ad.service';\nimport {ManagerService} from '../../../../../services/manager.service';\nimport {Helpers} from '../../../../../helpers';\n\n@Component({\n    selector: 'app-forms-ads-get-ads',\n    templateUrl: './forms-ads-get-ads.component.html',\n    styleUrls: ['./forms-ads-get-ads.component.less'],\n})\nexport class FormsAdsGetAdsComponent implements OnInit, OnDestroy {\n    private subscriptions: Subscription[] = [];\n    form: FormGroup;\n    catTreeOneLevel: CatWithDeepInterface[] = [];\n    @Output() json: EventEmitter<any> = new EventEmitter();\n\n    constructor(\n        private fb: FormBuilder,\n        private serviceAds: AdService,\n        private serviceManager: ManagerService,\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.form = this.fb.group({\n            catId: ['0', Validators.required],\n            limit: [10, [Validators.required, Validators.min(1), Validators.max(100)]],\n            offset: [0, Validators.min(0)],\n        });\n\n        const s = this.serviceManager.settings$\n            .subscribe(x => this.catTreeOneLevel = Helpers.getCatTreeAsOneLevel(x.catsTree));\n        this.subscriptions.push(s);\n    }\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach(x => x.unsubscribe());\n    }\n\n    submitForm({target}): void {\n        if (this.form.invalid) {\n            for (let key in this.form.controls) {\n                const formControl = this.form.get(key);\n\n                if (formControl.status === 'INVALID') {\n                    console.log('INVALID:', key);\n                }\n            }\n            return;\n        }\n\n        const s = this.serviceAds.getFromCat(this.form.value).subscribe(x => this.json.emit(x));\n        this.subscriptions.push(s);\n    }\n}\n","<div class=\"page-adm_box\">\n    <div class=\"page-adm_box_title\" appToggleActive>\n        GET: /api/v1/ads\n    </div>\n    <div class=\"page-adm_box_body\">\n        <form [formGroup]=\"form\" (ngSubmit)=\"submitForm($event)\" class=\"form\">\n            <div class=\"form_row\">\n                <div class=\"form_title\">id категории</div>\n                <select formControlName=\"catId\" class=\"form_100\">\n                    <option value=\"0\"></option>\n                    <option *ngFor=\"let cat of catTreeOneLevel\" [value]=\"cat.catId\">\n                        {{ '|----'.repeat(cat.deep) }} {{ cat.name }}\n                    </option>\n                </select>\n            </div>\n            <div class=\"form_row\">\n                <div class=\"form_title\">лимит</div>\n                <input type=\"number\" formControlName=\"limit\" class=\"form_100\" min=\"1\" value=\"0\"/>\n            </div>\n            <div class=\"form_row\">\n                <div class=\"form_title\">offset</div>\n                <input type=\"number\" formControlName=\"offset\" class=\"form_100\" min=\"0\" value=\"0\"/>\n            </div>\n            <div class=\"form_row\">\n                <input type=\"submit\"/>\n            </div>\n            <div class=\"form_row\">\n                {{ form.value | json }}\n            </div>\n        </form>\n    </div>\n</div>\n","import {Component, EventEmitter, Output} from '@angular/core';\n\n@Component({\n    selector: 'app-forms-ads-post-ads',\n    templateUrl: './forms-ads-post-ads.component.html',\n    styleUrls: ['./forms-ads-post-ads.component.less'],\n})\nexport class FormsAdsPostAdsComponent {\n    @Output() json: EventEmitter<any> = new EventEmitter();\n\n    constructor() {\n    }\n}\n","<div class=\"page-adm_box\">\n    <div class=\"page-adm_box_title\" appToggleActive>\n        POST: /api/v1/ads\n    </div>\n    <div class=\"page-adm_box_body\">\n        <app-ad-form mode=\"private\" (json)=\"json.emit($event)\"></app-ad-form>\n    </div>\n</div>\n","import {AfterViewInit, Component, ElementRef, EventEmitter, OnDestroy, OnInit, Output, ViewChild} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {AdService} from '../../../../../services/ad.service';\nimport {AdFormComponent} from '../../../../../components/ad-form/ad-form.component';\n\n@Component({\n    selector: 'app-forms-ads-put-ads-adid',\n    templateUrl: './forms-ads-put-ads-adid.component.html',\n    styleUrls: ['./forms-ads-put-ads-adid.component.less'],\n})\nexport class FormsAdsPutAdsAdidComponent implements OnInit, OnDestroy, AfterViewInit {\n    private subscriptions: Subscription[] = [];\n    form: FormGroup;\n    @Output() json: EventEmitter<any> = new EventEmitter();\n    @ViewChild('formPostPutWrap', {static: true}) formPostPutWrap: ElementRef;\n    @ViewChild(AdFormComponent) adForm: AdFormComponent;\n\n    constructor(\n        private fb: FormBuilder,\n        private serviceAds: AdService,\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.form = this.fb.group({\n            adId: [0, [Validators.required, Validators.min(1)]],\n        });\n    }\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach(x => x.unsubscribe());\n    }\n\n    ngAfterViewInit(): void {\n    }\n\n    submitForm({target}): void {\n        if (this.form.invalid) {\n            for (let key in this.form.controls) {\n                const formControl = this.form.get(key);\n\n                if (formControl.status === 'INVALID') {\n                    console.log('INVALID:', key);\n                }\n            }\n            return;\n        }\n\n        const s = this.serviceAds.getOne(this.form.get('adId').value).subscribe(x => {\n            this.json.emit(x);\n            this.formPostPutWrap.nativeElement.classList.remove('hidden');\n            this.adForm.ad = x;\n        });\n        this.subscriptions.push(s);\n    }\n}\n","<div class=\"page-adm_box\">\n    <div class=\"page-adm_box_title\" appToggleActive>\n        PUT: /api/v1/ads/:adId\n    </div>\n    <div class=\"page-adm_box_body\">\n        <form [formGroup]=\"form\" (ngSubmit)=\"submitForm($event)\" class=\"form\">\n            <div class=\"form_row\">\n                <div class=\"form_title\">id объявления</div>\n                <input type=\"number\" formControlName=\"adId\" class=\"form_100\"/>\n            </div>\n            <div class=\"form_row\">\n                <input type=\"submit\"/>\n            </div>\n        </form>\n        <div #formPostPutWrap class=\"hidden\">\n            <app-ad-form mode=\"private\" (json)=\"json.emit($event)\"></app-ad-form>\n        </div>\n    </div>\n</div>\n","import {Component, EventEmitter, OnDestroy, OnInit, Output, ViewEncapsulation} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport {CatWithDeepInterface} from '../../../../../interfaces/response/cat';\nimport {ManagerService} from '../../../../../services/manager.service';\nimport {CatService} from '../../../../../services/cat.service';\nimport {Helpers} from '../../../../../helpers';\n\n@Component({\n    selector: 'app-forms-cats-delete-cats-catid',\n    templateUrl: './forms-cats-delete-cats-catid.component.html',\n    styleUrls: ['./forms-cats-delete-cats-catid.component.less'],\n})\nexport class FormsCatsDeleteCatsCatidComponent implements OnInit, OnDestroy {\n    private subscriptions: Subscription[] = [];\n    formDeleteCatsCatId: FormGroup;\n    catTreeOneLevel: CatWithDeepInterface[] = [];\n    @Output() json: EventEmitter<any> = new EventEmitter();\n\n    constructor(\n        private fb: FormBuilder,\n        private serviceCats: CatService,\n        private serviceManager: ManagerService,\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.formDeleteCatsCatId = this.fb.group({\n            catId: 0,\n        });\n        const s = this.serviceManager.settings$\n            .subscribe(x => this.catTreeOneLevel = Helpers.getCatTreeAsOneLevel(x.catsTree));\n        this.subscriptions.push(s);\n    }\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach(x => x.unsubscribe());\n    }\n\n    submitFormDeleteCatsCatId({target}): void {\n        if (this.formDeleteCatsCatId.invalid) {\n            for (let key in this.formDeleteCatsCatId.controls) {\n                const formControl = this.formDeleteCatsCatId.get(key);\n\n                if (formControl.status === 'INVALID') {\n                    console.log('INVALID:', key);\n                }\n            }\n            return;\n        }\n\n        const s = this.serviceCats.delete(this.formDeleteCatsCatId.get('catId').value).subscribe(x => {\n            this.json.emit(x);\n            target.reset();\n            this.formDeleteCatsCatId.reset();\n        });\n        this.subscriptions.push(s);\n    }\n}\n","<div class=\"page-adm_box\">\n    <div class=\"page-adm_box_title\" appToggleActive>\n        DELETE: /api/v1/cats/:catId\n    </div>\n    <div class=\"page-adm_box_body\">\n        <form [formGroup]=\"formDeleteCatsCatId\" (ngSubmit)=\"submitFormDeleteCatsCatId($event)\" class=\"form\">\n            <div class=\"form_row\">\n                <div class=\"form_title\">catId</div>\n                <select formControlName=\"catId\" class=\"form_100\">\n                    <option value=\"0\"></option>\n                    <option *ngFor=\"let cat of catTreeOneLevel\" [value]=\"cat.catId\">\n                        {{ '|----'.repeat(cat.deep) }} {{ cat.name }}\n                    </option>\n                </select>\n            </div>\n            <div class=\"form_row\">\n                <input type=\"submit\"/>\n            </div>\n            <div class=\"form_row\">\n                {{ formDeleteCatsCatId.value | json }}\n            </div>\n        </form>\n    </div>\n</div>\n","import {Component, EventEmitter, OnDestroy, OnInit, Output, ViewEncapsulation} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport {SettingsInterface} from '../../../../../interfaces/response/settings';\nimport {CatWithDeepInterface} from '../../../../../interfaces/response/cat';\nimport {CatService} from '../../../../../services/cat.service';\nimport {ManagerService} from '../../../../../services/manager.service';\nimport {Helpers} from '../../../../../helpers';\n\n@Component({\n    selector: 'app-forms-cats-get-cats-catid',\n    templateUrl: './forms-cats-get-cats-catid.component.html',\n    styleUrls: ['./forms-cats-get-cats-catid.component.less'],\n})\nexport class FormsCatsGetCatsCatidComponent implements OnInit, OnDestroy {\n    private subscriptions: Subscription[] = [];\n    formGetCatsCatId: FormGroup;\n    settings: SettingsInterface;\n    catTreeOneLevel: CatWithDeepInterface[] = [];\n    @Output() json: EventEmitter<any> = new EventEmitter();\n\n    constructor(\n        private fb: FormBuilder,\n        private serviceCats: CatService,\n        private serviceManager: ManagerService,\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.formGetCatsCatId = this.fb.group({\n            catId: 0,\n            withPropsOnlyFiltered: false,\n        });\n        const s = this.serviceManager.settings$\n            .subscribe(x => this.catTreeOneLevel = Helpers.getCatTreeAsOneLevel(x.catsTree));\n        this.subscriptions.push(s);\n    }\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach(x => x.unsubscribe());\n    }\n\n    submitFormGetCatsCatId({target}): void {\n        if (this.formGetCatsCatId.invalid) {\n            for (let key in this.formGetCatsCatId.controls) {\n                const formControl = this.formGetCatsCatId.get(key);\n\n                if (formControl.status === 'INVALID') {\n                    console.log('INVALID:', key);\n                }\n            }\n            return;\n        }\n\n        const catId: number = parseInt(this.formGetCatsCatId.get('catId').value, 10);\n        const isWithPropsOnlyFiltered: boolean = this.formGetCatsCatId.get('withPropsOnlyFiltered').value;\n        const s = this.serviceCats.getCatId(catId, isWithPropsOnlyFiltered).subscribe(x => this.json.emit(x));\n        this.subscriptions.push(s);\n    }\n}\n","<div class=\"page-adm_box\">\n    <div class=\"page-adm_box_title\" appToggleActive>\n        GET: /api/v1/cats/:catId\n    </div>\n    <div class=\"page-adm_box_body\">\n        <form [formGroup]=\"formGetCatsCatId\" (ngSubmit)=\"submitFormGetCatsCatId($event)\" class=\"form\">\n            <div class=\"form_row\">\n                <div class=\"form_title\">catId</div>\n                <select formControlName=\"catId\" class=\"form_100\">\n                    <option value=\"0\"></option>\n                    <option *ngFor=\"let cat of catTreeOneLevel\" [value]=\"cat.catId\">\n                        {{ '|----'.repeat(cat.deep) }} {{ cat.name }}\n                    </option>\n                </select>\n            </div>\n            <div class=\"form_row\">\n                <label>\n                    <input type=\"checkbox\" formControlName=\"withPropsOnlyFiltered\"/> св-ва как фильтры\n                </label>\n            </div>\n            <div class=\"form_row\">\n                <input type=\"submit\"/>\n            </div>\n            <div class=\"form_row\">\n                {{ formGetCatsCatId.value | json }}\n            </div>\n        </form>\n    </div>\n</div>\n","import {Component, EventEmitter, OnDestroy, OnInit, Output, ViewEncapsulation} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport {CatService} from '../../../../../services/cat.service';\n\n@Component({\n    selector: 'app-forms-cats-get-cats',\n    templateUrl: './forms-cats-get-cats.component.html',\n    styleUrls: ['./forms-cats-get-cats.component.less'],\n})\nexport class FormsCatsGetCatsComponent implements OnInit, OnDestroy {\n    private subscriptions: Subscription[] = [];\n    formGetCats: FormGroup;\n    @Output() json: EventEmitter<any> = new EventEmitter();\n\n    constructor(\n        private fb: FormBuilder,\n        private serviceCats: CatService,\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.formGetCats = this.fb.group({\n            asTree: false,\n        });\n    }\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach(x => x.unsubscribe());\n    }\n\n    submitFormGetCats({target}): void {\n        if (this.formGetCats.invalid) {\n            for (let key in this.formGetCats.controls) {\n                const formControl = this.formGetCats.get(key);\n\n                if (formControl.status === 'INVALID') {\n                    console.log('INVALID:', key);\n                }\n            }\n            return;\n        }\n\n        let fn: any = this.formGetCats.get('asTree').value ? this.serviceCats.getTree() : this.serviceCats.getList();\n        const s = fn.subscribe(x => this.json.emit(x));\n        this.subscriptions.push(s);\n    }\n}\n","<div class=\"page-adm_box\">\n    <div class=\"page-adm_box_title\" appToggleActive>\n        GET: /api/v1/cats\n    </div>\n    <div class=\"page-adm_box_body\">\n        <form [formGroup]=\"formGetCats\" (ngSubmit)=\"submitFormGetCats($event)\" class=\"form\">\n            <div class=\"form_row\">\n                <label>\n                    <input type=\"checkbox\" formControlName=\"asTree\"/> как дерево\n                </label>\n            </div>\n            <div class=\"form_row\">\n                <input type=\"submit\"/>\n            </div>\n            <div class=\"form_row\">\n                {{ formGetCats.value | json }}\n            </div>\n        </form>\n    </div>\n</div>\n","import {Component, EventEmitter, OnDestroy, OnInit, Output} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {FormArray, FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {SettingsInterface} from '../../../../../interfaces/response/settings';\nimport {CatWithDeepInterface} from '../../../../../interfaces/response/cat';\nimport {PropAssignedForCatInterface} from '../../../../../interfaces/response/prop';\nimport {CatService} from '../../../../../services/cat.service';\nimport {ManagerService} from '../../../../../services/manager.service';\nimport {Helpers} from '../../../../../helpers';\n\n@Component({\n    selector: 'app-forms-cats-post-cats',\n    templateUrl: './forms-cats-post-cats.component.html',\n    styleUrls: ['./forms-cats-post-cats.component.less'],\n})\nexport class FormsCatsPostCatsComponent implements OnInit, OnDestroy {\n    private subscriptions: Subscription[] = [];\n    form: FormGroup;\n    settings: SettingsInterface;\n    catTreeOneLevel: CatWithDeepInterface[] = [];\n    @Output() json: EventEmitter<any> = new EventEmitter();\n\n    constructor(\n        private fb: FormBuilder,\n        private serviceCats: CatService,\n        private serviceManager: ManagerService,\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.form = this.fb.group({\n            name: ['', [Validators.required, Validators.minLength(2)]],\n            parentId: [0, Validators.min(0)],\n            pos: [0, Validators.min(0)],\n            priceAlias: '',\n            priceSuffix: '',\n            titleHelp: '',\n            titleComment: '',\n            isAutogenerateTitle: false,\n            propsAssignedForCat: this.fb.array(<PropAssignedForCatInterface[]> []),\n        });\n\n        const s = this.serviceManager.settings$\n            .subscribe(x => this.catTreeOneLevel = Helpers.getCatTreeAsOneLevel(x.catsTree));\n        this.subscriptions.push(s);\n    }\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach(x => x.unsubscribe());\n    }\n\n    submitFormPostCats({target}): void {\n        if (this.form.invalid) {\n            for (let key in this.form.controls) {\n                const formControl = this.form.get(key);\n\n                if (formControl.status === 'INVALID') {\n                    console.log('INVALID:', key);\n                }\n            }\n            return;\n        }\n\n        const s = this.serviceCats.post(this.form.value).subscribe(x => {\n            this.json.emit(x);\n            target.reset();\n            this.form.reset();\n            (this.form.get('propsAssignedForCat') as FormArray).clear();\n        });\n        this.subscriptions.push(s);\n    }\n}\n","<div class=\"page-adm_box\">\n    <div class=\"page-adm_box_title\" appToggleActive>\n        POST: /api/v1/cats\n    </div>\n    <div class=\"page-adm_box_body\">\n        <form [formGroup]=\"form\" (ngSubmit)=\"submitFormPostCats($event)\" class=\"form\">\n            <div class=\"form_row\">\n                <div class=\"form_title\">название</div>\n                <input formControlName=\"name\" class=\"form_100\" type=\"text\"/>\n            </div>\n            <div class=\"form_row\">\n                <div class=\"form_title\">parentId</div>\n                <select formControlName=\"parentId\" class=\"form_100\">\n                    <option value=\"0\"></option>\n                    <option *ngFor=\"let cat of catTreeOneLevel\" [value]=\"cat.catId\">\n                        {{ '|----'.repeat(cat.deep) }} {{ cat.name }}\n                    </option>\n                </select>\n            </div>\n            <div class=\"form_row\">\n                <div class=\"form_title\">позиция</div>\n                <input type=\"number\" formControlName=\"pos\" class=\"form_100\"/>\n            </div>\n            <div class=\"form_row\">\n                <div class=\"form_title\">алиас для цены</div>\n                <input type=\"text\" formControlName=\"priceAlias\" class=\"form_100\"/>\n            </div>\n            <div class=\"form_row\">\n                <div class=\"form_title\">суффик на цену</div>\n                <input type=\"text\" formControlName=\"priceSuffix\" class=\"form_100\"/>\n            </div>\n            <div class=\"form_row\">\n                <div class=\"form_title\">вспомог-ый текст для заголовка</div>\n                <input type=\"text\" formControlName=\"titleHelp\" class=\"form_100\"/>\n            </div>\n            <div class=\"form_row\">\n                <div class=\"form_title\">комментарий под заголовок</div>\n                <input type=\"text\" formControlName=\"titleComment\" class=\"form_100\"/>\n            </div>\n            <div class=\"form_row\">\n                <label>\n                    <input type=\"checkbox\" formControlName=\"isAutogenerateTitle\"/> isAutogenerateTitle\n                </label>\n            </div>\n            <div class=\"form_row\">\n                <div class=\"form_title\">назначенные свойства</div>\n                <app-dynamic-props formArrayName=\"propsAssignedForCat\"\n                                   [propsAssignedFormArray]=\"form.get('propsAssignedForCat')\"></app-dynamic-props>\n            </div>\n            <div class=\"form_row\">\n                <input type=\"submit\"/>\n            </div>\n            <div class=\"form_row\">\n                {{ form.value | json }}\n            </div>\n        </form>\n    </div>\n</div>\n","import {AfterViewInit, Component, ElementRef, EventEmitter, OnDestroy, OnInit, Output, ViewChild} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {FormArray, FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {SettingsInterface} from '../../../../../interfaces/response/settings';\nimport {CatWithDeepInterface} from '../../../../../interfaces/response/cat';\nimport {PropAssignedForCatInterface, PropsAssignedForCat} from '../../../../../interfaces/response/prop';\nimport {CatService} from '../../../../../services/cat.service';\nimport {ManagerService} from '../../../../../services/manager.service';\nimport {Helpers} from '../../../../../helpers';\n\n@Component({\n    selector: 'app-forms-cats-put-cats-catid',\n    templateUrl: './forms-cats-put-cats-catid.component.html',\n    styleUrls: ['./forms-cats-put-cats-catid.component.less'],\n})\nexport class FormsCatsPutCatsCatidComponent implements OnInit, OnDestroy, AfterViewInit {\n    private subscriptions: Subscription[] = [];\n    formGet: FormGroup;\n    formPut: FormGroup;\n    settings: SettingsInterface;\n    catTreeOneLevel: CatWithDeepInterface[] = [];\n    @Output() json: EventEmitter<any> = new EventEmitter();\n    @ViewChild('formPutEl', {static: true}) formPutEl: ElementRef;\n\n    constructor(\n        private fb: FormBuilder,\n        private serviceCats: CatService,\n        private serviceManager: ManagerService,\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.formGet = this.fb.group({\n            catId: 0,\n        });\n        this.formPut = this.fb.group({\n            catId: [0, [Validators.required, Validators.min(1)]],\n            name: ['', [Validators.required, Validators.minLength(2)]],\n            slug: '',\n            parentId: [0, Validators.min(0)],\n            pos: [0, Validators.min(0)],\n            isDisabled: false,\n            priceAlias: '',\n            priceSuffix: '',\n            titleHelp: '',\n            titleComment: '',\n            isAutogenerateTitle: false,\n            propsAssignedForCat: this.fb.array(<PropAssignedForCatInterface[]> []),\n        });\n\n        const s = this.serviceManager.settings$\n            .subscribe(x => this.catTreeOneLevel = Helpers.getCatTreeAsOneLevel(x.catsTree));\n        this.subscriptions.push(s);\n    }\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach(x => x.unsubscribe());\n    }\n\n    ngAfterViewInit(): void {\n    }\n\n    submitFormGetCatDataForPut({target}): void {\n        if (this.formGet.invalid) {\n            for (let key in this.formGet.controls) {\n                const formControl = this.formGet.get(key);\n\n                if (formControl.status === 'INVALID') {\n                    console.log('INVALID:', key);\n                }\n            }\n            return;\n        }\n\n        const catId: number = this.formGet.get('catId').value;\n        const s = this.serviceCats.getCatId(catId, false).subscribe(x => {\n            this.json.emit(x);\n            this.formPutEl.nativeElement.classList.remove('hidden');\n\n            this.formPut.reset();\n            (this.formPut.get('propsAssignedForCat') as FormArray).clear();\n            this.formPut.patchValue(x);\n\n            // преобразуем нормально в массивы св-ва и их значения\n            const aProps = x.props.map(y => this.fb.group(new PropsAssignedForCat(y)));\n            this.formPut.setControl('propsAssignedForCat', this.fb.array(aProps));\n        });\n        this.subscriptions.push(s);\n    }\n\n    submitFormPutCatsCatId({target}): void {\n        if (this.formPut.invalid) {\n            for (let key in this.formPut.controls) {\n                const formControl = this.formPut.get(key);\n\n                if (formControl.status === 'INVALID') {\n                    console.log('INVALID:', key);\n                }\n            }\n            return;\n        }\n\n        const s = this.serviceCats.put(this.formPut.get('catId').value, this.formPut.value)\n            .subscribe(x => this.json.emit(x));\n        this.subscriptions.push(s);\n    }\n}\n","<div class=\"page-adm_box\">\n    <div class=\"page-adm_box_title\" appToggleActive>\n        PUT: /api/v1/cats/:catId\n    </div>\n    <div class=\"page-adm_box_body\">\n        <form [formGroup]=\"formGet\" (ngSubmit)=\"submitFormGetCatDataForPut($event)\" class=\"form\">\n            <div class=\"form_row\">\n                <div class=\"form_title\">id категории</div>\n                <select formControlName=\"catId\" class=\"form_100\">\n                    <option value=\"0\"></option>\n                    <option *ngFor=\"let cat of catTreeOneLevel\" [value]=\"cat.catId\">\n                        {{ '|----'.repeat(cat.deep) }} {{ cat.name }}\n                    </option>\n                </select>\n            </div>\n            <div class=\"form_row\">\n                <input type=\"submit\"/>\n            </div>\n        </form>\n        <form #formPutEl [formGroup]=\"formPut\" (ngSubmit)=\"submitFormPutCatsCatId($event)\"\n              class=\"form hidden\">\n\n            <input type=\"hidden\" formControlName=\"catId\"/>\n\n            <div class=\"form_row\">\n                <div class=\"form_title\">название</div>\n                <input type=\"text\" formControlName=\"name\" class=\"form_100\"/>\n            </div>\n            <div class=\"form_row\">\n                <div class=\"form_title\">slug</div>\n                <input type=\"text\" formControlName=\"slug\" readonly=\"readonly\" class=\"form_100\"/>\n            </div>\n            <div class=\"form_row\">\n                <div class=\"form_title\">id родителя</div>\n                <select formControlName=\"parentId\" class=\"form_100\">\n                    <option value=\"0\"></option>\n                    <option *ngFor=\"let cat of catTreeOneLevel\" [value]=\"cat.catId\">\n                        {{ '|----'.repeat(cat.deep) }} {{ cat.name }}\n                    </option>\n                </select>\n            </div>\n            <div class=\"form_row\">\n                <div class=\"form_title\">позиция</div>\n                <input type=\"number\" formControlName=\"pos\" class=\"form_100\"/>\n            </div>\n            <div class=\"form_row\">\n                <div class=\"form_title\">алиас для цены</div>\n                <input type=\"text\" formControlName=\"priceAlias\" class=\"form_100\"/>\n            </div>\n            <div class=\"form_row\">\n                <div class=\"form_title\">суффик на цену</div>\n                <input type=\"text\" formControlName=\"priceSuffix\" class=\"form_100\"/>\n            </div>\n            <div class=\"form_row\">\n                <div class=\"form_title\">вспомог-ый текст для заголовока</div>\n                <input type=\"text\" formControlName=\"titleHelp\" class=\"form_100\"/>\n            </div>\n            <div class=\"form_row\">\n                <div class=\"form_title\">комментарий под заголовок</div>\n                <input type=\"text\" formControlName=\"titleComment\" class=\"form_100\"/>\n            </div>\n            <div class=\"form_row\">\n                <label>\n                    <input type=\"checkbox\" formControlName=\"isAutogenerateTitle\"/> isAutogenerateTitle\n                </label>\n            </div>\n            <div class=\"form_row\">\n                <label>\n                    <input type=\"checkbox\" formControlName=\"isDisabled\"/> is_disabled\n                </label>\n            </div>\n            <div class=\"form_row\">\n                <div class=\"form_title\">назначенные свойства</div>\n                <app-dynamic-props formArrayName=\"propsAssignedForCat\"\n                                   [propsAssignedFormArray]=\"formPut.get('propsAssignedForCat')\"></app-dynamic-props>\n            </div>\n            <div class=\"form_row\">\n                <input type=\"submit\"/>\n            </div>\n            <div class=\"form_row\">\n                {{ formPut.value | json }}\n            </div>\n        </form>\n    </div>\n</div>\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {KindPropsService} from '../../../../../services/kind-props.service';\n\n@Component({\n    selector: 'app-forms-kind-props-delete',\n    templateUrl: './forms-kind-props-delete.component.html',\n    styleUrls: ['./forms-kind-props-delete.component.less'],\n})\nexport class FormsKindPropsDeleteComponent implements OnInit {\n    private subscriptions: Subscription[] = [];\n    form: FormGroup;\n    @Output() json: EventEmitter<any> = new EventEmitter();\n\n    constructor(\n        private fb: FormBuilder,\n        private serviceKindProps: KindPropsService,\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.form = this.fb.group({\n            kindPropId: [0, [Validators.required, Validators.min(1)]],\n        });\n    }\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach(x => x.unsubscribe());\n    }\n\n    submitForm({target}): void {\n        if (this.form.invalid) {\n            for (let key in this.form.controls) {\n                const formControl = this.form.get(key);\n\n                if (formControl.status === 'INVALID') {\n                    console.log('INVALID:', key);\n                }\n            }\n            return;\n        }\n\n        const s = this.serviceKindProps.delete(this.form.get('kindPropId').value).subscribe(x => {\n            this.json.emit(x);\n            this.form.reset();\n        });\n        this.subscriptions.push(s);\n    }\n}\n","<div class=\"page-adm_box\">\n    <div class=\"page-adm_box_title\" appToggleActive>\n        DELETE: /api/v1/kind_props/:kindPropId\n    </div>\n    <div class=\"page-adm_box_body\">\n        <form [formGroup]=\"form\" (ngSubmit)=\"submitForm($event)\" class=\"form\">\n            <div class=\"form_row\">\n                <div class=\"form_title\">id типа свойства</div>\n                <input type=\"number\" formControlName=\"kindPropId\" class=\"form_100\"/>\n            </div>\n            <div class=\"form_row\">\n                <input type=\"submit\"/>\n            </div>\n            <div class=\"form_row\">\n                {{ form.value | json }}\n            </div>\n        </form>\n    </div>\n</div>\n","import {Component, EventEmitter, OnDestroy, OnInit, Output} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport {KindPropsService} from '../../../../../services/kind-props.service';\n\n@Component({\n    selector: 'app-forms-kind-props-get-all',\n    templateUrl: './forms-kind-props-get-all.component.html',\n    styleUrls: ['./forms-kind-props-get-all.component.less'],\n})\nexport class FormsKindPropsGetAllComponent implements OnInit, OnDestroy {\n    private subscriptions: Subscription[] = [];\n    form: FormGroup;\n    @Output() json: EventEmitter<any> = new EventEmitter();\n\n    constructor(\n        private fb: FormBuilder,\n        private serviceKindProps: KindPropsService,\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.form = this.fb.group({});\n    }\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach(x => x.unsubscribe());\n    }\n\n    submitForm({target}): void {\n        const s = this.serviceKindProps.getAll().subscribe(x => this.json.emit(x));\n        this.subscriptions.push(s);\n    }\n}\n","<div class=\"page-adm_box\">\n    <div class=\"page-adm_box_title\" appToggleActive>\n        GET: /api/v1/kind_props\n    </div>\n    <div class=\"page-adm_box_body\">\n        <form [formGroup]=\"form\" (ngSubmit)=\"submitForm($event)\" class=\"form\">\n            <div class=\"form_row\">\n                <input type=\"submit\"/>\n            </div>\n        </form>\n    </div>\n</div>\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {KindPropsService} from '../../../../../services/kind-props.service';\n\n@Component({\n    selector: 'app-forms-kind-props-get-one',\n    templateUrl: './forms-kind-props-get-one.component.html',\n    styleUrls: ['./forms-kind-props-get-one.component.less'],\n})\nexport class FormsKindPropsGetOneComponent implements OnInit {\n    private subscriptions: Subscription[] = [];\n    form: FormGroup;\n    @Output() json: EventEmitter<any> = new EventEmitter();\n\n    constructor(\n        private fb: FormBuilder,\n        private serviceKindProps: KindPropsService,\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.form = this.fb.group({\n            kindPropId: [0, [Validators.required, Validators.min(1)]],\n        });\n    }\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach(x => x.unsubscribe());\n    }\n\n    submitForm({target}): void {\n        if (this.form.invalid) {\n            for (let key in this.form.controls) {\n                const formControl = this.form.get(key);\n\n                if (formControl.status === 'INVALID') {\n                    console.log('INVALID:', key);\n                }\n            }\n            return;\n        }\n\n        const s = this.serviceKindProps.getOne(this.form.get('kindPropId').value).subscribe(x => this.json.emit(x));\n        this.subscriptions.push(s);\n    }\n}\n","<div class=\"page-adm_box\">\n    <div class=\"page-adm_box_title\" appToggleActive>\n        GET: /api/v1/kind_props/:kindPropId\n    </div>\n    <div class=\"page-adm_box_body\">\n        <form [formGroup]=\"form\" (ngSubmit)=\"submitForm($event)\" class=\"form\">\n            <div class=\"form_row\">\n                <div class=\"form_title\">id вида свойства</div>\n                <input type=\"number\" formControlName=\"kindPropId\" class=\"form_100\"/>\n            </div>\n            <div class=\"form_row\">\n                <input type=\"submit\"/>\n            </div>\n            <div class=\"form_row\">\n                {{ form.value | json }}\n            </div>\n        </form>\n    </div>\n</div>\n","import {Component, EventEmitter, OnDestroy, OnInit, Output} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {KindPropsService} from '../../../../../services/kind-props.service';\n\n@Component({\n    selector: 'app-forms-kind-props-post',\n    templateUrl: './forms-kind-props-post.component.html',\n    styleUrls: ['./forms-kind-props-post.component.less'],\n})\nexport class FormsKindPropsPostComponent implements OnInit, OnDestroy {\n    private subscriptions: Subscription[] = [];\n    form: FormGroup;\n    @Output() json: EventEmitter<any> = new EventEmitter();\n\n    constructor(\n        private fb: FormBuilder,\n        private serviceKindProps: KindPropsService,\n    ) {}\n\n    ngOnInit(): void {\n        this.form = this.fb.group({\n            name: ['', Validators.required],\n        });\n    }\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach(x => x.unsubscribe());\n    }\n\n    submitForm({target}): void {\n        if (this.form.invalid) {\n            for (let key in this.form.controls) {\n                const formControl = this.form.get(key);\n\n                if (formControl.status === 'INVALID') {\n                    console.log('INVALID:', key);\n                }\n            }\n            return;\n        }\n\n        const s = this.serviceKindProps.create(this.form.value).subscribe(x => {\n            this.json.emit(x);\n            this.form.reset();\n        });\n        this.subscriptions.push(s);\n    }\n}\n","<div class=\"page-adm_box\">\n    <div class=\"page-adm_box_title\" appToggleActive>\n        POST: /api/v1/kind_props\n    </div>\n    <div class=\"page-adm_box_body\">\n        <form [formGroup]=\"form\" (ngSubmit)=\"submitForm($event)\" class=\"form\">\n            <div class=\"form_row\">\n                <div class=\"form_title\">Название</div>\n                <input type=\"text\" formControlName=\"name\" class=\"form_100\"/>\n            </div>\n            <div class=\"form_row\">\n                <input type=\"submit\"/>\n            </div>\n            <div class=\"form_row\">\n                {{ form.value | json }}\n            </div>\n        </form>\n    </div>\n</div>\n","import {AfterViewInit, Component, ElementRef, EventEmitter, OnDestroy, OnInit, Output, ViewChild} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {KindPropsService} from '../../../../../services/kind-props.service';\n\n@Component({\n    selector: 'app-forms-kind-props-put',\n    templateUrl: './forms-kind-props-put.component.html',\n    styleUrls: ['./forms-kind-props-put.component.less'],\n})\nexport class FormsKindPropsPutComponent implements OnInit, OnDestroy, AfterViewInit {\n    private subscriptions: Subscription[] = [];\n    formGet: FormGroup;\n    form: FormGroup;\n    @Output() json: EventEmitter<any> = new EventEmitter();\n    @ViewChild('formPut', {static: true}) formPut: ElementRef;\n\n    constructor(\n        private fb: FormBuilder,\n        private serviceKindProps: KindPropsService,\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.formGet = this.fb.group({\n            kindPropId: [0, [Validators.required, Validators.min(1)]],\n        });\n        this.form = this.fb.group({\n            kindPropId: [0, [Validators.required, Validators.min(0)]],\n            name: ['', Validators.required],\n        });\n    }\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach(x => x.unsubscribe());\n    }\n\n    ngAfterViewInit(): void {\n    }\n\n    submitFormGet({target}): void {\n        if (this.formGet.invalid) {\n            for (let key in this.formGet.controls) {\n                const formControl = this.formGet.get(key);\n\n                if (formControl.status === 'INVALID') {\n                    console.log('INVALID:', key);\n                }\n            }\n            return;\n        }\n\n        const kindPropId: number = this.formGet.get('kindPropId').value;\n        const s = this.serviceKindProps.getOne(kindPropId).subscribe(x => {\n            this.json.emit(x);\n            this.formPut.nativeElement.classList.remove('hidden');\n            this.form.reset();\n            this.form.patchValue(x);\n        });\n        this.subscriptions.push(s);\n    }\n\n    submitFormPut({target}): void {\n        if (this.form.invalid) {\n            for (let key in this.form.controls) {\n                const formControl = this.form.get(key);\n\n                if (formControl.status === 'INVALID') {\n                    console.log('INVALID:', key);\n                }\n            }\n            return;\n        }\n\n        const s = this.serviceKindProps.update(this.form.get('kindPropId').value, this.form.value)\n            .subscribe(x => this.json.emit(x));\n        this.subscriptions.push(s);\n    }\n}\n","<div class=\"page-adm_box\">\n    <div class=\"page-adm_box_title\" appToggleActive>\n        PUT: /api/v1/kind_props/:kindPropId\n    </div>\n    <div class=\"page-adm_box_body\">\n        <form [formGroup]=\"formGet\" (ngSubmit)=\"submitFormGet($event)\" class=\"form\">\n            <div class=\"form_row\">\n                <div class=\"form_title\">id вида св-ва</div>\n                <input type=\"number\" formControlName=\"kindPropId\" class=\"form_100\"/>\n            </div>\n            <div class=\"form_row\">\n                <input type=\"submit\"/>\n            </div>\n        </form>\n        <form #formPut [formGroup]=\"form\" (ngSubmit)=\"submitFormPut($event)\" class=\"form hidden\">\n            <input type=\"hidden\" formControlName=\"kindPropId\"/>\n\n            <div class=\"form_row\">\n                <div class=\"form_title\">название</div>\n                <input type=\"text\" formControlName=\"name\" class=\"form_100\"/>\n            </div>\n            <div class=\"form_row\">\n                <input type=\"submit\"/>\n            </div>\n            <div class=\"form_row\">\n                {{ form.value | json }}\n            </div>\n        </form>\n    </div>\n</div>\n","import {Component, EventEmitter, OnDestroy, OnInit, Output} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {PagesService} from '../../../../../services/pages.service';\n\n@Component({\n    selector: 'app-forms-pages-ad-adid',\n    templateUrl: './forms-pages-ad-adid.component.html',\n    styleUrls: ['./forms-pages-ad-adid.component.less'],\n})\nexport class FormsPagesAdAdidComponent implements OnInit, OnDestroy {\n    private subscriptions: Subscription[] = [];\n    form: FormGroup;\n    @Output() json: EventEmitter<any> = new EventEmitter();\n\n    constructor(\n        private fb: FormBuilder,\n        private servicePages: PagesService,\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.form = this.fb.group({\n            adId: [0, [Validators.required, Validators.min(1)]],\n        });\n    }\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach(x => x.unsubscribe());\n    }\n\n    submitForm({target}): void {\n        if (this.form.invalid) {\n            for (let key in this.form.controls) {\n                const formControl = this.form.get(key);\n\n                if (formControl.status === 'INVALID') {\n                    console.log('INVALID:', key);\n                }\n            }\n            return;\n        }\n\n        const s = this.servicePages.pageAd(this.form.get('adId').value)\n            .subscribe(x => this.json.emit(x));\n        this.subscriptions.push(s);\n    }\n}\n","<div class=\"page-adm_box\">\n    <div class=\"page-adm_box_title\" appToggleActive>\n        GET: /api/v1/pages/ad/:adId\n    </div>\n    <div class=\"page-adm_box_body\">\n        <form [formGroup]=\"form\" (ngSubmit)=\"submitForm($event)\" class=\"form\">\n            <div class=\"form_row\">\n                <div class=\"form_title\">adId</div>\n                <input type=\"number\" formControlName=\"adId\" class=\"form_100\"/>\n            </div>\n            <div class=\"form_row\">\n                <input type=\"submit\"/>\n            </div>\n            <div class=\"form_row\">\n                {{ form.value | json }}\n            </div>\n        </form>\n    </div>\n</div>\n","import {Component, EventEmitter, OnDestroy, OnInit, Output} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {PagesService} from '../../../../../services/pages.service';\n\n@Component({\n    selector: 'app-forms-pages-main',\n    templateUrl: './forms-pages-main.component.html',\n    styleUrls: ['./forms-pages-main.component.less'],\n})\nexport class FormsPagesMainComponent implements OnInit, OnDestroy {\n    private subscriptions: Subscription[] = [];\n    form: FormGroup;\n    @Output() json: EventEmitter<any> = new EventEmitter();\n\n    constructor(\n        private fb: FormBuilder,\n        private servicePages: PagesService,\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.form = this.fb.group({\n            limit: [0, [Validators.min(1), Validators.max(10)]],\n        });\n    }\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach(x => x.unsubscribe());\n    }\n\n    submitForm({target}): void {\n        if (this.form.invalid) {\n            for (let key in this.form.controls) {\n                const formControl = this.form.get(key);\n\n                if (formControl.status === 'INVALID') {\n                    console.log('INVALID:', key);\n                }\n            }\n            return;\n        }\n\n        const s = this.servicePages.pageMain(this.form.get('limit').value).subscribe(x => this.json.emit(x));\n        this.subscriptions.push(s);\n    }\n}\n","<div class=\"page-adm_box\">\n    <div class=\"page-adm_box_title\" appToggleActive>\n        GET: /api/v1/pages/main\n    </div>\n    <div class=\"page-adm_box_body\">\n        <form [formGroup]=\"form\" (ngSubmit)=\"submitForm($event)\" class=\"form\">\n            <div class=\"form_row\">\n                <div class=\"form_title\">limit</div>\n                <input type=\"number\" formControlName=\"limit\" class=\"form_100\"/>\n            </div>\n            <div class=\"form_row\">\n                <input type=\"submit\"/>\n            </div>\n            <div class=\"form_row\">\n                {{ form.value | json }}\n            </div>\n        </form>\n    </div>\n</div>\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {PropService} from '../../../../../services/prop.service';\n\n@Component({\n    selector: 'app-forms-props-delete-props-propid',\n    templateUrl: './forms-props-delete-props-propid.component.html',\n    styleUrls: ['./forms-props-delete-props-propid.component.less'],\n})\nexport class FormsPropsDeletePropsPropidComponent implements OnInit {\n    private subscriptions: Subscription[] = [];\n    form: FormGroup;\n    @Output() json: EventEmitter<any> = new EventEmitter();\n\n    constructor(\n        private fb: FormBuilder,\n        private serviceProps: PropService,\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.form = this.fb.group({\n            propId: [0, [Validators.required, Validators.min(1)]],\n        });\n    }\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach(x => x.unsubscribe());\n    }\n\n    submitForm({target}): void {\n        if (this.form.invalid) {\n            for (let key in this.form.controls) {\n                const formControl = this.form.get(key);\n\n                if (formControl.status === 'INVALID') {\n                    console.log('INVALID:', key);\n                }\n            }\n            return;\n        }\n\n        const s = this.serviceProps.delete(this.form.get('propId').value).subscribe(x => {\n            this.json.emit(x);\n            this.form.reset();\n        });\n        this.subscriptions.push(s);\n    }\n}\n","<div class=\"page-adm_box\">\n    <div class=\"page-adm_box_title\" appToggleActive>\n        DELETE: /api/v1/props/:propId\n    </div>\n    <div class=\"page-adm_box_body\">\n        <form [formGroup]=\"form\" (ngSubmit)=\"submitForm($event)\" class=\"form\">\n            <div class=\"form_row\">\n                <div class=\"form_title\">id свойства</div>\n                <input type=\"number\" formControlName=\"propId\" class=\"form_100\"/>\n            </div>\n            <div class=\"form_row\">\n                <input type=\"submit\"/>\n            </div>\n            <div class=\"form_row\">\n                {{ form.value | json }}\n            </div>\n        </form>\n    </div>\n</div>\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {PropService} from '../../../../../services/prop.service';\n\n@Component({\n    selector: 'app-forms-props-get-props-propid',\n    templateUrl: './forms-props-get-props-propid.component.html',\n    styleUrls: ['./forms-props-get-props-propid.component.less'],\n})\nexport class FormsPropsGetPropsPropidComponent implements OnInit {\n    private subscriptions: Subscription[] = [];\n    form: FormGroup;\n    @Output() json: EventEmitter<any> = new EventEmitter();\n\n    constructor(\n        private fb: FormBuilder,\n        private serviceProps: PropService,\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.form = this.fb.group({\n            propId: [0, [Validators.required, Validators.min(1)]],\n        });\n    }\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach(x => x.unsubscribe());\n    }\n\n    submitForm({target}): void {\n        if (this.form.invalid) {\n            for (let key in this.form.controls) {\n                const formControl = this.form.get(key);\n\n                if (formControl.status === 'INVALID') {\n                    console.log('INVALID:', key);\n                }\n            }\n            return;\n        }\n\n        const s = this.serviceProps.getOne(this.form.get('propId').value).subscribe(x => this.json.emit(x));\n        this.subscriptions.push(s);\n    }\n}\n","<div class=\"page-adm_box\">\n    <div class=\"page-adm_box_title\" appToggleActive>\n        GET: /api/v1/props/:propId\n    </div>\n    <div class=\"page-adm_box_body\">\n        <form [formGroup]=\"form\" (ngSubmit)=\"submitForm($event)\" class=\"form\">\n            <div class=\"form_row\">\n                <div class=\"form_title\">id свойства</div>\n                <input type=\"number\" formControlName=\"propId\" class=\"form_100\"/>\n            </div>\n            <div class=\"form_row\">\n                <input type=\"submit\"/>\n            </div>\n            <div class=\"form_row\">\n                {{ form.value | json }}\n            </div>\n        </form>\n    </div>\n</div>\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {CatWithDeepInterface} from '../../../../../interfaces/response/cat';\nimport {ManagerService} from '../../../../../services/manager.service';\nimport {Helpers} from '../../../../../helpers';\nimport {PropService} from '../../../../../services/prop.service';\n\n@Component({\n    selector: 'app-forms-props-get-props',\n    templateUrl: './forms-props-get-props.component.html',\n    styleUrls: ['./forms-props-get-props.component.less'],\n})\nexport class FormsPropsGetPropsComponent implements OnInit {\n    private subscriptions: Subscription[] = [];\n    form: FormGroup;\n    catTreeOneLevel: CatWithDeepInterface[] = [];\n    @Output() json: EventEmitter<any> = new EventEmitter();\n\n    constructor(\n        private fb: FormBuilder,\n        private serviceProps: PropService,\n        private serviceManager: ManagerService,\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.form = this.fb.group({\n            catId: ['0', [Validators.required]],\n        });\n\n        const s = this.serviceManager.settings$.subscribe(x => this.catTreeOneLevel = Helpers.getCatTreeAsOneLevel(x.catsTree));\n        this.subscriptions.push(s);\n    }\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach(x => x.unsubscribe());\n    }\n\n    submitForm({target}): void {\n        if (this.form.invalid) {\n            for (let key in this.form.controls) {\n                const formControl = this.form.get(key);\n\n                if (formControl.status === 'INVALID') {\n                    console.log('INVALID:', key);\n                }\n            }\n            return;\n        }\n\n        const s = this.serviceProps.getPropsFullForCat(this.form.get('catId').value).subscribe(x => this.json.emit(x));\n        this.subscriptions.push(s);\n    }\n}\n","<div class=\"page-adm_box\">\n    <div class=\"page-adm_box_title\" appToggleActive>\n        GET: /api/v1/props\n    </div>\n    <div class=\"page-adm_box_body\">\n        <form [formGroup]=\"form\" (ngSubmit)=\"submitForm($event)\" class=\"form\">\n            <div class=\"form_row\">\n                <div class=\"form_title\">id категории</div>\n                <select formControlName=\"catId\" class=\"form_100\">\n                    <option value=\"0\"></option>\n                    <option *ngFor=\"let cat of catTreeOneLevel\" [value]=\"cat.catId\">\n                        {{ '|----'.repeat(cat.deep) }} {{ cat.name }}\n                    </option>\n                </select>\n            </div>\n            <div class=\"form_row\">\n                <input type=\"submit\"/>\n            </div>\n            <div class=\"form_row\">\n                {{ form.value | json }}\n            </div>\n        </form>\n    </div>\n</div>\n","import {Component, EventEmitter, OnDestroy, OnInit, Output} from '@angular/core';\n\n@Component({\n    selector: 'app-forms-props-post-props',\n    templateUrl: './forms-props-post-props.component.html',\n    styleUrls: ['./forms-props-post-props.component.less'],\n})\nexport class FormsPropsPostPropsComponent implements OnInit, OnDestroy {\n    @Output() json: EventEmitter<any> = new EventEmitter();\n\n    constructor() {\n    }\n\n    ngOnInit(): void {\n    }\n\n    ngOnDestroy(): void {\n    }\n}\n","<div class=\"page-adm_box\">\n    <div class=\"page-adm_box_title\" appToggleActive>\n        POST: /api/v1/props\n    </div>\n    <div class=\"page-adm_box_body\">\n        <app-forms-props-post-put-prop (json)=\"json.emit($event)\"></app-forms-props-post-put-prop>\n    </div>\n</div>\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {KindPropInterface} from '../../../../../interfaces/response/kind-prop';\nimport {ValuePropInterface} from '../../../../../interfaces/response/value-prop';\nimport {FormArray, FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {PropFullInterface} from '../../../../../interfaces/response/prop';\nimport {PropService} from '../../../../../services/prop.service';\nimport {ManagerService} from '../../../../../services/manager.service';\n\n@Component({\n    selector: 'app-forms-props-post-put-prop',\n    templateUrl: './forms-props-post-put-prop.component.html',\n    styleUrls: ['./forms-props-post-put-prop.component.less']\n})\nexport class FormsPropsPostPutPropComponent implements OnInit {\n    private subscriptions: Subscription[] = [];\n    private _editPropFull: PropFullInterface;\n    form: FormGroup;\n    defaultControls: Object = {};\n    curKindPropName: string;\n    kindProps: KindPropInterface[] = [];\n    values: ValuePropInterface[] = [];\n    private tagKindNumber: string[] = this.serviceManager.tagKindNumber;\n    @Output() json: EventEmitter<any> = new EventEmitter();\n\n    set editPropFull(x: PropFullInterface) {\n        this.form.reset();\n        this.form.patchValue(x);\n        this.form.get('kindPropId').setValue(this.form.get('kindPropId').value.toString()); // нужна именно строчка\n\n        let tmp = this.form.get('values') as FormArray;\n        tmp.clear();\n        x.values.forEach(y => tmp.push(this.fb.group(y)));\n        this._editPropFull = x;\n    }\n\n    get editPropFull(): PropFullInterface {\n        return this._editPropFull;\n    }\n\n    constructor(\n        private fb: FormBuilder,\n        private serviceProps: PropService,\n        private serviceManager: ManagerService,\n    ) {\n        this.defaultControls = {\n            propId: 0, // необходимо для назначеных значений\n            title: ['', Validators.required],\n            kindPropId: [0, [Validators.required, Validators.min(0)]],\n            name: ['', Validators.required],\n            suffix: '',\n            comment: '',\n            privateComment: '',\n            selectAsTextarea: '',\n            values: this.fb.array(this.values),\n        };\n    }\n\n    ngOnInit(): void {\n        this.form = this.fb.group(this.defaultControls);\n        this.form.get('kindPropId').valueChanges.subscribe(x => {\n            this.curKindPropName = '';\n\n            this.kindProps.forEach(y => {\n                if (y.kindPropId == x) {\n                    this.curKindPropName = y.name;\n                }\n            });\n\n            if (this.curKindPropName !== 'select') {\n                this.form.get('selectAsTextarea').setValue('');\n            }\n\n            if (this.tagKindNumber.indexOf(this.curKindPropName) === -1) {\n                let tmp = this.form.get('values') as FormArray;\n                tmp.clear();\n            }\n        });\n\n        const s = this.serviceManager.settings$.subscribe(x => this.kindProps = x.kindProps);\n        this.subscriptions.push(s);\n    }\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach(x => x.unsubscribe());\n    }\n\n    ngAfterViewInit(): void {\n    }\n\n    submitForm({target}): void {\n        if (this.form.invalid) {\n            for (let key in this.form.controls) {\n                const formControl = this.form.get(key);\n\n                if (formControl.status === 'INVALID') {\n                    console.log('INVALID:', key);\n                }\n            }\n            return;\n        }\n\n        const propId: number = this.form.get('propId').value;\n        const fn = propId ? this.serviceProps.update(propId, this.form.value) : this.serviceProps.create(this.form.value);\n        const s = fn.subscribe(x => this.json.emit(x));\n        this.subscriptions.push(s);\n    }\n}\n","<form [formGroup]=\"form\" (ngSubmit)=\"submitForm($event)\" class=\"form\">\n    <input type=\"hidden\" formControlName=\"propId\"/>\n\n    <div class=\"form_row\">\n        <div class=\"form_title\">заголовок</div>\n        <input type=\"text\" formControlName=\"title\" class=\"form_100\"/>\n    </div>\n    <div class=\"form_row\">\n        <div class=\"form_title\">[name=] *</div>\n        <input type=\"text\" formControlName=\"name\" class=\"form_100\"/>\n    </div>\n    <div class=\"form_row\">\n        <div class=\"form_title\">суффикс</div>\n        <input type=\"text\" formControlName=\"suffix\" class=\"form_100\"/>\n    </div>\n    <div class=\"form_row\">\n        <div class=\"form_title\">комментарий</div>\n        <input type=\"text\" formControlName=\"comment\" class=\"form_100\"/>\n    </div>\n    <div class=\"form_row\">\n        <div class=\"form_title\">приватный комментарий</div>\n        <input type=\"text\" formControlName=\"privateComment\" class=\"form_100\"/>\n    </div>\n    <div class=\"form_row\">\n        <div class=\"form_title\">разновидность тега</div>\n        <select formControlName=\"kindPropId\" class=\"form_100\">\n            <option value=\"0\" selected=\"selected\"></option>\n            <option *ngFor=\"let kind of kindProps\" [value]=\"kind.kindPropId\">\n                {{ kind.name }}\n            </option>\n        </select>\n        <div [hidden]=\" editPropFull || curKindPropName != 'select' \">\n            <br/>\n            <textarea formControlName=\"selectAsTextarea\"></textarea>\n        </div>\n    </div>\n    <div class=\"form_row\">\n        <div class=\"form_title\">значения для св-ва</div>\n        <app-dynamic-values formArrayName=\"values\"\n                            [propId]=\"form.get('propId').value\"\n                            [valuesFormArray]=\"form.get('values')\"></app-dynamic-values>\n    </div>\n    <div class=\"form_row\">\n        <input type=\"submit\"/>\n    </div>\n    <div class=\"form_row\">\n        {{ form.value | json }}\n    </div>\n</form>\n","import {Component, ElementRef, EventEmitter, OnDestroy, OnInit, Output, ViewChild} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {PropService} from '../../../../../services/prop.service';\nimport {FormsPropsPostPutPropComponent} from '../forms-props-post-put-prop/forms-props-post-put-prop.component';\n\n@Component({\n    selector: 'app-forms-props-put-props-propid',\n    templateUrl: './forms-props-put-props-propid.component.html',\n    styleUrls: ['./forms-props-put-props-propid.component.less'],\n})\nexport class FormsPropsPutPropsPropidComponent implements OnInit, OnDestroy {\n    private subscriptions: Subscription[] = [];\n    form: FormGroup;\n    @Output() json: EventEmitter<any> = new EventEmitter();\n    @ViewChild('formPutWrapper', {static: true}) formPutWrapper: ElementRef;\n    @ViewChild(FormsPropsPostPutPropComponent) formsPropsPostPutProp: FormsPropsPostPutPropComponent;\n\n    constructor(\n        private fb: FormBuilder,\n        private serviceProps: PropService,\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.form = this.fb.group({\n            propId: [0, [Validators.required, Validators.min(1)]],\n        });\n    }\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach(x => x.unsubscribe());\n    }\n\n    ngAfterViewInit(): void {\n    }\n\n    submitForm({target}): void {\n        if (this.form.invalid) {\n            for (let key in this.form.controls) {\n                const formControl = this.form.get(key);\n\n                if (formControl.status === 'INVALID') {\n                    console.log('INVALID:', key);\n                }\n            }\n            return;\n        }\n\n        const s = this.serviceProps.getOne(this.form.get('propId').value).subscribe(x => {\n            this.formPutWrapper.nativeElement.classList.remove('hidden');\n            this.formsPropsPostPutProp.editPropFull = x;\n        });\n        this.subscriptions.push(s);\n    }\n}\n","<div class=\"page-adm_box\">\n    <div class=\"page-adm_box_title\" appToggleActive>\n        PUT: /api/v1/props/:propId\n    </div>\n    <div class=\"page-adm_box_body\">\n        <form [formGroup]=\"form\" (ngSubmit)=\"submitForm($event)\" class=\"form\">\n            <div class=\"form_row\">\n                <div class=\"form_title\">id св-ва</div>\n                <input type=\"number\" formControlName=\"propId\" class=\"form_100\"/>\n            </div>\n            <div class=\"form_row\">\n                <input type=\"submit\"/>\n            </div>\n        </form>\n        <div #formPutWrapper class=\"hidden\">\n            <app-forms-props-post-put-prop (json)=\"json.emit($event)\"></app-forms-props-post-put-prop>\n        </div>\n    </div>\n</div>\n","import {Component, EventEmitter, OnDestroy, OnInit, Output} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {Helpers} from '../../../../../helpers';\nimport {SearchService} from '../../../../../services/search.service';\nimport {ManagerService} from '../../../../../services/manager.service';\nimport {CatWithDeepInterface} from '../../../../../interfaces/response/cat';\n\n@Component({\n    selector: 'app-forms-search-ads',\n    templateUrl: './forms-search-ads.component.html',\n    styleUrls: ['./forms-search-ads.component.less'],\n})\nexport class FormsSearchAdsComponent implements OnInit, OnDestroy {\n    private subscriptions: Subscription[] = [];\n    form: FormGroup;\n    catTreeOneLevel: CatWithDeepInterface[] = [];\n    @Output() json: EventEmitter<any> = new EventEmitter();\n\n    constructor(\n        private fb: FormBuilder,\n        private serviceSearch: SearchService,\n        private serviceManager: ManagerService,\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.form = this.fb.group({\n            query: ['', [Validators.required, Validators.minLength(2)]],\n            catId: ['0', [Validators.required]],\n            limit: [5, [Validators.required, Validators.min(1), Validators.max(10)]],\n            offset: [0, [Validators.required, Validators.min(0)]],\n        });\n        const s = this.serviceManager.settings$\n            .subscribe(x => this.catTreeOneLevel = Helpers.getCatTreeAsOneLevel(x.catsTree));\n        this.subscriptions.push(s);\n    }\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach(x => x.unsubscribe());\n    }\n\n    submitForm({target}): void {\n        if (this.form.invalid) {\n            for (let key in this.form.controls) {\n                const formControl = this.form.get(key);\n\n                if (formControl.status === 'INVALID') {\n                    console.log('INVALID:', key);\n                }\n            }\n            return;\n        }\n\n        const query: string = this.form.get('query').value;\n        const catId: string = this.form.get('catId').value;\n        const limit: number = this.form.get('limit').value;\n        const offset: number = this.form.get('offset').value;\n\n        const s = this.serviceSearch.ads(query, catId, limit, offset).subscribe(x => this.json.emit(x));\n        this.subscriptions.push(s);\n    }\n}\n","<div class=\"page-adm_box\">\n    <div class=\"page-adm_box_title\" appToggleActive>\n        GET: /api/v1/search/ads\n    </div>\n    <div class=\"page-adm_box_body\">\n        <form [formGroup]=\"form\" (ngSubmit)=\"submitForm($event)\" class=\"form\">\n            <div class=\"form_row\">\n                <div class=\"form_title\">поисковая фраза</div>\n                <input type=\"text\" formControlName=\"query\" class=\"form_100\"/>\n            </div>\n            <div class=\"form_row\">\n                <div class=\"form_title\">id категории</div>\n                <select formControlName=\"catId\" class=\"form_100\">\n                    <option value=\"0\"></option>\n                    <option *ngFor=\"let cat of catTreeOneLevel\" [value]=\"cat.catId\">\n                        {{ '|----'.repeat(cat.deep) }} {{ cat.name }}\n                    </option>\n                </select>\n            </div>\n            <div class=\"form_row\">\n                <div class=\"form_title\">limit</div>\n                <input type=\"number\" formControlName=\"limit\" class=\"form_100\"/>\n            </div>\n            <div class=\"form_row\">\n                <div class=\"form_title\">offset</div>\n                <input type=\"number\" formControlName=\"offset\" class=\"form_100\"/>\n            </div>\n            <div class=\"form_row\">\n                <input type=\"submit\"/>\n            </div>\n            <div class=\"form_row\">\n                {{ form.value | json }}\n            </div>\n        </form>\n    </div>\n</div>\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport {TestService} from '../../../../services/test.service';\n\n@Component({\n    selector: 'app-forms-test',\n    templateUrl: './forms-test.component.html',\n    styleUrls: ['./forms-test.component.less'],\n})\nexport class FormsTestComponent implements OnInit {\n    private subscriptions: Subscription[] = [];\n    form: FormGroup;\n    @Output() json: EventEmitter<any> = new EventEmitter();\n\n    constructor(\n        private fb: FormBuilder,\n        private serviceTest: TestService,\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.form = this.fb.group({});\n    }\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach(x => x.unsubscribe());\n    }\n\n    submitForm({target}): void {\n        const s = this.serviceTest.request().subscribe(x => this.json.emit(x));\n        this.subscriptions.push(s);\n    }\n}\n","<div class=\"page-adm_box\">\n    <div class=\"page-adm_box_title\" appToggleActive>\n        GET: /api/v1/test\n    </div>\n    <div class=\"page-adm_box_body\">\n        <form [formGroup]=\"form\" (ngSubmit)=\"submitForm($event)\" class=\"form\">\n            <div class=\"form_row\">\n                <input type=\"submit\"/>\n            </div>\n        </form>\n    </div>\n</div>\n","import {Component, EventEmitter, OnDestroy, OnInit, Output} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {UserService} from '../../../../../services/user.service';\n\n@Component({\n    selector: 'app-forms-users-delete-users-userid',\n    templateUrl: './forms-users-delete-users-userid.component.html',\n    styleUrls: ['./forms-users-delete-users-userid.component.less'],\n})\nexport class FormsUsersDeleteUsersUseridComponent implements OnInit, OnDestroy {\n    private subscriptions: Subscription[] = [];\n    form: FormGroup;\n    @Output() json: EventEmitter<any> = new EventEmitter();\n\n    constructor(\n        private fb: FormBuilder,\n        private serviceUsers: UserService,\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.form = this.fb.group({\n            userId: [0, [Validators.required, Validators.min(1)]],\n        });\n    }\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach(x => x.unsubscribe());\n    }\n\n    submitForm({target}): void {\n        if (this.form.invalid) {\n            for (let key in this.form.controls) {\n                const formControl = this.form.get(key);\n\n                if (formControl.status === 'INVALID') {\n                    console.log('INVALID:', key);\n                }\n            }\n            return;\n        }\n\n        const s = this.serviceUsers.delete(this.form.get('userId').value).subscribe(x => {\n            this.json.emit(x);\n            this.form.reset();\n        });\n        this.subscriptions.push(s);\n    }\n}\n","<div class=\"page-adm_box\">\n    <div class=\"page-adm_box_title\" appToggleActive>\n        DELETE: /api/v1/users/:userId\n    </div>\n    <div class=\"page-adm_box_body\">\n        <div>\n            <form [formGroup]=\"form\" (ngSubmit)=\"submitForm($event)\" class=\"form\">\n                <div class=\"form_row\">\n                    <div class=\"form_title\">userId</div>\n                    <input type=\"number\" formControlName=\"userId\" class=\"form_100\"/>\n                </div>\n                <div class=\"form_row\">\n                    <input type=\"submit\"/>\n                </div>\n                <div class=\"form_row\">\n                    {{ form.value | json }}\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n","import {Component, EventEmitter, OnDestroy, OnInit, Output} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {UserService} from '../../../../../services/user.service';\n\n@Component({\n    selector: 'app-forms-users-get-users-userid',\n    templateUrl: './forms-users-get-users-userid.component.html',\n    styleUrls: ['./forms-users-get-users-userid.component.less'],\n})\nexport class FormsUsersGetUsersUseridComponent implements OnInit, OnDestroy {\n    private subscriptions: Subscription[] = [];\n    form: FormGroup;\n    @Output() json: EventEmitter<any> = new EventEmitter();\n\n    constructor(\n        private fb: FormBuilder,\n        private serviceUsers: UserService,\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.form = this.fb.group({\n            userId: [0, [Validators.required, Validators.min(1)]],\n        });\n    }\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach(x => x.unsubscribe());\n    }\n\n    submitForm({target}): void {\n        if (this.form.invalid) {\n            for (let key in this.form.controls) {\n                const formControl = this.form.get(key);\n\n                if (formControl.status === 'INVALID') {\n                    console.log('INVALID:', key);\n                }\n            }\n            return;\n        }\n\n        const s = this.serviceUsers.getUser(this.form.get('userId').value).subscribe(x => this.json.emit(x));\n        this.subscriptions.push(s);\n    }\n}\n","<div class=\"page-adm_box\">\n    <div class=\"page-adm_box_title\" appToggleActive>\n        GET: /api/v1/users/:userId\n    </div>\n    <div class=\"page-adm_box_body\">\n        <div>\n            <form [formGroup]=\"form\" (ngSubmit)=\"submitForm($event)\" class=\"form\">\n                <div class=\"form_row\">\n                    <div class=\"form_title\">userId</div>\n                    <input type=\"number\" formControlName=\"userId\" class=\"form_100\"/>\n                </div>\n                <div class=\"form_row\">\n                    <input type=\"submit\"/>\n                </div>\n                <div class=\"form_row\">\n                    {{ form.value | json }}\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n","import {Component, EventEmitter, OnDestroy, OnInit, Output} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport {UserService} from '../../../../../services/user.service';\n\n@Component({\n    selector: 'app-forms-users-get-users',\n    templateUrl: './forms-users-get-users.component.html',\n    styleUrls: ['./forms-users-get-users.component.less'],\n})\nexport class FormsUsersGetUsersComponent implements OnInit, OnDestroy {\n    private subscriptions: Subscription[] = [];\n    form: FormGroup;\n    @Output() json: EventEmitter<any> = new EventEmitter();\n\n    constructor(\n        private fb: FormBuilder,\n        private serviceUsers: UserService,\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.form = this.fb.group({});\n    }\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach(x => x.unsubscribe());\n    }\n\n    submitFormGetUsers({target}): void {\n        const s = this.serviceUsers.getUsers().subscribe(x => this.json.emit(x));\n        this.subscriptions.push(s);\n    }\n}\n","<div class=\"page-adm_box\">\n    <div class=\"page-adm_box_title\" appToggleActive>\n        GET: /api/v1/users\n    </div>\n    <div class=\"page-adm_box_body\">\n        <div>\n            <form [formGroup]=\"form\" (ngSubmit)=\"submitFormGetUsers($event)\" class=\"form\">\n                <div class=\"form_row\">\n                    <input type=\"submit\"/>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n","import {Component, EventEmitter, OnDestroy, OnInit, Output} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {UserService} from '../../../../../services/user.service';\nimport {Helpers} from '../../../../../helpers';\nimport {environment} from '../../../../../../environments/environment';\n\n@Component({\n    selector: 'app-forms-users-post-users',\n    templateUrl: './forms-users-post-users.component.html',\n    styleUrls: ['./forms-users-post-users.component.less'],\n})\nexport class FormsUsersPostUsersComponent implements OnInit, OnDestroy {\n    private subscriptions: Subscription[] = [];\n    form: FormGroup;\n    @Output() json: EventEmitter<any> = new EventEmitter();\n\n    constructor(\n        private fb: FormBuilder,\n        private serviceUsers: UserService,\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.form = this.fb.group({\n            email: ['', [Validators.required, Validators.email]],\n            password: ['', [Validators.required, Validators.minLength(environment.minLenPassword)]],\n            passwordConfirm: ['', [Validators.required, Validators.minLength(environment.minLenPassword)]],\n            files: '',\n            name: '',\n            isEmailConfirmed: false,\n        });\n    }\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach(x => x.unsubscribe());\n    }\n\n    submitForm({target}): void {\n        if (this.form.invalid) {\n            for (let key in this.form.controls) {\n                const formControl = this.form.get(key);\n\n                if (formControl.status === 'INVALID') {\n                    console.log('INVALID:', key);\n                }\n            }\n            return;\n        }\n\n        const newFormData = Helpers.getNewFormData(this.form.value);\n        const s = this.serviceUsers.create(newFormData).subscribe(x => {\n            this.json.emit(x);\n            target.reset();\n            this.form.reset();\n        });\n        this.subscriptions.push(s);\n    }\n\n    addPhoto({target}): void {\n        Helpers.addPhoto(target, this.form);\n    }\n}\n","<div class=\"page-adm_box\">\n    <div class=\"page-adm_box_title\" appToggleActive>\n        POST: /api/v1/users\n    </div>\n    <div class=\"page-adm_box_body\">\n        <div>\n            <form [formGroup]=\"form\" (ngSubmit)=\"submitForm($event)\" class=\"form\">\n                <div class=\"form_row\">\n                    <div class=\"form_title\">avatar</div>\n                    <input type=\"hidden\" formControlName=\"files\"/>\n                    <input class=\"form_100\" type=\"file\" accept=\"image/jpeg,image/png\" (change)=\"addPhoto($event)\"/>\n                </div>\n                <div class=\"form_row\">\n                    <div class=\"form_title\">name</div>\n                    <input type=\"text\" formControlName=\"name\" class=\"form_100\"/>\n                </div>\n                <div class=\"form_row\">\n                    <div class=\"form_title\">email</div>\n                    <input type=\"email\" formControlName=\"email\" class=\"form_100\"/>\n                </div>\n                <div class=\"form_row\">\n                    <div class=\"form_title\">password</div>\n                    <input type=\"text\" formControlName=\"password\" class=\"form_100\"/>\n                </div>\n                <div class=\"form_row\">\n                    <div class=\"form_title\">passwordConfirm</div>\n                    <input type=\"text\" formControlName=\"passwordConfirm\" class=\"form_100\"/>\n                </div>\n                <div class=\"form_row\">\n                    <label>\n                        <input type=\"checkbox\" formControlName=\"isEmailConfirmed\" value=\"true\"/>\n                        is_email_confirmed\n                    </label>\n                </div>\n                <div class=\"form_row\">\n                    <input type=\"submit\"/>\n                </div>\n                <div class=\"form_row\">\n                    {{ form.value | json }}\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n","import {AfterViewInit, Component, ElementRef, EventEmitter, OnDestroy, OnInit, Output, ViewChild} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {UserService} from '../../../../../services/user.service';\nimport {Helpers} from '../../../../../helpers';\nimport {environment} from '../../../../../../environments/environment';\n\n@Component({\n    selector: 'app-forms-users-put-users-userid',\n    templateUrl: './forms-users-put-users-userid.component.html',\n    styleUrls: ['./forms-users-put-users-userid.component.less'],\n})\nexport class FormsUsersPutUsersUseridComponent implements OnInit, OnDestroy, AfterViewInit {\n    private subscriptions: Subscription[] = [];\n    formGet: FormGroup;\n    formPut: FormGroup;\n    url: string = environment.apiUrl;\n    @Output() json: EventEmitter<any> = new EventEmitter();\n    @ViewChild('formPutTag', {static: true}) formPutTag: ElementRef;\n\n    constructor(\n        private fb: FormBuilder,\n        private serviceUsers: UserService,\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.formGet = this.fb.group({\n            userId: [0, [Validators.required, Validators.min(1)]],\n        });\n        this.formPut = this.fb.group({\n            userId: [0, [Validators.required, Validators.min(1)]],\n            email: ['', [Validators.required, Validators.email]],\n            password: '',\n            passwordConfirm: '', // не null, проверка не нужна\n            files: '',\n            avatar: '',\n            name: '',\n            isEmailConfirmed: false,\n        });\n    }\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach(x => x.unsubscribe());\n    }\n\n    ngAfterViewInit(): void {\n    }\n\n    submitFormGetUsersUserId({target}): void {\n        if (this.formGet.invalid) {\n            for (let key in this.formGet.controls) {\n                const formControl = this.formGet.get(key);\n\n                if (formControl.status === 'INVALID') {\n                    console.log('INVALID:', key);\n                }\n            }\n            return;\n        }\n\n        const s = this.serviceUsers.getUser(this.formGet.get('userId').value).subscribe(x => {\n            this.json.emit(x);\n            this.formPutTag.nativeElement.classList.remove('hidden');\n            this.formPut.patchValue(x);\n        });\n        this.subscriptions.push(s);\n    }\n\n    submitFormPutUsersUserId({target}): void {\n        if (this.formPut.invalid) {\n            for (let key in this.formPut.controls) {\n                const formControl = this.formPut.get(key);\n\n                if (formControl.status === 'INVALID') {\n                    console.log('INVALID:', key);\n                }\n            }\n            return;\n        }\n\n        const newFormData = Helpers.getNewFormData(this.formPut.value);\n        const s = this.serviceUsers.update(this.formPut.get('userId').value, newFormData).subscribe(x => {\n            this.json.emit(x);\n            target.reset();\n            this.formPut.reset();\n            this.formPut.patchValue(x);\n            this.formPut.get('password').setValue(''); // чтоб не было null\n            this.formPut.get('passwordConfirm').setValue(''); // чтоб не было null\n        });\n        this.subscriptions.push(s);\n    }\n\n    addPhoto({target}): void {\n        Helpers.addPhoto(target, this.formPut);\n    }\n\n    removePhoto({target}): void {\n        this.formPut.get('avatar').setValue('');\n    }\n}\n","<div class=\"page-adm_box\">\n    <div class=\"page-adm_box_title\" appToggleActive>\n        PUT: /api/v1/user\n    </div>\n    <div class=\"page-adm_box_body\">\n        <div>\n            <form [formGroup]=\"formGet\" (ngSubmit)=\"submitFormGetUsersUserId($event)\" class=\"form\">\n                <div class=\"form_row\">\n                    <div class=\"form_title\">userId</div>\n                    <input type=\"number\" formControlName=\"userId\" class=\"form_100\"/>\n                </div>\n                <div class=\"form_row\">\n                    <input type=\"submit\"/>\n                </div>\n            </form>\n            <form #formPutTag [formGroup]=\"formPut\"\n                  (ngSubmit)=\"submitFormPutUsersUserId($event)\" class=\"form hidden\">\n                <input type=\"hidden\" formControlName=\"userId\"/>\n\n                <div class=\"form_row\">\n                    <div class=\"form_title\">avatar</div>\n                    <input type=\"hidden\" formControlName=\"files\"/>\n                    <input class=\"form_100\" type=\"file\" accept=\"image/jpeg,image/png\"\n                           (change)=\"addPhoto($event)\"/>\n\n                    <div *ngIf=\"formPut.get('avatar').value\" class=\"form_thumbnails\">\n                        <div class=\"form_thumbnails_thumbnail\">\n                            <div (click)=\"removePhoto($event)\" class=\"form_thumbnails_thumbnail_close\"></div>\n                            <img [src]=\"url + '/resample/0/100/' + formPut.get('avatar').value\"/>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"form_row\">\n                    <div class=\"form_title\">name</div>\n                    <input type=\"text\" formControlName=\"name\" class=\"form_100\"/>\n                </div>\n                <div class=\"form_row\">\n                    <div class=\"form_title\">email</div>\n                    <input type=\"email\" formControlName=\"email\" class=\"form_100\" readonly=\"readonly\"/>\n                </div>\n                <div class=\"form_row\">\n                    <div class=\"form_title\">password</div>\n                    <input type=\"text\" formControlName=\"password\" class=\"form_100\"/>\n                </div>\n                <div class=\"form_row\">\n                    <div class=\"form_title\">passwordConfirm</div>\n                    <input type=\"text\" formControlName=\"passwordConfirm\" class=\"form_100\"/>\n                </div>\n                <div class=\"form_row\">\n                    <label>\n                        <input type=\"checkbox\" formControlName=\"isEmailConfirmed\" value=\"true\"/> is_email_confirmed\n                    </label>\n                </div>\n                <div class=\"form_row\">\n                    <input type=\"submit\"/>\n                </div>\n                <div class=\"form_row\">\n                    {{ formPut.value | json }}\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n","import {Component, OnDestroy, OnInit, ViewEncapsulation} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {CatTreeInterface} from '../../../../interfaces/response/cat';\nimport {ManagerService} from '../../../../services/manager.service';\n\n@Component({\n    selector: 'app-page-adm',\n    templateUrl: './page-adm.component.html',\n    styleUrls: ['./page-adm.component.less'],\n    encapsulation: ViewEncapsulation.None,\n})\nexport class PageAdmComponent implements OnInit, OnDestroy {\n    private subscriptions: Subscription[] = [];\n    jsonResult: Object;\n    catTree: CatTreeInterface;\n\n    constructor(\n        private serviceManager: ManagerService,\n    ) {\n    }\n\n    ngOnInit(): void {\n        document.body.classList.add('sx-adm');\n        const s = this.serviceManager.settings$.subscribe(x => this.catTree = x.catsTree);\n        this.subscriptions.push(s);\n    }\n\n    ngOnDestroy(): void {\n        document.body.classList.remove('sx-adm');\n        this.subscriptions.forEach(x => x.unsubscribe());\n    }\n}\n","<div class=\"page-adm\">\n    <div class=\"page-adm_columns\">\n        <div>\n            <ul class=\"page-adm_list\">\n                <li>\n                    <div class=\"page-adm_box\">\n                        <div class=\"page-adm_box_title\" appToggleActive>\n                            Категории\n                        </div>\n                        <div class=\"page-adm_box_body\">\n                            <app-forms-cats-get-cats\n                                (json)=\"jsonResult = $event\"></app-forms-cats-get-cats>\n                            <app-forms-cats-get-cats-catid\n                                (json)=\"jsonResult = $event\"></app-forms-cats-get-cats-catid>\n                            <app-forms-cats-post-cats\n                                (json)=\"jsonResult = $event\"></app-forms-cats-post-cats>\n                            <app-forms-cats-put-cats-catid\n                                (json)=\"jsonResult = $event\"></app-forms-cats-put-cats-catid>\n                            <app-forms-cats-delete-cats-catid\n                                (json)=\"jsonResult = $event\"></app-forms-cats-delete-cats-catid>\n                        </div>\n                    </div>\n                </li>\n                <li>\n                    <div class=\"page-adm_box\">\n                        <div class=\"page-adm_box_title\" appToggleActive>\n                            Пользователи\n                        </div>\n                        <div class=\"page-adm_box_body\">\n                            <app-forms-users-get-users\n                                (json)=\"jsonResult = $event\"></app-forms-users-get-users>\n                            <app-forms-users-get-users-userid\n                                (json)=\"jsonResult = $event\"></app-forms-users-get-users-userid>\n                            <app-forms-users-post-users\n                                (json)=\"jsonResult = $event\"></app-forms-users-post-users>\n                            <app-forms-users-put-users-userid\n                                (json)=\"jsonResult = $event\"></app-forms-users-put-users-userid>\n                            <app-forms-users-delete-users-userid\n                                (json)=\"jsonResult = $event\"></app-forms-users-delete-users-userid>\n                        </div>\n                    </div>\n                </li>\n                <li>\n                    <div class=\"page-adm_box\">\n                        <div class=\"page-adm_box_title\" appToggleActive>\n                            Объявления\n                        </div>\n                        <div class=\"page-adm_box_body\">\n                            <app-forms-ads-get-ads\n                                (json)=\"jsonResult = $event\"></app-forms-ads-get-ads>\n                            <app-forms-ads-get-ads-adid\n                                (json)=\"jsonResult = $event\"></app-forms-ads-get-ads-adid>\n                            <app-forms-ads-post-ads\n                                (json)=\"jsonResult = $event\"></app-forms-ads-post-ads>\n                            <app-forms-ads-put-ads-adid\n                                (json)=\"jsonResult = $event\"></app-forms-ads-put-ads-adid>\n                            <app-forms-ads-delete-ads-adid\n                                (json)=\"jsonResult = $event\"></app-forms-ads-delete-ads-adid>\n                        </div>\n                    </div>\n                </li>\n                <li>\n                    <div class=\"page-adm_box\">\n                        <div class=\"page-adm_box_title\" appToggleActive>\n                            Свойства для категорий\n                        </div>\n                        <div class=\"page-adm_box_body\">\n                            <app-forms-props-get-props\n                                (json)=\"jsonResult = $event\"></app-forms-props-get-props>\n                            <app-forms-props-get-props-propid\n                                (json)=\"jsonResult = $event\"></app-forms-props-get-props-propid>\n                            <app-forms-props-post-props\n                                (json)=\"jsonResult = $event\"></app-forms-props-post-props>\n                            <app-forms-props-put-props-propid\n                                (json)=\"jsonResult = $event\"></app-forms-props-put-props-propid>\n                            <app-forms-props-delete-props-propid\n                                (json)=\"jsonResult = $event\"></app-forms-props-delete-props-propid>\n                        </div>\n                    </div>\n                </li>\n                <li>\n                    <div class=\"page-adm_box\">\n                        <div class=\"page-adm_box_title\" appToggleActive>\n                            Разновидности типов св-в для категорий\n                        </div>\n                        <div class=\"page-adm_box_body\">\n                            <app-forms-kind-props-get-all\n                                (json)=\"jsonResult = $event\"></app-forms-kind-props-get-all>\n                            <app-forms-kind-props-get-one\n                                (json)=\"jsonResult = $event\"></app-forms-kind-props-get-one>\n                            <app-forms-kind-props-post\n                                (json)=\"jsonResult = $event\"></app-forms-kind-props-post>\n                            <app-forms-kind-props-put\n                                (json)=\"jsonResult = $event\"></app-forms-kind-props-put>\n                            <app-forms-kind-props-delete\n                                (json)=\"jsonResult = $event\"></app-forms-kind-props-delete>\n                        </div>\n                    </div>\n                </li>\n                <li>\n                    <div class=\"page-adm_box\">\n                        <div class=\"page-adm_box_title\" appToggleActive>\n                            Страницы\n                        </div>\n                        <div class=\"page-adm_box_body\">\n                            <app-forms-pages-ad-adid\n                                (json)=\"jsonResult = $event\"></app-forms-pages-ad-adid>\n                            <app-forms-pages-main\n                                (json)=\"jsonResult = $event\"></app-forms-pages-main>\n                        </div>\n                    </div>\n                </li>\n                <li>\n                    <div class=\"page-adm_box\">\n                        <div class=\"page-adm_box_title\" appToggleActive>\n                            Поиск\n                        </div>\n                        <div class=\"page-adm_box_body\">\n                            <app-forms-search-ads\n                                (json)=\"jsonResult = $event\"></app-forms-search-ads>\n                        </div>\n                    </div>\n                </li>\n                <li>\n                    <div class=\"page-adm_box\">\n                        <div class=\"page-adm_box_title\" appToggleActive>\n                            Тест\n                        </div>\n                        <div class=\"page-adm_box_body\">\n                            <app-forms-test\n                                (json)=\"jsonResult = $event\"></app-forms-test>\n                        </div>\n                    </div>\n                </li>\n            </ul>\n        </div>\n        <pre class=\"page-adm_json-result\">{{ jsonResult | prettyJson }}</pre>\n    </div>\n</div>\n","import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n    name: 'prettyJson'\n})\nexport class PrettyJsonPipe implements PipeTransform {\n    transform(value: unknown): string {\n        let res = JSON.stringify(value, null, '    ');\n        return res;\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {environment} from '../../environments/environment';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {KindPropInterface} from '../interfaces/response/kind-prop';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class KindPropsService {\n    private url: string = environment.apiUrl;\n\n    constructor(\n        private http: HttpClient,\n    ) {\n    }\n\n    getAll(): Observable<KindPropInterface[]> {\n        return this.http.get<KindPropInterface[]>(`${this.url}/kind_props`);\n    }\n\n    getOne(elId: number): Observable<KindPropInterface> {\n        return this.http.get<KindPropInterface>(`${this.url}/kind_props/${elId}`);\n    }\n\n    create(data: any): Observable<KindPropInterface> {\n        return this.http.post<KindPropInterface>(`${this.url}/kind_props`, data);\n    }\n\n    update(elId: number, data: any): Observable<KindPropInterface> {\n        return this.http.put<KindPropInterface>(`${this.url}/kind_props/${elId}`, data);\n    }\n\n    delete(elId: number): Observable<void> {\n        return this.http.delete<void>(`${this.url}/kind_props/${elId}`);\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {environment} from '../../environments/environment';\nimport {Observable} from 'rxjs';\nimport {HttpClient} from '@angular/common/http';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class TestService {\n    private url: string = environment.apiUrl;\n\n    constructor(\n        private http: HttpClient\n    ) {\n    }\n\n    request(): Observable<any> {\n        return this.http.get<any>(`${this.url}/test`);\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {environment} from '../../environments/environment';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {UserInterface} from '../interfaces/response/user';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class UserService {\n    private url: string = environment.apiUrl;\n\n    constructor(\n        private http: HttpClient\n    ) {\n    }\n\n    getUsers(): Observable<UserInterface[]> {\n        return this.http.get<UserInterface[]>(`${this.url}/users`);\n    }\n\n    getUser(userId: number): Observable<UserInterface> {\n        return this.http.get<UserInterface>(`${this.url}/users/${userId}`);\n    }\n\n    create(data: any): Observable<UserInterface> {\n        return this.http.post<UserInterface>(`${this.url}/users`, data);\n    }\n\n    update(userId: number, data: any): Observable<UserInterface> {\n        return this.http.put<UserInterface>(`${this.url}/users/${userId}`, data);\n    }\n\n    delete(userId: number): Observable<void> {\n        return this.http.delete<void>(`${this.url}/users/${userId}`);\n    }\n}\n"]}