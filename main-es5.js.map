{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/ad-form/ad-form.component.ts","webpack:///src/app/components/ad-form/ad-form.component.html","webpack:///src/app/components/ad/ad.component.ts","webpack:///src/app/components/ad/ad.component.html","webpack:///src/app/components/breadcrumbs/breadcrumbs.component.ts","webpack:///src/app/components/breadcrumbs/breadcrumbs.component.html","webpack:///src/app/components/carousel/carousel.component.ts","webpack:///src/app/components/carousel/carousel.component.html","webpack:///src/app/components/cats-horiz-accordion/cats-horiz-accordion.component.ts","webpack:///src/app/components/cats-horiz-accordion/cats-horiz-accordion.component.html","webpack:///src/app/components/errors-fly/errors-fly.component.ts","webpack:///src/app/components/errors-fly/errors-fly.component.html","webpack:///src/app/components/footer/footer.component.ts","webpack:///src/app/components/footer/footer.component.html","webpack:///src/app/components/header/header.component.ts","webpack:///src/app/components/header/header.component.html","webpack:///src/app/components/login/login.component.ts","webpack:///src/app/components/login/login.component.html","webpack:///src/app/components/modal/modal.component.ts","webpack:///src/app/components/modal/modal.component.html","webpack:///src/app/components/not-found/not-found.component.ts","webpack:///src/app/components/not-found/not-found.component.html","webpack:///src/app/components/page-ad-create-edit/page-ad-create-edit.component.ts","webpack:///src/app/components/page-ad-create-edit/page-ad-create-edit.component.html","webpack:///src/app/components/page-ad/page-ad.component.ts","webpack:///src/app/components/page-ad/page-ad.component.html","webpack:///src/app/components/page-cat/page-cat.component.ts","webpack:///src/app/components/page-cat/page-cat.component.html","webpack:///src/app/components/page-check-email-through-hash/page-check-email-through-hash.component.ts","webpack:///src/app/components/page-check-email-through-hash/page-check-email-through-hash.component.html","webpack:///src/app/components/page-login/page-login.component.ts","webpack:///src/app/components/page-login/page-login.component.html","webpack:///src/app/components/page-main/page-main.component.ts","webpack:///src/app/components/page-main/page-main.component.html","webpack:///src/app/components/page-not-found/page-not-found.component.ts","webpack:///src/app/components/page-not-found/page-not-found.component.html","webpack:///src/app/components/page-recover/check-hash/check-hash.component.ts","webpack:///src/app/components/page-recover/check-hash/check-hash.component.html","webpack:///src/app/components/page-recover/sender/sender.component.ts","webpack:///src/app/components/page-recover/sender/sender.component.html","webpack:///src/app/components/page-register/ok/ok.component.ts","webpack:///src/app/components/page-register/ok/ok.component.html","webpack:///src/app/components/page-register/page-register.component.ts","webpack:///src/app/components/page-register/page-register.component.html","webpack:///src/app/components/page-search/page-search.component.ts","webpack:///src/app/components/page-search/page-search.component.html","webpack:///src/app/components/preloader/preloader.component.ts","webpack:///src/app/components/preloader/preloader.component.html","webpack:///src/app/components/search/search.component.ts","webpack:///src/app/components/search/search.component.html","webpack:///src/app/components/top-menu-cats-tree/top-menu-cats-tree.component.ts","webpack:///src/app/components/top-menu-cats-tree/top-menu-cats-tree.component.html","webpack:///src/app/components/tree-in-the-top/tree-in-the-top.component.ts","webpack:///src/app/components/tree-in-the-top/tree-in-the-top.component.html","webpack:///src/app/directives/toggle-active.directive.ts","webpack:///src/app/helpers.ts","webpack:///src/app/interceptors/auth.interceptor.ts","webpack:///src/app/interceptors/error.interceptor.ts","webpack:///src/app/modules/shared/shared.module.ts","webpack:///src/app/pipes/my-currency.pipe.ts","webpack:///src/app/services/ad.service.ts","webpack:///src/app/services/auth-guard.service.ts","webpack:///src/app/services/auth.service.ts","webpack:///src/app/services/breadcrumbs.service.ts","webpack:///src/app/services/cat.service.ts","webpack:///src/app/services/manager.service.ts","webpack:///src/app/services/my-error.service.ts","webpack:///src/app/services/pages.service.ts","webpack:///src/app/services/profile.service.ts","webpack:///src/app/services/prop.service.ts","webpack:///src/app/services/recover.service.ts","webpack:///src/app/services/search.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","component","children","canActivate","loadChildren","m","ProfileModule","canLoad","AdmModule","InfoModule","AppRoutingModule","forRoot","imports","AppComponent","serviceAuth","subscriptions","showModalLogin","s","toggleModalAuth$","subscribe","x","push","addScript","ymapsPathScript","forEach","unsubscribe","selector","templateUrl","styleUrls","AppModule","provide","useFactory","serviceManager","auth","getFirstSettings","JWT","check","deps","multi","useClass","declarations","providers","bootstrap","AdFormComponent","fb","serviceProps","serviceAds","serviceProfile","managerSettings","router","route","changeDetection","serviceMyError","serviceCats","attentionTextCreate","attentionTextUpdate","tagKindNumber","defaultCenterMap","json","isProdMode","production","url","apiUrl","idMap","youTubeLink","youTubeExampleLink","catTreeOneLevel","isSendData","isLoadingProps","formJSON","adId","title","slug","catId","required","min","userId","description","price","isDisabled","isApproved","youtube","latitude","longitude","cityName","countryName","createdAt","updatedAt","form","group","settings$","catsTree","getCatTreeAsOneLevel","map","destroy","ym","parseInt","get","value","isLeaf","childes","saveControlNameYmaps","getCatId","c","responseCat","err","newForm","key","controls","contains","control","setValue","props","p","indexOf","kindPropName","aValidators","propIsRequire","_ad","detailsExt","length","Object","k","el","propId","values","z","addControl","images","img","filepath","toString","previousTitleHelp","oldTitleValue","replace","RegExp","trim","titleHelp","isAutogenerateTitle","clearValidators","reset","cat","createYmap","target","invalid","formControl","status","console","log","newFormData","getNewFormData","fn","update","create","mode","emit","ad","alert","navigate","pseudoControlName","files","val","filesAlreadyHas","controlsKey","substr","owner","parentNode","grandFather","parentElement","index","childNodes","removeControl","remove","querySelectorAll","str","window","detectChanges","document","getElementById","ready","done","center","pm","Map","zoom","createPlacemark","properties","set","geoObjects","add","addEventClickForYmapForListen","events","coords","geometry","setCoordinates","getAddress","getCoordinates","Placemark","iconCaption","preset","draggable","geocode","res","firstGeoObject","country","getCountry","city","getLocalities","coord","getAdministrativeAreas","getThoroughfare","getPremise","filter","Boolean","join","balloonContent","getAddressLine","updateMapDataInForm","errors$","next","msg","address","patchValue","formTag","nativeElement","setValidators","onChangeCat","catIdSrc","_catId","onSubmit","AdComponent","inProfile","BreadcrumbsComponent","serviceBreadcrumbs","items","isLoading","sender$","CarouselComponent","classNameDisabled","sideLeft","sideCenter","sideRight","animationTimeMS","isByOne","getItems","i","tmpW","getTrueWidth","offsetWidth","frame","clientWidth","render","Array","from","row","toRight","classList","leftovers","first","shift","last","unshift","pop","setTimeout","offset","btnLeft","btnRight","style","transform","move","CatsHorizAccordionComponent","aCols","onSelectLeaf","catTree","event","tmpCats","getArrayAncestorsCatTree","reverse","ids","tmpCat","catCols","querySelector","eventSrc","result","ErrorsFlyComponent","serviceMyErrors","waitTimeSec","splice","FooterComponent","emailSupport","curYear","HeaderComponent","authService","profile$","profile","isAdmin","LoginComponent","email","password","minLength","minLenPassword","submit","disabled","login","user","ModalComponent","onClose","body","hide","NotFoundComponent","PageAdCreateEditComponent","isEditingAd","sAdId","snapshot","paramMap","isNaN","getAd","catsHorizAccordion","adForm","signal","newCatId","selectLeaf","PageAdComponent","adService","servicePages","sanitizer","isShowModalPhotos","getAdIdFromUrl","start","pageAd","adFull","link","bypassSecurityTrustResourceUrl","catFull","cats","getDescendants","buildBCFromCats","indexPhoto","carousel","seek","PageCatComponent","serviceAd","isLoadAll","ads","isPathRootCat","isPathNotFound","loadMoreForScroll","loadMore","bind","limit","removeScroll","addScroll","addEventListener","removeEventListener","findCatIdFromSlugs","renderBC","masonry","send","sSpecial","getFromCat","rect","preloader","getBoundingClientRect","top","innerHeight","content","PageCheckEmailThroughHashComponent","hash","checkEmailThroughHash","PageLoginComponent","PageMainComponent","lastAdsFull","lastChainBC","pageMain","needCatId","listCat","getAncestors","PageNotFoundComponent","PageRecoverCheckHashComponent","serviceRecover","minLenHash","passwordConfirm","btnSubmit","submitBtn","changePassword","PageRecoverSenderComponent","sendHash","PageRegisterOkComponent","PageRegisterComponent","agreeOffer","requiredTrue","agreePolicy","PageSearchComponent","serviceSearch","watchForReset","q","getQueryFromUrl","getByQuery","queryParams","PreloaderComponent","SearchComponent","s1","s2","TopMenuCatsTreeComponent","renderer","serviceCat","isActive","openMenu","hideMenu","detachClick","listen","inZone","closest","button","toggleMenu","TreeInTheTopComponent","closeAll","ToggleActiveDirective","toggle","Helpers","max","Math","ceil","floor","random","today","Date","firstDayOfYear","getFullYear","pastDaysOfYear","getDay","idStrLen","prefix","idStr","getTime","dd","String","getDate","padStart","mm","getMonth","yyyy","selectorEl","personalFeed","offsetTop","scrollY","scrollTo","left","behavior","serverDate","toISOString","split","obj","FormData","append","listCatTree","findCatId","list","a","assign","receiver","deep","bcItems","urlSave","name","regexp","createElement","href","location","pathname","match","slugs","slice","parent","selectorChildes","margin","widthParent","aPasted","aLook","saveX","saveY","widthChild","j","modeCheckHeight","position","finedIndex","tmpY","el2","offsetHeight","height","walkGetCatTreeAsOneLevel","parentId","pos","priceAlias","priceSuffix","titleComment","tmp","script","src","async","head","appendChild","cFiles","totalFiles","objToCheck","prototype","call","parser","search","lastIndex","lastIndexOf","AuthInterceptor","minOffsetTimeLifeAccessToken","request","clone","withCredentials","setHeaders","Authorization","jwt","parseJWT","timeDiff","Exp","diffSec","refreshTokens","handle","ErrorInterceptor","pipe","error","message","statusText","SharedModule","MyCurrencyPipe","AdService","http","data","post","put","params","query","providedIn","AuthGuardService","isLoggedIn","segments","state","AuthService","part","substring","JSON","parse","atob","UserRole","localStorage","removeItem","setItem","getItem","BreadcrumbsService","CatService","asTree","isWithPropsOnlyFiltered","withPropsOnlyFiltered","ManagerService","load","complete","MyErrorService","PagesService","ProfileService","PropService","RecoverService","SearchService","environment","domain","bootstrapModule","useValue"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {PageMainComponent} from './components/page-main/page-main.component';\nimport {PageNotFoundComponent} from './components/page-not-found/page-not-found.component';\nimport {PageAdComponent} from './components/page-ad/page-ad.component';\nimport {PageCatComponent} from './components/page-cat/page-cat.component';\nimport {PageSearchComponent} from './components/page-search/page-search.component';\nimport {PageRegisterComponent} from './components/page-register/page-register.component';\nimport {PageLoginComponent} from './components/page-login/page-login.component';\nimport {PageRegisterOkComponent} from './components/page-register/ok/ok.component';\nimport {PageAdCreateEditComponent} from './components/page-ad-create-edit/page-ad-create-edit.component';\nimport {PageRecoverSenderComponent} from './components/page-recover/sender/sender.component';\nimport {PageRecoverCheckHashComponent} from './components/page-recover/check-hash/check-hash.component';\nimport {PageCheckEmailThroughHashComponent} from './components/page-check-email-through-hash/page-check-email-through-hash.component';\nimport {AuthGuardService} from './services/auth-guard.service';\n\nconst routes: Routes = [\n    {path: '', redirectTo: 'main', pathMatch: 'full'},\n    {path: 'main', component: PageMainComponent},\n    {\n        path: 'cat', children: [\n            {path: '**', component: PageCatComponent},\n        ]\n    },\n    {\n        path: 'ad', children: [\n            {path: 'create', component: PageAdCreateEditComponent},\n            {path: 'edit/:adId', component: PageAdCreateEditComponent, canActivate: [AuthGuardService]},\n            {path: ':slug', component: PageAdComponent},\n        ]\n    },\n    {path: 'search', component: PageSearchComponent},\n    {\n        path: 'register', children: [\n            {path: 'ok', component: PageRegisterOkComponent},\n            {path: '', component: PageRegisterComponent},\n        ]\n    },\n    {path: 'login', component: PageLoginComponent},\n    {path: 'check-email-through/:hash', component: PageCheckEmailThroughHashComponent},\n    {path: 'recover', redirectTo: 'recover/sender', pathMatch: 'full'},\n    {\n        path: 'recover', children: [\n            {path: 'sender', component: PageRecoverSenderComponent}, // страница отправления хеша\n            {path: 'check/:hash', component: PageRecoverCheckHashComponent}, // стр. смены пароля\n        ]\n    },\n    {\n        path: 'profile',\n        loadChildren: () => import('./modules/profile/profile.module').then(m => m.ProfileModule),\n        canLoad: [AuthGuardService],\n        canActivate: [AuthGuardService],\n    },\n    {\n        path: 'adm',\n        loadChildren: () => import('./modules/adm/adm.module').then(m => m.AdmModule),\n        canLoad: [AuthGuardService],\n        canActivate: [AuthGuardService],\n    },\n    {path: 'info', loadChildren: () => import('./modules/info/info.module').then(m => m.InfoModule)},\n    {path: '**', component: PageNotFoundComponent},\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes)],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {AuthService} from './services/auth.service';\nimport {Subscription} from 'rxjs';\nimport {Helpers} from './helpers';\nimport {environment} from '../environments/environment';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.less'],\n})\nexport class AppComponent implements OnInit, OnDestroy {\n    private subscriptions: Subscription[] = [];\n    showModalLogin: boolean = false;\n\n    constructor(\n        private serviceAuth: AuthService,\n    ) {\n    }\n\n    ngOnInit(): void {\n        const s = this.serviceAuth.toggleModalAuth$.subscribe(x => this.showModalLogin = x);\n        this.subscriptions.push(s);\n        Helpers.addScript(environment.ymapsPathScript);\n    }\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach(x => x.unsubscribe());\n    }\n}\n","<div class=\"app\">\n    <div class=\"app_top\">\n        <app-header></app-header>\n    </div>\n    <div class=\"app_mid\">\n        <main>\n            <div class=\"container\">\n                <router-outlet></router-outlet>\n            </div>\n        </main>\n    </div>\n    <div class=\"app_bot\">\n        <app-footer></app-footer>\n    </div>\n</div>\n<app-errors-fly></app-errors-fly>\n<app-modal *ngIf=\"showModalLogin\" width=\"sm\">\n    <app-login></app-login>\n</app-modal>\n","import {BrowserModule} from '@angular/platform-browser';\nimport {APP_INITIALIZER, NgModule} from '@angular/core';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {PageNotFoundComponent} from './components/page-not-found/page-not-found.component';\nimport {PageMainComponent} from './components/page-main/page-main.component';\nimport {PageCatComponent} from './components/page-cat/page-cat.component';\nimport {PageAdComponent} from './components/page-ad/page-ad.component';\nimport {PageAdCreateEditComponent} from './components/page-ad-create-edit/page-ad-create-edit.component';\nimport {FooterComponent} from './components/footer/footer.component';\nimport {HeaderComponent} from './components/header/header.component';\nimport {TopMenuCatsTreeComponent} from './components/top-menu-cats-tree/top-menu-cats-tree.component';\nimport {SearchComponent} from './components/search/search.component';\nimport {BreadcrumbsComponent} from './components/breadcrumbs/breadcrumbs.component';\nimport {PageSearchComponent} from './components/page-search/page-search.component';\nimport {NotFoundComponent} from './components/not-found/not-found.component';\nimport {TreeInTheTopComponent} from './components/tree-in-the-top/tree-in-the-top.component';\nimport {ModalComponent} from './components/modal/modal.component';\nimport {CarouselComponent} from './components/carousel/carousel.component';\nimport {PageRegisterComponent} from './components/page-register/page-register.component';\nimport {AuthInterceptor} from './interceptors/auth.interceptor';\nimport {ErrorInterceptor} from './interceptors/error.interceptor';\nimport {PageLoginComponent} from './components/page-login/page-login.component';\nimport {PageRegisterOkComponent} from './components/page-register/ok/ok.component';\nimport {AuthService} from './services/auth.service';\nimport {ManagerService} from './services/manager.service';\nimport {CatsHorizAccordionComponent} from './components/cats-horiz-accordion/cats-horiz-accordion.component';\nimport {PageRecoverSenderComponent} from './components/page-recover/sender/sender.component';\nimport {PageRecoverCheckHashComponent} from './components/page-recover/check-hash/check-hash.component';\nimport {ErrorsFlyComponent} from './components/errors-fly/errors-fly.component';\nimport {PageCheckEmailThroughHashComponent} from './components/page-check-email-through-hash/page-check-email-through-hash.component';\nimport {SharedModule} from './modules/shared/shared.module';\nimport {LoginComponent} from './components/login/login.component';\nimport {AuthGuardService} from './services/auth-guard.service';\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        BreadcrumbsComponent,\n        CarouselComponent,\n        CatsHorizAccordionComponent,\n        ErrorsFlyComponent,\n        FooterComponent,\n        HeaderComponent,\n        LoginComponent,\n        ModalComponent,\n        NotFoundComponent,\n        PageAdComponent,\n        PageAdCreateEditComponent,\n        PageCatComponent,\n        PageCheckEmailThroughHashComponent,\n        PageLoginComponent,\n        PageMainComponent,\n        PageNotFoundComponent,\n        PageRecoverCheckHashComponent,\n        PageRecoverSenderComponent,\n        PageRegisterComponent,\n        PageRegisterOkComponent,\n        PageSearchComponent,\n        SearchComponent,\n        TopMenuCatsTreeComponent,\n        TreeInTheTopComponent,\n    ],\n    imports: [\n        AppRoutingModule,\n        BrowserModule,\n        HttpClientModule,\n        ReactiveFormsModule,\n        SharedModule,\n    ],\n    providers: [\n        {\n            provide: APP_INITIALIZER,\n            useFactory: (serviceManager: ManagerService, auth: AuthService) => () => {\n                serviceManager.getFirstSettings();\n\n                // если страницу обновили, то сразу же и проверим сессию\n                if (auth.JWT) {\n                    auth.check();\n                }\n            },\n            deps: [ManagerService, AuthService],\n            multi: true\n        },\n        {provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true},\n        {provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true},\n        AuthGuardService,\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {\n    AfterViewInit,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    Input,\n    OnDestroy,\n    OnInit,\n    Output,\n    ViewChild\n} from '@angular/core';\nimport {AdFullInterface} from '../../interfaces/response/ad';\nimport {Subscription} from 'rxjs';\nimport {environment} from '../../../environments/environment';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {CatFullInterface, CatTreeInterface, CatWithDeepInterface} from '../../interfaces/response/cat';\nimport {CatService} from '../../services/cat.service';\nimport {PropService} from '../../services/prop.service';\nimport {AdService} from '../../services/ad.service';\nimport {ProfileService} from '../../services/profile.service';\nimport {ManagerService} from '../../services/manager.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {MyErrorService} from '../../services/my-error.service';\nimport {Helpers} from '../../helpers';\n\n@Component({\n    selector: 'app-ad-form',\n    templateUrl: './ad-form.component.html',\n    styleUrls: ['./ad-form.component.less']\n})\nexport class AdFormComponent implements OnInit, OnDestroy, AfterViewInit {\n    private subscriptions: Subscription[] = [];\n    private previousTitleHelp: string;\n    private attentionTextCreate: string = 'Объявление добавлено и отправленно на проверку';\n    private attentionTextUpdate: string = 'Объявление обновлено и отправленно на проверку';\n    private tagKindNumber: string[] = this.serviceManager.tagKindNumber;\n    private ym: any;\n    private map: any;\n    private defaultCenterMap: number[] = [55.76, 37.64];\n    private _catId: number;\n    private _ad: AdFullInterface;\n    private catsTree: CatTreeInterface;\n    private saveControlNameYmaps: string;\n\n    @Input() mode: string;\n    @Output() json: EventEmitter<any> = new EventEmitter();\n    @ViewChild('formTag', {static: true}) formTag: ElementRef;\n\n    isProdMode: boolean = environment.production;\n    url: string = environment.apiUrl;\n    idMap: string = 'map';\n    youTubeLink: string = environment.youTubeExampleLink;\n    form: FormGroup;\n    formJSON: Object;\n    catTreeOneLevel: CatWithDeepInterface[] = [];\n    cat: CatFullInterface; // выбранный на данный момент каталог-лист\n    isSendData: boolean = false;\n    isLoadingProps: boolean = false;\n\n    constructor(\n        private fb: FormBuilder,\n        private serviceProps: PropService,\n        private serviceAds: AdService,\n        private serviceProfile: ProfileService,\n        private managerSettings: ManagerService,\n        private router: Router,\n        private route: ActivatedRoute,\n        private changeDetection: ChangeDetectorRef,\n        private serviceManager: ManagerService,\n        private serviceMyError: MyErrorService,\n        private serviceCats: CatService,\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.formJSON = {\n            adId: 0,\n            title: '',\n            slug: '',\n            catId: [0, [Validators.required, Validators.min(1)]],\n            userId: [0, [Validators.min(0)]],\n            description: ['', Validators.required],\n            price: [0, Validators.min(0)],\n            isDisabled: false,\n            isApproved: false,\n            youtube: '',\n            latitude: 0,\n            longitude: 0,\n            cityName: '',\n            countryName: '',\n            createdAt: '',\n            updatedAt: '',\n        };\n\n        this.form = this.fb.group(this.formJSON);\n\n        const s = this.serviceManager.settings$.subscribe(x => {\n            this.catsTree = x.catsTree;\n            this.catTreeOneLevel = Helpers.getCatTreeAsOneLevel(x.catsTree);\n        });\n        this.subscriptions.push(s);\n    }\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach(x => x.unsubscribe());\n\n        if (this.map) {\n            this.map.destroy();\n        }\n\n        this.map = null;\n        this.ym = null;\n    }\n\n    ngAfterViewInit(): void {\n    }\n\n    set ad(x: AdFullInterface) {\n        this._ad = x;\n\n        if (this._ad === null) {\n            this.formTag.nativeElement.reset();\n            this.form.reset();\n            return;\n        }\n\n        this.form.patchValue(this._ad);\n        this.form.get('adId').setValidators([Validators.required, Validators.min(1)]);\n        this.onChangeCat();\n    }\n\n    get ad(): AdFullInterface {\n        return this._ad;\n    }\n\n    set newCatId(catIdSrc: number) {\n        this._catId = catIdSrc;\n        this.ad = null;\n        this.formTag.nativeElement.reset();\n        this.form.reset();\n        this.form.get('catId').setValue(this._catId);\n        this.onChangeCat();\n    }\n\n    onChangeCat(): void {\n        const catId: number = parseInt(this.form.get('catId').value, 10);\n\n        if (Helpers.isLeaf(this.catsTree.childes, catId) !== 1) {\n            return;\n        }\n\n        this.saveControlNameYmaps = '';\n        this.isLoadingProps = true;\n        const s = this.serviceCats.getCatId(catId, false).subscribe(\n            c => this.responseCat(c),\n            err => this.isLoadingProps = false,\n            () => this.isLoadingProps = false,\n        );\n\n        this.subscriptions.push(s);\n    }\n\n    private responseCat(c: CatFullInterface): void {\n        const newForm = this.fb.group(this.formJSON);\n\n        // восстановим предыдущие значения (основные) (для объявления).\n        // ID-каталога должен быть уже установлен выше\n        for (let key in this.form.controls) {\n            if (newForm.contains(key)) {\n                const control = this.form.get(key);\n                let value = control.value || '';\n\n                if (key === 'youtube') {\n                    value = Helpers.youTubeLink(value);\n                }\n\n                newForm.get(key).setValue(value);\n            }\n        }\n\n        // переберем динамические св-ва, при необходимости подхватим установленные уже значения\n        c.props.forEach(p => {\n            let value = (this.tagKindNumber.indexOf(p.kindPropName) !== -1) ? 0 : '';\n            let aValidators = [];\n\n            if (p.propIsRequire) {\n                aValidators.push(Validators.required);\n            }\n\n            // если объявление редактируют, то возьмем значения с уже установленных ранее св-в\n            if (this._ad && this._ad.detailsExt && this._ad.detailsExt.length) {\n                Object.keys(this._ad.detailsExt).forEach(k => {\n                    const el = this._ad.detailsExt[k];\n\n                    if (el.propId === p.propId) {\n                        value = el.value || '';\n\n                        // если это цифровой тип, то конвертнем его в цифру\n                        if (this.tagKindNumber.indexOf(el.kindPropName) !== -1) {\n                            value = parseInt(el.value, 10);\n\n                            if (!value) {\n                                value = 0;\n                            }\n                        }\n\n                        return false;\n                    }\n                });\n            }\n\n            if (p.kindPropName === 'checkbox') {\n                p.values.forEach((z, k) => {\n                    newForm.addControl('p' + p.propId + '[' + k + ']', this.fb.control(z.propId, aValidators));\n                });\n                return true;\n            }\n\n            if (this.form.contains('p' + p.propId)) {\n                value = this.form.get('p' + p.propId).value || '';\n            }\n\n            if (p.kindPropName === 'ymaps') {\n                this.saveControlNameYmaps = 'p' + p.propId;\n            }\n\n            if (p.kindPropName === 'photo') {\n                value = '';\n\n                if (this._ad && this._ad.images && this._ad.images.length) { // images может и не быть\n                    this._ad.images.forEach((img, k) => {\n                        newForm.addControl('filesAlreadyHas[' + k + ']', this.fb.control(img.filepath));\n                    });\n                    value = this._ad.images.length.toString(); // если есть старые фото, обозначим их\n                }\n\n                // при смене категории надо сбрасывать files, p91\n                newForm.addControl('files', this.fb.control(value, aValidators));\n            }\n\n            // у фото оставляем св-во, т.к. на беке будет проверка данного св-ва.\n            // если это фото, то создатся доп-но еще псевдо элемент\n            newForm.addControl('p' + p.propId, this.fb.control(value, aValidators));\n        });\n\n        // если предыдущей заголовок был со вспомогательным текстом, то обновим заголовок\n        if (this.previousTitleHelp) {\n            let oldTitleValue = newForm.get('title').value;\n            oldTitleValue = oldTitleValue.replace(new RegExp(this.previousTitleHelp, 'gi'), '');\n            newForm.get('title').setValue(oldTitleValue.trim());\n            this.previousTitleHelp = '';\n        }\n\n        // если есть вспомогательный текст, то вставим его\n        if (c.titleHelp) {\n            let oldTitleValue = newForm.get('title').value;\n            oldTitleValue = oldTitleValue.replace(new RegExp(c.titleHelp, 'gi'), '');\n            oldTitleValue = c.titleHelp + ' ' + oldTitleValue.trim();\n            newForm.get('title').setValue(oldTitleValue);\n            this.previousTitleHelp = c.titleHelp;\n        }\n\n        // сделаем не обязательным заголовок и скроем его\n        if (c.isAutogenerateTitle) {\n            newForm.get('title').clearValidators();\n        }\n\n        this.form.reset();\n        this.form = newForm; // новая форма со старыми осн. значениями, но новыми переменными св-вами\n        this.cat = c;\n        this.createYmap();\n    }\n\n    private resetToDefault(): void {\n        this.cat = null;\n        this.previousTitleHelp = '';\n        this._ad = null;\n        this.form = this.fb.group(this.formJSON);\n    }\n\n    onSubmit({target}): void {\n        if (this.form.invalid) {\n            for (let key in this.form.controls) {\n                const formControl = this.form.get(key);\n\n                if (formControl.status === 'INVALID') {\n                    console.log('INVALID:', key);\n                }\n            }\n            return;\n        }\n\n        const newFormData = Helpers.getNewFormData(this.form.value);\n        const fn = this._ad ? this.serviceAds.update(this.form.get('adId').value, newFormData) : this.serviceAds.create(newFormData);\n\n        this.isSendData = true;\n        const s = fn.subscribe(\n            x => {\n                if (this.mode === 'private') {\n                    this.json.emit(x);\n\n                    if (!this._ad) {\n                        this.ad = null;\n\n                    } else {\n                        this.ad = x;\n                    }\n\n                    return;\n                }\n\n                alert(this._ad ? this.attentionTextUpdate : this.attentionTextCreate);\n                this.router.navigate(['/profile/ads']).then();\n            },\n            err => {\n                this.isSendData = false;\n                s.unsubscribe();\n            },\n            () => {\n                this.isSendData = false;\n                s.unsubscribe();\n            }\n        );\n    }\n\n    addPhoto({target}, pseudoControlName): void {\n        if (!target.files.length) {\n            let val = ''; // если ни чего нет, то нужен null, иначе любая цифра\n            let filesAlreadyHas: string[] = [];\n\n            for (let controlsKey in this.form.controls) {\n                if (controlsKey.substr(0, 'filesAlreadyHas'.length) === 'filesAlreadyHas') {\n                    filesAlreadyHas.push(this.form.get(controlsKey).value);\n                }\n            }\n\n            if (filesAlreadyHas.length) {\n                val = filesAlreadyHas.length.toString(); // добавим цифру, чтоб не было деления на массив\n            }\n\n            this.form.get('files').setValue(val);\n            this.form.get(pseudoControlName).setValue(val);\n            return;\n        }\n\n        this.form.get('files').setValue(target.files);\n        this.form.get(pseudoControlName).setValue(target.files.length);\n    }\n\n    removePhoto({target}, pseudoControlName): void {\n        let owner = target.parentNode;\n        let grandFather = owner.parentElement;\n        const index = [...grandFather.childNodes].indexOf(owner);\n\n        this.form.removeControl('filesAlreadyHas[' + index + ']');\n        owner.remove();\n\n        if (!grandFather.querySelectorAll('.form_thumbnails_thumbnail').length) {\n            this.form.get('files').setValue(''); // нельзя пустой объект ставить, т.к. валидатор считает его не пустым\n            this.form.get(pseudoControlName).setValue('');\n        }\n    }\n\n    convertToInt(str: string): number {\n        return parseInt(str, 10) || 0;\n    }\n\n    // создание карты\n    createYmap(): void {\n        if (typeof window['ymaps'] === 'undefined') {\n            return;\n        }\n\n        // проверим: есть ли тег \"id=map\"\n        this.changeDetection.detectChanges();\n        if (!document.getElementById(this.idMap)) {\n            return;\n        }\n\n        window['ymaps'].ready().done(ym => {\n            this.ym = ym;\n            let center: number[] = this.defaultCenterMap;\n            let latitude: number = this.form.get('latitude').value;\n            let longitude: number = this.form.get('longitude').value;\n            let pm = null;\n\n            if (latitude && longitude) {\n                center = [latitude, longitude];\n            }\n\n            this.map = new this.ym.Map(this.idMap, {\n                center: center,\n                zoom: 10,\n            });\n\n            if (latitude && longitude) {\n                pm = this.createPlacemark(center);\n                pm.properties.set('iconCaption', this.form.get(this.saveControlNameYmaps).value);\n                this.map.geoObjects.add(pm);\n            }\n\n            this.addEventClickForYmapForListen(pm);\n        });\n    }\n\n    // установка событий на карту\n    addEventClickForYmapForListen(pm: any): void {\n        // Слушаем клик на карте.\n        this.map.events.add('click', (e) => {\n            var coords = e.get('coords');\n\n            // Если метка уже создана – просто передвигаем ее.\n            if (pm) {\n                pm.geometry.setCoordinates(coords);\n            }\n            // Если нет – создаем.\n            else {\n                pm = this.createPlacemark(coords);\n                this.map.geoObjects.add(pm);\n                // Слушаем событие окончания перетаскивания на метке.\n                pm.events.add('dragend', () => {\n                    this.getAddress(pm.geometry.getCoordinates(), pm);\n                });\n            }\n\n            this.getAddress(coords, pm);\n        });\n    }\n\n    // создание метки\n    createPlacemark(coords) {\n        return new this.ym.Placemark(coords, {\n            iconCaption: 'поиск...'\n        }, {\n            preset: 'islands#violetDotIconWithCaption',\n            draggable: true\n        });\n    }\n\n    // определяем адрес по координатам (обратное геокодирование)\n    getAddress(coords, pm): void {\n        pm.properties.set('iconCaption', 'поиск...');\n        this.ym.geocode(coords).then(res => {\n            const firstGeoObject = res.geoObjects.get(0);\n            const country = firstGeoObject.getCountry();\n            const city = firstGeoObject.getLocalities().length && firstGeoObject.getLocalities()[0] || null;\n            const coord = firstGeoObject.geometry.getCoordinates();\n\n            pm.properties.set({\n                // Формируем строку с данными об объекте.\n                iconCaption: [\n                    // Название населенного пункта или вышестоящее административно-территориальное образование.\n                    firstGeoObject.getLocalities().length ? firstGeoObject.getLocalities() : firstGeoObject.getAdministrativeAreas(),\n                    // Получаем путь до топонима, если метод вернул null, запрашиваем наименование здания.\n                    firstGeoObject.getThoroughfare() || firstGeoObject.getPremise()\n                ].filter(Boolean).join(', '),\n                // В качестве контента балуна задаем строку с адресом объекта.\n                balloonContent: firstGeoObject.getAddressLine()\n            });\n\n            this.updateMapDataInForm(coord, firstGeoObject.getAddressLine(), city, country);\n\n        }).catch((err) => {\n            this.serviceMyError.errors$.next({msg: err});\n        });\n    }\n\n    // обновим форму относительно выбранного адреса на карте\n    updateMapDataInForm(coord: number[], address: string, city: string | null, country: string | null): void {\n        this.form.patchValue({\n            latitude: coord[0],\n            longitude: coord[1],\n            cityName: city,\n            countryName: country,\n        });\n\n        this.form.get(this.saveControlNameYmaps).setValue(address); // главное св-во ymaps\n        this.changeDetection.detectChanges();\n    }\n}\n","<div class=\"ad-form\">\n    <form #formTag [formGroup]=\"form\"\n          class=\"form\"\n          [class.sx-loading]=\"isLoadingProps\"\n          [class.sx-cols-as-column]=\" mode === 'private' \"\n          (ngSubmit)=\"onSubmit($event)\">\n\n        <input type=\"hidden\" formControlName=\"adId\"/>\n        <input type=\"hidden\" formControlName=\"createdAt\"/>\n        <input type=\"hidden\" formControlName=\"updatedAt\"/>\n\n        <div *ngIf=\" mode === 'private' \" class=\"form_row\">\n            <div class=\"form_cols\">\n                <div class=\"form_cols_col\">id категории</div>\n                <div class=\"form_cols_col\">\n                    <select formControlName=\"catId\" (change)=\"onChangeCat()\" class=\"form_100\">\n                        <option value=\"0\"></option>\n                        <option *ngFor=\"let cat of catTreeOneLevel\" [value]=\"cat.catId\">\n                            {{ '|----'.repeat(cat.deep) }} {{ cat.name }}\n                        </option>\n                    </select>\n                </div>\n            </div>\n        </div>\n        <div *ngFor=\"let p of cat?.props\" class=\"form_row\">\n            <div class=\"form_cols\">\n                <div class=\"form_cols_col\">\n                    {{ p.title }}\n                    <span *ngIf=\"p.propIsRequire\">*</span>\n                </div>\n                <div class=\"form_cols_col\">\n                    <div class=\"ad-form_dynamic-inputs sx-{{ p.kindPropName }}\">\n                        <div>\n                            <input *ngIf=\" p.kindPropName === 'input' \"\n                                   formControlName=\"p{{p.propId}}\"\n                                   class=\"form_100\"\n                                   type=\"text\"/>\n\n                            <input *ngIf=\" p.kindPropName === 'input_number' \"\n                                   formControlName=\"p{{p.propId}}\"\n                                   type=\"number\"/>\n\n                            <select *ngIf=\" p.kindPropName === 'select' \"\n                                    formControlName=\"p{{p.propId}}\">\n                                <option *ngIf=\"p.values.length\" value=\"\">-</option>\n                                <option *ngFor=\"let val of p.values\"\n                                        [value]=\"val.valueId\">{{ val.title }}</option>\n                            </select>\n\n                            <div *ngIf=\" p.kindPropName === 'radio' \">\n                                <span *ngFor=\"let val of p.values; let i = index\" class=\"form_radio-chain\">\n                                    <input formControlName=\"p{{p.propId}}\" id=\"radio_{{p.propId}}_{{ i }}\"\n                                           type=\"radio\"\n                                           [value]=\"val.valueId\"/>\n                                    <label for=\"radio_{{p.propId}}_{{ i }}\">\n                                        {{ val.title }}\n                                    </label>\n                                </span>\n                            </div>\n\n                            <textarea *ngIf=\" p.kindPropName === 'textarea' \"\n                                      formControlName=\"{{p.propId}}\"></textarea>\n\n                            <div *ngIf=\" p.kindPropName === 'photo' \">\n                                <input type=\"hidden\" formControlName=\"files\"/>\n                                <input type=\"hidden\" formControlName=\"p{{p.propId}}\"/>\n                                <input type=\"file\"\n                                       accept=\"image/jpeg,image/png\"\n                                       [multiple]=\"convertToInt(p.propComment)\"\n                                       (change)=\"addPhoto($event, 'p'+p.propId)\"/>\n                            </div>\n\n                            <div *ngIf=\" p.kindPropName === 'ymaps' \">\n                                <input formControlName=\"p{{p.propId}}\" class=\"form_100\" type=\"text\"/>\n                                <div class=\"ad-form_map\">\n                                    <span class=\"text-mute\">Кликнете по карте, чтоб определить координаты</span>\n                                    <div [id]=\"idMap\"></div>\n                                </div>\n                            </div>\n                        </div>\n                        <div *ngIf=\"p.suffix\">\n                            {{ p.suffix }}\n                        </div>\n                        <div *ngIf=\" p.kindPropName === 'photo' \">\n                            макс. {{ convertToInt(p.propComment) }} файлов\n                        </div>\n                    </div>\n\n                    <p *ngIf=\"p.propComment && p.kindPropName !== 'photo' \"\n                       class=\"form_comment text-mute\">{{ p.propComment }}</p>\n                    <p *ngIf=\"p.comment\" class=\"form_comment text-mute\">{{ p.comment }}</p>\n\n                    <div *ngIf=\"p.kindPropName === 'photo' && ad?.images?.length\" class=\"form_thumbnails\">\n                        <div *ngFor=\"let img of ad.images\" class=\"form_thumbnails_thumbnail\">\n                            <div class=\"form_thumbnails_thumbnail_close\" title=\"удалить\"\n                                 (click)=\"removePhoto($event, 'p'+p.propId)\"></div>\n                            <img src=\"{{ url }}/resample/0/48/{{ img.filepath }}\"/>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div *ngIf=\"!cat || cat && !cat.isAutogenerateTitle\" class=\"form_row\">\n            <div class=\"form_cols\">\n                <div class=\"form_cols_col\">\n                    Название объявления\n                    <span *ngIf=\"cat && !cat.isAutogenerateTitle\">*</span>\n                </div>\n                <div class=\"form_cols_col\">\n                    <input formControlName=\"title\" class=\"form_100\" type=\"text\"/>\n                    <p *ngIf=\"cat && cat.titleComment\" class=\"form_comment text-mute\">{{ cat.titleComment }}</p>\n                </div>\n            </div>\n        </div>\n        <div *ngIf=\" mode === 'private' \" class=\"form_row\">\n            <div class=\"form_cols\">\n                <div class=\"form_cols_col\">Slug</div>\n                <div class=\"form_cols_col\">\n                    <input formControlName=\"slug\" readonly=\"readonly\" class=\"form_100\" type=\"text\"/>\n                </div>\n            </div>\n        </div>\n        <div *ngIf=\" mode === 'private' \" class=\"form_row\">\n            <div class=\"form_row\">\n                <div class=\"form_cols\">\n                    <div class=\"form_cols_col\">\n                        id пользователя\n                    </div>\n                    <div class=\"form_cols_col\">\n                        <input type=\"number\" formControlName=\"userId\" class=\"form_100\"/>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div *ngIf=\" mode === 'private' \" class=\"form_row\">\n            <div class=\"form_cols\">\n                <div class=\"form_cols_col\"></div>\n                <div class=\"form_cols_col\">\n                    <label>\n                        <input type=\"checkbox\" formControlName=\"isDisabled\" value=\"true\"/>\n                        если выбран, то выключен\n                    </label>\n                </div>\n            </div>\n        </div>\n        <div *ngIf=\" mode === 'private' \" class=\"form_row\">\n            <div class=\"form_cols\">\n                <div class=\"form_cols_col\"></div>\n                <div class=\"form_cols_col\">\n                    <label>\n                        <input type=\"checkbox\" formControlName=\"isApproved\" value=\"true\"/>\n                        если выбран, то заапрувлен\n                    </label>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"form_row\">\n            <div class=\"form_cols\">\n                <div class=\"form_cols_col\">\n                    Описание объявления *\n                </div>\n                <div class=\"form_cols_col\">\n                    <textarea formControlName=\"description\"></textarea>\n                </div>\n            </div>\n        </div>\n        <div class=\"form_row\">\n            <div class=\"form_cols\">\n                <div class=\"form_cols_col\">\n                    {{ cat && cat.priceAlias || 'Цена' }}\n                </div>\n                <div class=\"form_cols_col\">\n                    <input formControlName=\"price\" type=\"number\" min=\"0\"/>\n                    сум {{ cat && cat.priceSuffix }}\n                </div>\n            </div>\n        </div>\n        <div class=\"form_row\">\n            <div class=\"form_cols\">\n                <div class=\"form_cols_col\">\n                    Видео c YouTube\n                </div>\n                <div class=\"form_cols_col\">\n                    <input formControlName=\"youtube\" type=\"text\" class=\"form_100\" placeholder=\"н-р: {{ youTubeLink }}\"/>\n                </div>\n            </div>\n        </div>\n        <div class=\"form_row align-right\">\n            <input type=\"submit\" [disabled]=\"form.invalid || isSendData\" [value]=\" ad ? 'Изменить':'Создать' \"/>\n        </div>\n        <div *ngIf=\"!isProdMode\" class=\"form_row\">\n            {{ form.value | json }}\n        </div>\n    </form>\n</div>\n","import {Component, Input} from '@angular/core';\nimport {AdFullInterface} from '../../interfaces/response/ad';\nimport {environment} from '../../../environments/environment';\n\n@Component({\n    selector: 'app-ad',\n    templateUrl: './ad.component.html',\n    styleUrls: ['./ad.component.less'],\n})\nexport class AdComponent {\n    url: string = environment.apiUrl;\n    @Input() ad: AdFullInterface;\n    @Input() viewOpt: string;\n    @Input() inProfile: boolean = false;\n}\n","<div class=\"ad\" [class.sx-horiz]=\" viewOpt === 'line' \">\n    <ng-container *ngIf=\"!ad.isDisabled && ad.isApproved; then coverBasic; else coverCut\"></ng-container>\n\n    <div class=\"ad_data\">\n        <a *ngIf=\"ad.isDisabled || !ad.isApproved\" class=\"ad_title\" title=\"{{ ad.title }}\">\n            {{ ad.title }}\n        </a>\n        <a *ngIf=\"!ad.isDisabled && ad.isApproved\" class=\"ad_title\" [routerLink]=\" '/ad/' + ad.slug \"\n           title=\"{{ ad.title }}\">\n            {{ ad.title }}\n        </a>\n\n        <div *ngIf=\"ad.price > 0; else freeCost\" class=\"ad_price text-nowrap\">\n            <strong>{{ ad.price | myCurrency }}</strong> сум\n        </div>\n        <small *ngIf=\"ad.cityName\" class=\"ad_city\">{{ ad.cityName }}</small>\n        <small class=\"ad_created\">{{ ad.createdAt | date: \"medium\" }}</small>\n        <div *ngIf=\"inProfile\">\n            <small class=\"ad_status\">\n                Статус:\n                <strong *ngIf=\"!ad.isApproved\">на модерации</strong>\n                <strong *ngIf=\"ad.isDisabled\">выключено</strong>\n                <strong *ngIf=\"!ad.isDisabled && ad.isApproved\">открыто</strong>\n            </small>\n            <div class=\"align-right\">\n                <a [routerLink]=\"['/ad/edit/', ad.adId]\" href=\"javascript:void(0);\">Изменить</a>\n            </div>\n        </div>\n    </div>\n</div>\n<ng-template #freeCost>\n    <div class=\"ad_price\"><strong>Бесплатно</strong></div>\n</ng-template>\n<ng-template #coverBasic>\n    <a [routerLink]=\" '/ad/' + ad.slug \" class=\"ad_cover\">\n        <img *ngIf=\"ad.images && ad.images.length\"\n             [src]=\"url + '/resample/224/0/' + ad.images[0].filepath\"\n             alt=\"{{ ad.title }}\"\n             title=\"{{ ad.title }}\"/>\n    </a>\n</ng-template>\n<ng-template #coverCut>\n    <a class=\"ad_cover\">\n        <img *ngIf=\"ad.images && ad.images.length\"\n             [src]=\"url + '/resample/224/0/' + ad.images[0].filepath\"\n             alt=\"{{ ad.title }}\"\n             title=\"{{ ad.title }}\"/>\n    </a>\n</ng-template>\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {BreadcrumbsInterface} from '../../interfaces/breadcrumbs';\nimport {BreadcrumbsService} from '../../services/breadcrumbs.service';\n\n@Component({\n    selector: 'app-breadcrumbs',\n    templateUrl: './breadcrumbs.component.html',\n    styleUrls: ['./breadcrumbs.component.less'],\n})\nexport class BreadcrumbsComponent implements OnInit, OnDestroy {\n    private subscriptions: Subscription[] = [];\n    items: BreadcrumbsInterface[] = [];\n    isLoading: boolean = false;\n\n    constructor(\n        private serviceBreadcrumbs: BreadcrumbsService,\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.isLoading = true;\n        const s = this.serviceBreadcrumbs.sender$.subscribe(x => {\n            this.items = x;\n            this.isLoading = false;\n        });\n        this.subscriptions.push(s);\n    }\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach(x => x.unsubscribe());\n    }\n}\n","<div class=\"breadcrumbs\">\n    <div *ngIf=\"!isLoading\" class=\"breadcrumbs_items\">\n        <ng-container *ngFor=\"let item of items; let i = index\">\n            <a class=\"breadcrumbs_item text-eclipse\"\n               href=\"javascript:void(0);\"\n               [routerLink]=\"item.url\"><small>{{ item.name }}</small></a>\n            <div *ngIf=\"i != items.length-1\" class=\"breadcrumbs_sep\">/</div>\n        </ng-container>\n    </div>\n    <div *ngIf=\"isLoading\" class=\"breadcrumbs_items\">\n        <div class=\"breadcrumbs_item sx-default\">&nbsp;</div>\n        <div class=\"breadcrumbs_sep\">/</div>\n        <div class=\"breadcrumbs_item sx-default\">&nbsp;</div>\n        <div class=\"breadcrumbs_sep\">/</div>\n        <div class=\"breadcrumbs_item sx-default\">&nbsp;</div>\n    </div>\n</div>\n","import {\n    AfterContentChecked,\n    AfterContentInit,\n    AfterViewInit,\n    Component,\n    ElementRef,\n    Input,\n    OnDestroy,\n    OnInit,\n    ViewChild\n} from '@angular/core';\n\n@Component({\n    selector: 'app-carousel',\n    templateUrl: './carousel.component.html',\n    styleUrls: ['./carousel.component.less'],\n})\nexport class CarouselComponent implements OnInit, OnDestroy, AfterViewInit, AfterContentInit, AfterContentChecked {\n    private classNameDisabled: string = 'sx-disabled';\n    private sideLeft: HTMLBaseElement[] = [];\n    private sideCenter: HTMLBaseElement[] = [];\n    private sideRight: HTMLBaseElement[] = [];\n    private items: HTMLBaseElement[] = [];\n    private animationTimeMS: number = 500;\n    @Input() isByOne: boolean = false;\n    @ViewChild('btnLeft', {static: true}) btnLeft: ElementRef;\n    @ViewChild('btnRight', {static: true}) btnRight: ElementRef;\n    @ViewChild('row', {static: true}) row: ElementRef;\n    @ViewChild('frame', {static: true}) frame: ElementRef;\n\n    constructor() {\n    }\n\n    ngOnInit(): void {\n    }\n\n    ngOnDestroy(): void {\n    }\n\n    ngAfterViewInit(): void {\n    }\n\n    ngAfterContentInit(): void {\n        // инициализировался content\n    }\n\n    ngAfterContentChecked(): void {\n        if (!this.items.length) {\n            this.items = this.getItems();\n\n            if (this.items.length) {\n                for (let i = 0, tmpW = 0; i < this.items.length; i++) {\n                    let el: HTMLBaseElement = this.items[i];\n                    tmpW += this.getTrueWidth(el.offsetWidth);\n\n                    if (tmpW <= this.frame.nativeElement.clientWidth) {\n                        this.sideCenter.push(el); // наполняем центральную часть\n\n                    } else {\n                        this.sideRight.push(el); // наполняем правую сторону\n                    }\n                }\n\n                this.render();\n            }\n        }\n    }\n\n    getItems(): HTMLBaseElement[] {\n        return Array.from(this.row.nativeElement.querySelectorAll(':scope > *'));\n    }\n\n    move({target}, toRight: boolean): void {\n        if (target.classList.contains(this.classNameDisabled)) {\n            return;\n        }\n\n        if (toRight) {\n            let leftovers: HTMLBaseElement[] = [];\n            for (let i = 0, tmpW = 0; i < this.sideRight.length; i++) {\n                let first = this.sideRight[i]; // div-блок\n                tmpW += this.getTrueWidth(first.offsetWidth);\n\n                if (tmpW <= this.frame.nativeElement.clientWidth) {\n                    this.sideLeft.push(this.sideCenter.shift());\n                    this.sideCenter.push(first);\n                    continue;\n                }\n\n                leftovers.push(first);\n            }\n\n            this.sideRight = leftovers;\n\n        } else {\n            let leftovers: HTMLBaseElement[] = [];\n            for (let i = this.sideLeft.length - 1, tmpW = 0; i >= 0; i--) {\n                let last = this.sideLeft[i]; // div-блок\n                tmpW += this.getTrueWidth(last.offsetWidth);\n\n                if (tmpW <= this.frame.nativeElement.clientWidth) {\n                    this.sideCenter.unshift(last);\n                    this.sideRight.unshift(this.sideCenter.pop());\n                    continue;\n                }\n\n                leftovers.unshift(last);\n            }\n\n            this.sideLeft = leftovers;\n        }\n\n        this.render();\n    }\n\n    getTrueWidth(value: number): number {\n        return this.isByOne ? this.frame.nativeElement.clientWidth : value;\n    }\n\n    seek(index: number): void {\n        if (!this.items.length) {\n            return;\n        }\n\n        const row: HTMLBaseElement = this.row.nativeElement;\n\n        if (index > this.items.length - 1) {\n            index = this.items.length - 1;\n        }\n        if (index < 0) {\n            index = 0;\n        }\n\n        this.sideLeft.length = 0;\n        this.sideCenter.length = 0;\n        this.sideRight.length = 0;\n\n        for (let i = 0, tmpW = 0; i < this.items.length; i++) {\n            let el = this.items[i];\n\n            if (i < index) {\n                this.sideLeft.push(el);\n                continue;\n            }\n            tmpW += this.getTrueWidth(el.offsetWidth);\n\n            if (tmpW <= this.frame.nativeElement.clientWidth) {\n                this.sideCenter.push(el);\n            } else {\n                this.sideRight.push(el);\n            }\n        }\n\n        row.classList.remove('sx-transition');\n        this.render();\n        setTimeout(() => row.classList.add('sx-transition'), this.animationTimeMS);\n    }\n\n    render(): void {\n        let offset: number = 0;\n        const btnLeft: HTMLBaseElement = this.btnLeft.nativeElement;\n        const btnRight: HTMLBaseElement = this.btnRight.nativeElement;\n\n        for (let i = 0; i < this.sideLeft.length; i++) {\n            offset += this.getTrueWidth(this.sideLeft[i].offsetWidth);\n        }\n\n        this.row.nativeElement.style.transform = ('translateX(' + (-1 * offset).toString() + 'px)');\n\n        if (btnLeft.classList.contains(this.classNameDisabled)) {\n            btnLeft.classList.remove(this.classNameDisabled);\n        }\n        if (btnRight.classList.contains(this.classNameDisabled)) {\n            btnRight.classList.remove(this.classNameDisabled);\n        }\n        if (!this.sideLeft.length) {\n            btnLeft.classList.add(this.classNameDisabled);\n        }\n        if (!this.sideRight.length) {\n            btnRight.classList.add(this.classNameDisabled);\n        }\n    }\n}\n","<div class=\"carousel\">\n    <div #btnLeft class=\"carousel_btn sx-left\" (click)=\"move($event, false)\"></div>\n    <div #btnRight class=\"carousel_btn sx-right\" (click)=\"move($event, true)\"></div>\n    <div #frame class=\"carousel_frame\">\n        <div #row class=\"carousel_row sx-transition\">\n            <ng-content></ng-content>\n        </div>\n    </div>\n</div>\n","import {AfterViewInit, ChangeDetectorRef, Component, ElementRef, EventEmitter, OnDestroy, OnInit, Output, ViewChild} from '@angular/core';\nimport {CatTreeInterface} from '../../interfaces/response/cat';\nimport {ManagerService} from '../../services/manager.service';\nimport {Subscription} from 'rxjs';\nimport {EmitCatsHorizAccordionInterface} from '../../interfaces/emit-cats-horiz-accordion';\n\n@Component({\n    selector: 'app-cats-horiz-accordion',\n    templateUrl: './cats-horiz-accordion.component.html',\n    styleUrls: ['./cats-horiz-accordion.component.less'],\n})\nexport class CatsHorizAccordionComponent implements OnInit, OnDestroy, AfterViewInit {\n    private subscriptions: Subscription[] = [];\n    private catTree: CatTreeInterface;\n    aCols: CatTreeInterface[] = []; // динамическая переменная\n    @Output() onSelectLeaf: EventEmitter<EmitCatsHorizAccordionInterface> = new EventEmitter();\n    @ViewChild('catCols', {static: true}) catCols: ElementRef;\n\n    constructor(\n        private managerSettings: ManagerService,\n        private changeDetection: ChangeDetectorRef,\n    ) {\n    }\n\n    ngOnInit(): void {\n        const s = this.managerSettings.settings$.subscribe(x => {\n            this.catTree = x.catsTree;\n            this.aCols.push(this.catTree); // по умолчанию вставим первый иерархию каталога\n        });\n        this.subscriptions.push(s);\n    }\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach(x => x.unsubscribe());\n    }\n\n    ngAfterViewInit(): void {\n    };\n\n    render(catId: number, event): void {\n        if (event && event.target.classList.contains('sx-active')) {\n            return;\n        }\n\n        this.reset();\n        this.aCols.length = 0;\n        this.aCols = [this.catTree];\n        let tmpCats = this.getArrayAncestorsCatTree(this.catTree, catId, event).reverse();\n        let ids: number[] = [catId];\n\n        tmpCats.forEach(tmpCat => {\n            if (tmpCat.childes && tmpCat.childes.length) {\n                this.aCols.push(tmpCat);\n            }\n\n            ids.push(tmpCat.catId);\n        });\n\n        this.changeDetection.detectChanges();\n\n        ids.forEach(id => this.catCols.nativeElement\n            .querySelector('.cats-horiz-accordion_col_' + id)\n            .classList.add('sx-active'));\n    }\n\n    reset(): void {\n        this.aCols.length = 0;\n        this.aCols = [this.catTree];\n\n        this.catCols\n            .nativeElement\n            .querySelectorAll('.sx-active')\n            .forEach(x => x.classList.remove('sx-active'));\n    }\n\n    private getArrayAncestorsCatTree(catTree: CatTreeInterface, catId: number, eventSrc: Event): CatTreeInterface[] {\n        let result: CatTreeInterface[] = [];\n\n        for (let i = 0; i < catTree.childes.length; i++) {\n            const cat = catTree.childes[i];\n\n            if (cat.catId === catId) {\n                result.push(cat);\n\n                // если быбирается нативно и это лист, то уведомляем назад. Иначе уведомление не даем.\n                if ((!cat.childes || !cat.childes.length) && eventSrc) {\n                    this.onSelectLeaf.emit({\n                        cat: cat,\n                    });\n                }\n\n                return result;\n            }\n            if (cat.childes && cat.childes.length) {\n                result = this.getArrayAncestorsCatTree(cat, catId, eventSrc);\n\n                if (result.length) {\n                    result.push(cat);\n                    return result;\n                }\n            }\n        }\n\n        return result;\n    }\n}\n","<div #catCols class=\"cats-horiz-accordion\">\n    <ul *ngFor=\"let subCat of aCols\" class=\"cats-horiz-accordion_col\">\n        <li *ngFor=\"let cat of subCat.childes\"\n            class=\"cats-horiz-accordion_col_{{ cat.catId }}\"\n            (click)=\"render(cat.catId, $event)\">\n            {{ cat.name }}\n        </li>\n    </ul>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {MyErrorService} from '../../services/my-error.service';\nimport {MyErrorInterface} from '../../interfaces/my-error';\n\n@Component({\n    selector: 'app-errors-fly',\n    templateUrl: './errors-fly.component.html',\n    styleUrls: ['./errors-fly.component.less']\n})\nexport class ErrorsFlyComponent implements OnInit {\n    private waitTimeSec: number = 5;\n    items: MyErrorInterface[] = [];\n\n    constructor(\n        private serviceMyErrors: MyErrorService,\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.serviceMyErrors.errors$.subscribe(x => {\n            this.items.push(x);\n            const index: number = this.items.length - 1;\n\n            setTimeout(() => this.remove(index), this.waitTimeSec * 1000);\n        });\n    }\n\n    remove(i: number): void {\n        if (!this.items[i]) {\n            return;\n        }\n\n        this.items.splice(i, 1);\n    }\n}\n","<div class=\"errors-fly\">\n    <div *ngFor=\"let item of items; let i = index\" class=\"errors-fly_item\" (click)=\"remove(i)\">\n        <div *ngIf=\"item.title\" class=\"errors-fly_item_title\">{{ item.title }}</div>\n        <div class=\"errors-fly_item_msg\">{{ item.msg }}</div>\n    </div>\n</div>\n","import {Component} from '@angular/core';\nimport {environment} from '../../../environments/environment';\n\n@Component({\n    selector: 'app-footer',\n    templateUrl: './footer.component.html',\n    styleUrls: ['./footer.component.less'],\n})\nexport class FooterComponent {\n    emailSupport: string = environment.emailSupport;\n    curYear: number = environment.curYear;\n}\n","<footer>\n    <div class=\"container\">\n        <div class=\"footer\">\n            <div class=\"footer_column\">\n                <ul>\n                    <!--                    <li>-->\n                    <!--                        <small><a href=\"javascript:void(0);\" routerLink=\"/feedback\">Форма обратной связи</a></small>-->\n                    <!--                    </li>-->\n                    <li>\n                        <small><a href=\"mailto:{{emailSupport}}\">{{emailSupport}}</a> - служба поддержки</small>\n                    </li>\n                </ul>\n            </div>\n            <div class=\"footer_column\">\n                <ul>\n                    <li>\n                        <small><a href=\"javascript:void(0);\" routerLink=\"/info/about\">О сайте</a></small>\n                    </li>\n                    <!--                    <li>-->\n                    <!--                        <small><a href=\"javascript:void(0);\" routerLink=\"/info/releases\">Релизы</a></small>-->\n                    <!--                    </li>-->\n                    <!--                    <li>-->\n                    <!--                        <small><a href=\"javascript:void(0);\" routerLink=\"/info/moderation\">Модерация</a></small>-->\n                    <!--                    </li>-->\n                </ul>\n            </div>\n            <div class=\"footer_column\">\n                <ul>\n                    <li>\n                        <small class=\"text-nowrap\">www.altair.uz © {{curYear}}</small>\n                    </li>\n                    <li>\n                        <small>Все права защищены</small>\n                    </li>\n                </ul>\n            </div>\n        </div>\n    </div>\n</footer>\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {AuthService} from '../../services/auth.service';\nimport {UserInterface} from '../../interfaces/response/user';\n\n@Component({\n    selector: 'app-header',\n    templateUrl: './header.component.html',\n    styleUrls: ['./header.component.less'],\n})\nexport class HeaderComponent implements OnInit, OnDestroy {\n    private subscriptions: Subscription[] = [];\n    profile: UserInterface;\n    isAdmin: boolean;\n\n    constructor(\n        private authService: AuthService,\n    ) {\n    }\n\n    ngOnInit(): void {\n        const s = this.authService.profile$.subscribe(x => {\n            this.profile = x;\n            this.isAdmin = this.authService.isAdmin();\n        });\n        this.subscriptions.push(s);\n    }\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach(x => x.unsubscribe());\n    }\n}\n","<header>\n    <div class=\"container\">\n        <div class=\"header\">\n            <div>\n                <div class=\"header_flexbox\">\n                    <div>\n                        <app-top-menu-cats-tree></app-top-menu-cats-tree>\n                    </div>\n                    <div>\n                        <a class=\"header_logo\" routerLink=\"/main\" title=\"Сайт бесплатных объявлений\">\n                            <img src=\"/assets/images/logo.png\" alt=\"www.altair.uz\"/>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div>\n                <app-search></app-search>\n            </div>\n            <div>\n                <div class=\"header_flexbox\">\n                    <div>\n                        <a *ngIf=\"isAdmin\" href=\"javascript:void(0);\" routerLink=\"/adm\">Адм.</a>\n                    </div>\n                    <div>\n                        <a *ngIf=\"!profile\" href=\"javascript:void(0);\" routerLink=\"/login\">Вход</a>\n                        <a *ngIf=\"profile\" href=\"javascript:void(0);\" routerLink=\"/profile\">Профиль</a>\n                    </div>\n                    <div>\n                        <button routerLink=\"/ad/create\">Добавить</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</header>\n","import {AfterViewInit, Component, ElementRef, OnDestroy, OnInit, ViewChild} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {AuthService} from '../../services/auth.service';\nimport {NavigationEnd, Router} from '@angular/router';\nimport {environment} from '../../../environments/environment';\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.less']\n})\nexport class LoginComponent implements OnInit, OnDestroy, AfterViewInit {\n    private subscriptions: Subscription[] = [];\n    form: FormGroup;\n    @ViewChild('submit', {static: true}) submit: ElementRef;\n\n    constructor(\n        private fb: FormBuilder,\n        private serviceAuth: AuthService,\n        private router: Router,\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.form = this.fb.group({\n            email: ['', [Validators.required, Validators.email]],\n            password: ['', [Validators.required, Validators.minLength(environment.minLenPassword)]],\n        });\n\n        const s = this.router.events.subscribe(event => {\n            if (event instanceof NavigationEnd) {\n                this.serviceAuth.toggleModalAuth$.next(false);\n            }\n        });\n        this.subscriptions.push(s);\n    }\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach(x => x.unsubscribe());\n    }\n\n    ngAfterViewInit(): void {\n    }\n\n    onSubmit(): void {\n        if (this.form.invalid === true) {\n            for (let key in this.form.controls) {\n                const formControl = this.form.get(key);\n\n                if (formControl.status === 'INVALID') {\n                    console.log('INVALID:', key);\n                }\n            }\n            return;\n        }\n        const submit = this.submit.nativeElement;\n\n        submit.disabled = true;\n        const s = this.serviceAuth.login(this.form.value).subscribe(\n            x => {\n                this.serviceAuth.JWT = x.JWT;\n                this.serviceAuth.profile$.next(x.user);\n                this.router.navigate(['/profile']).then();\n            },\n            err => submit.disabled = false,\n            () => submit.disabled = false\n        );\n        this.subscriptions.push(s);\n    }\n}\n","<div class=\"login\">\n    <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\" class=\"form\">\n        <div class=\"form_row align-center\">\n            <h1>Вход</h1>\n        </div>\n        <div class=\"form_row\">\n            <div class=\"form_title\">Е-мэйл:</div>\n            <div>\n                <input formControlName=\"email\" class=\"form_100\" type=\"email\"/>\n            </div>\n        </div>\n        <div class=\"form_row\">\n            <div class=\"form_title\">Пароль:</div>\n            <div>\n                <input formControlName=\"password\" class=\"form_100\" type=\"password\"/>\n            </div>\n        </div>\n        <div class=\"form_row align-right\">\n            <a href=\"javascript:void(0);\" routerLink=\"/recover/sender\">Забыли пароль?</a>\n        </div>\n        <div class=\"form_row\">\n            <input #submit type=\"submit\" [disabled]=\"form.invalid\" value=\"Отправить\"/>\n        </div>\n    </form>\n    <div class=\"login_register align-center\">\n        <p>\n            <a href=\"javascript:void(0);\" routerLink=\"/register\">Зарегистрироваться</a>\n        </p>\n        <p class=\"text-mute\">\n            <small>При входе вы подтверждаете согласие с <a href=\"javascript:void(0);\" routerLink=\"/info/agreement\">условиями\n                использования Altair.uz</a>.</small>\n        </p>\n    </div>\n</div>\n","import {Component, EventEmitter, Input, OnDestroy, OnInit, Output} from '@angular/core';\nimport {AuthService} from '../../services/auth.service';\n\n@Component({\n    selector: 'app-modal',\n    templateUrl: './modal.component.html',\n    styleUrls: ['./modal.component.less'],\n})\nexport class ModalComponent implements OnInit, OnDestroy {\n    @Input() width: string;\n    @Output() onClose: EventEmitter<boolean> = new EventEmitter();\n\n    constructor(\n        private serviceAuth: AuthService,\n    ) {\n    }\n\n    ngOnInit(): void {\n        document.body.classList.add('sx-modal');\n    }\n\n    ngOnDestroy(): void {\n        if (!document.body.querySelector('.modal')) {\n            document.body.classList.remove('sx-modal');\n        }\n    }\n\n    hide(): void {\n        this.onClose.emit(true);\n        this.serviceAuth.toggleModalAuth$.next(false);\n    }\n}\n","<div class=\"modal\"\n     [class.sx-md]=\" width === 'md' \"\n     [class.sx-sm]=\" width === 'sm' \">\n    <div class=\"modal_dark\" (click)=\"hide()\"></div>\n    <div class=\"modal_box\">\n        <div class=\"modal_close\" (click)=\"hide()\">&times;</div>\n        <div class=\"modal_content\">\n            <ng-content></ng-content>\n        </div>\n    </div>\n</div>\n","import {Component} from '@angular/core';\n\n@Component({\n    selector: 'app-not-found',\n    templateUrl: './not-found.component.html',\n    styleUrls: ['./not-found.component.less'],\n})\nexport class NotFoundComponent {\n}\n","<div class=\"not-found\">\n    <div class=\"align-center\">\n        <span class=\"text-mute\">Статус:</span>&nbsp;<strong>404</strong>\n        <br/>\n        <small class=\"text-mute\">страница не найдена</small>\n    </div>\n</div>\n","import {AfterViewInit, Component, OnDestroy, OnInit, ViewChild} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {ActivatedRoute} from '@angular/router';\nimport {ProfileService} from '../../services/profile.service';\nimport {CatsHorizAccordionComponent} from '../cats-horiz-accordion/cats-horiz-accordion.component';\nimport {EmitCatsHorizAccordionInterface} from '../../interfaces/emit-cats-horiz-accordion';\nimport {AdFormComponent} from '../ad-form/ad-form.component';\n\n@Component({\n    selector: 'app-page-ad-create-edit',\n    templateUrl: './page-ad-create-edit.component.html',\n    styleUrls: ['./page-ad-create-edit.component.less'],\n})\nexport class PageAdCreateEditComponent implements OnInit, OnDestroy, AfterViewInit {\n    private subscriptions: Subscription[] = [];\n    isEditingAd: boolean = false;\n    @ViewChild(CatsHorizAccordionComponent) catsHorizAccordion: CatsHorizAccordionComponent;\n    @ViewChild(AdFormComponent) adForm: AdFormComponent;\n\n    constructor(\n        private route: ActivatedRoute,\n        private serviceProfile: ProfileService,\n    ) {\n    }\n\n    ngOnInit(): void {\n    }\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach(x => x.unsubscribe());\n    }\n\n    ngAfterViewInit(): void {\n        let sAdId: string = this.route.snapshot.paramMap.get('adId');\n\n        if (sAdId) {\n            let adId: number = parseInt(sAdId, 10);\n\n            if (!isNaN(adId)) {\n                const s = this.serviceProfile.getAd(adId).subscribe(\n                    x => {\n                        this.catsHorizAccordion.render(x.catId, null);\n                        this.adForm.ad = x;\n                        this.isEditingAd = true;\n                    },\n                    err => s.unsubscribe(),\n                    () => s.unsubscribe()\n                );\n            }\n        }\n    };\n\n    selectLeaf(signal: EmitCatsHorizAccordionInterface): void {\n        this.adForm.newCatId = signal.cat.catId;\n    }\n}\n","<div class=\"page-ad-create-edit\">\n    <h1 *ngIf=\"isEditingAd\">Редактирование объявления</h1>\n    <h1 *ngIf=\"!isEditingAd\">Добавить объявление</h1>\n\n    <h2>Каталог:</h2>\n    <app-cats-horiz-accordion (onSelectLeaf)=\"selectLeaf($event)\"></app-cats-horiz-accordion>\n\n    <h2>Параметры:</h2>\n    <app-ad-form mode=\"public\"></app-ad-form>\n</div>\n","import {AfterViewInit, ChangeDetectorRef, Component, OnDestroy, OnInit, ViewChild} from '@angular/core';\nimport {AdFullInterface} from '../../interfaces/response/ad';\nimport {AdService} from '../../services/ad.service';\nimport {Subscription} from 'rxjs';\nimport {environment} from '../../../environments/environment';\nimport {PagesService} from '../../services/pages.service';\nimport {CatFullInterface, CatInterface, CatTreeInterface} from '../../interfaces/response/cat';\nimport {BreadcrumbsService} from '../../services/breadcrumbs.service';\nimport {Helpers} from '../../helpers';\nimport {ModalComponent} from '../modal/modal.component';\nimport {CarouselComponent} from '../carousel/carousel.component';\nimport {ManagerService} from '../../services/manager.service';\nimport {DomSanitizer, SafeResourceUrl} from '@angular/platform-browser';\n\n@Component({\n    selector: 'app-page-ad',\n    templateUrl: './page-ad.component.html',\n    styleUrls: ['./page-ad.component.less'],\n})\nexport class PageAdComponent implements OnInit, OnDestroy, AfterViewInit {\n    private subscriptions: Subscription[] = [];\n    adFull: AdFullInterface;\n    catFull: CatFullInterface;\n    url: string = environment.apiUrl;\n    adId: number;\n    isLoading: boolean = false;\n    isShowModalPhotos: boolean = false;\n    youTubeLink: SafeResourceUrl;\n    @ViewChild(ModalComponent) modal: ModalComponent;\n    @ViewChild(CarouselComponent) carousel: CarouselComponent;\n\n    constructor(\n        private adService: AdService,\n        private servicePages: PagesService,\n        private serviceBreadcrumbs: BreadcrumbsService,\n        private serviceManager: ManagerService,\n        private changeDetection: ChangeDetectorRef,\n        private sanitizer: DomSanitizer,\n    ) {\n        this.adId = Helpers.getAdIdFromUrl();\n\n        if (!this.adId) {\n            alert('Ошибка: не верный id объявления!');\n            return;\n        }\n    }\n\n    ngOnInit(): void {\n        const s = this.serviceManager.settings$.subscribe(x => this.start(x.catsTree));\n        this.subscriptions.push(s);\n    }\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach(x => x.unsubscribe());\n    }\n\n    ngAfterViewInit(): void {\n    }\n\n    start(catsTree: CatTreeInterface): void {\n        this.isLoading = true;\n        const s = this.servicePages.pageAd(this.adId).subscribe(\n            x => {\n                this.adFull = x.adFull;\n\n                if (this.adFull.youtube) {\n                    const link = Helpers.youTubeLink(this.adFull.youtube);\n                    this.youTubeLink = this.sanitizer.bypassSecurityTrustResourceUrl(link);\n                }\n\n                this.catFull = x.catFull;\n\n                let cats: CatInterface[] = [];\n                Helpers.getDescendants(catsTree.childes, this.adFull.catId, cats, 0);\n\n                this.serviceBreadcrumbs.sender$.next(Helpers.buildBCFromCats(cats));\n            },\n            err => this.isLoading = false,\n            () => this.isLoading = false\n        );\n        this.subscriptions.push(s);\n    }\n\n    showPhotos(indexPhoto: number): void {\n        this.isShowModalPhotos = true;\n        this.changeDetection.detectChanges();\n        this.carousel.seek(indexPhoto);\n    }\n}\n","<app-breadcrumbs></app-breadcrumbs>\n<div class=\"page-ad\">\n    <app-preloader *ngIf=\"isLoading\"></app-preloader>\n    <div>\n        <h1>{{ adFull?.title }}</h1>\n        <div class=\"page-ad_row\">\n            <div class=\"page-ad_basic\">\n                <div>\n                    <div class=\"page-ad_photo\">\n                        <img *ngIf=\"adFull?.images && adFull.images.length\"\n                             (click)=\"showPhotos(0)\"\n                             [src]=\"url + '/resample/320/0/' + adFull.images[0].filepath\"\n                             title=\"{{ adFull.title }}\"/>\n                    </div>\n                    <div *ngIf=\"adFull?.images && adFull.images.length > 1\" class=\"page-ad_mini-photos\">\n                        <ng-container *ngFor=\"let img of adFull.images; let i = index\">\n                            <span *ngIf=\"i\" (click)=\"showPhotos(i)\" class=\"page-ad_mini-photo\">\n                                <img [src]=\"url + '/resample/56/0/' + img.filepath\" title=\"{{ adFull.title }}\"/>\n                            </span>\n                        </ng-container>\n                    </div>\n                    <app-modal *ngIf=\"isShowModalPhotos\" (onClose)=\"isShowModalPhotos = false\">\n                        <app-carousel [isByOne]=\"true\">\n                            <div *ngFor=\"let img of adFull.images\" class=\"page-ad_modal-photo\">\n                                <img [src]=\"url + '/resample/900/0/' + img.filepath\" title=\"{{ adFull.title }}\"/>\n                            </div>\n                        </app-carousel>\n                    </app-modal>\n                </div>\n                <div>\n                    <ul class=\"page-ad_props\">\n                        <li *ngFor=\"let detailExt of adFull?.detailsExt\">\n                            <ng-container *ngIf=\"detailExt.kindPropName != 'photo' \">\n                                <ng-container *ngFor=\"let prop of catFull.props\">\n                                    <ng-container *ngIf=\"prop.propId === detailExt.propId\">\n                                        <span class=\"text-mute\">{{ prop.title }}:</span>\n                                    </ng-container>\n                                </ng-container>\n\n                                {{ detailExt.valueName ? detailExt.valueName : detailExt.value }}\n                            </ng-container>\n                        </li>\n                    </ul>\n                    <div>\n                        <span class=\"text-mute\">{{ catFull?.priceAlias ? catFull.priceAlias : 'Цена' }}: </span>\n                        <span *ngIf=\"adFull?.price\" class=\"text-nowrap\">\n                            <strong class=\"page-ad_price\">{{ adFull.price | myCurrency}}</strong>\n                            сум\n                        </span>\n                        <strong *ngIf=\"!adFull?.price\" class=\"page-ad_price\">бесплатно</strong>\n                        {{ catFull?.priceSuffix }}\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"page-ad_row\">\n            <h2>Описание</h2>\n            <div class=\"page-ad_description\">\n                {{ adFull?.description }}\n            </div>\n        </div>\n        <div *ngIf=\"youTubeLink\" class=\"page-ad_row\">\n            <h2>Видео</h2>\n            <div class=\"page-ad_youtube\">\n                <iframe [src]=\"youTubeLink\"\n                        frameborder=\"0\"\n                        allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n                        allowfullscreen></iframe>\n            </div>\n        </div>\n        <div class=\"page-ad_row align-right\">\n            <span class=\"text-mute\">Созданно:</span> {{ adFull?.createdAt | date }} /\n            <span class=\"text-mute\">Изменено:</span> {{ adFull?.updatedAt | date }}\n        </div>\n    </div>\n</div>\n","import {AfterViewInit, ChangeDetectorRef, Component, ElementRef, OnDestroy, OnInit, ViewChild} from '@angular/core';\nimport {ActivatedRoute, NavigationEnd, Router} from '@angular/router';\nimport {AdFullInterface} from '../../interfaces/response/ad';\nimport {AdService} from '../../services/ad.service';\nimport {Subscription} from 'rxjs';\nimport {CatInterface, CatTreeInterface} from '../../interfaces/response/cat';\nimport {BreadcrumbsService} from '../../services/breadcrumbs.service';\nimport {Helpers} from '../../helpers';\nimport {ManagerService} from '../../services/manager.service';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\n\n@Component({\n    selector: 'app-page-cat',\n    templateUrl: './page-cat.component.html',\n    styleUrls: ['./page-cat.component.less'],\n})\nexport class PageCatComponent implements OnInit, OnDestroy, AfterViewInit {\n    private sSpecial: Subscription;\n    private subscriptions: Subscription[] = [];\n    private loadMoreForScroll: () => void;\n    private masonry: ElementRef;\n    private form: FormGroup;\n    isLoadAll: boolean = false;\n    ads: AdFullInterface[] = [];\n    isLoading: boolean = false;\n    isPathRootCat: boolean = false;\n    isPathNotFound: boolean = false;\n    catTree: CatTreeInterface;\n    @ViewChild('preloader', {static: true}) preloader: ElementRef;\n\n    @ViewChild('masonry') set content(content: ElementRef) {\n        if (!content) {\n            return;\n        }\n\n        this.masonry = content;\n    };\n\n    constructor(\n        private fb: FormBuilder,\n        private serviceAd: AdService,\n        private serviceManager: ManagerService,\n        private serviceBreadcrumbs: BreadcrumbsService,\n        private router: Router,\n        private route: ActivatedRoute,\n        private changeDetection: ChangeDetectorRef,\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.loadMoreForScroll = this.loadMore.bind(this);\n        this.form = this.fb.group({\n            catId: [0, [Validators.required, Validators.min(0)]],\n            limit: [10, [Validators.required, Validators.min(1)]],\n            offset: [0, Validators.min(0)],\n        });\n        const s = this.serviceManager.settings$.subscribe(x => {\n            this.catTree = x.catsTree; // перед стартом\n            this.start();\n        });\n        this.subscriptions.push(s);\n    }\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach(x => x.unsubscribe());\n        this.removeScroll();\n    }\n\n    ngAfterViewInit(): void {\n        this.addScroll();\n    }\n\n    addScroll(): void {\n        window.addEventListener('scroll', this.loadMoreForScroll);\n    }\n\n    removeScroll(): void {\n        window.removeEventListener('scroll', this.loadMoreForScroll);\n    }\n\n    start(): void {\n        const s = this.router.events.subscribe(event => {\n            if (event instanceof NavigationEnd) {\n                this.reset();\n                this.start();\n                s.unsubscribe(); // необходимо два\n            }\n        });\n        this.subscriptions.push(s);\n\n        const catId = Helpers.findCatIdFromSlugs(this.catTree.childes, this.route.snapshot.url);\n        this.form.get('catId').setValue(catId);\n        this.reset();\n\n        // если находимся в /cat\n        if (catId < 1 && this.route.snapshot.url.length === 0) {\n            this.reset();\n            this.renderBC();\n            this.isPathRootCat = true;\n            this.changeDetection.detectChanges();\n            Helpers.masonry(this.masonry.nativeElement, '.page-cat_brick');\n            return;\n\n            // есть какой-то урл (/cat/asd), но он не найден в структуре дерева\n        } else if (catId < 1 && this.route.snapshot.url.length) {\n            this.reset();\n            this.renderBC();\n            this.isPathNotFound = true;\n            return;\n        }\n\n        this.renderBC();\n        this.send();\n    }\n\n    send(): void {\n        if (this.form.invalid) {\n            for (let key in this.form.controls) {\n                const formControl = this.form.get(key);\n\n                if (formControl.status === 'INVALID') {\n                    console.log('INVALID:', key);\n                }\n            }\n            return;\n        }\n\n        this.isLoading = true;\n        this.sSpecial = this.serviceAd.getFromCat(this.form.value).subscribe(\n            x => {\n                this.ads.push(...x);\n                this.isLoading = false;\n                let offset = this.form.get('offset').value;\n                let limit = this.form.get('limit').value;\n\n                this.form.get('offset').setValue(offset + limit);\n\n                if (x.length < limit) {\n                    this.isLoadAll = true;\n                    return;\n                }\n\n                this.loadMore();\n            },\n            err => this.isLoading = false,\n            () => this.isLoading = false\n        );\n        this.subscriptions.push(this.sSpecial);\n    }\n\n    renderBC(): void {\n        if (!this.catTree) {\n            return;\n        }\n\n        let cats: CatInterface[] = [];\n        const catId = this.form.get('catId').value;\n        Helpers.getDescendants(this.catTree.childes, catId, cats, 0);\n\n        this.serviceBreadcrumbs.sender$.next(Helpers.buildBCFromCats(cats));\n    }\n\n    loadMore(): void {\n        if (this.isPathNotFound || this.isPathRootCat) {\n            return;\n        }\n\n        const rect: DOMRect = this.preloader.nativeElement.getBoundingClientRect();\n        if (rect.top > window.innerHeight || this.isLoading || this.isLoadAll) {\n            return;\n        }\n\n        this.send();\n    }\n\n    reset(): void {\n        this.ads.length = 0;\n        this.isLoading = false;\n        this.isLoadAll = false;\n        this.isPathRootCat = false;\n        this.isPathNotFound = false;\n        this.form.get('offset').setValue(0);\n\n        if (this.sSpecial) {\n            this.sSpecial.unsubscribe();\n        }\n    }\n}\n","<app-breadcrumbs></app-breadcrumbs>\n<div class=\"page-cat\">\n    <app-not-found *ngIf=\"isPathNotFound\"></app-not-found>\n    <app-ad *ngFor=\"let ad of ads\" [ad]=\"ad\"></app-ad>\n    <ng-container *ngIf=\"isPathRootCat\">\n        <h1>Категории:</h1>\n        <div #masonry class=\"page-cat_bricks\">\n            <div *ngFor=\"let cat of catTree?.childes\" class=\"page-cat_brick\">\n                <h2>\n                    <a class=\"text-eclipse\" href=\"javascript:void(0);\" [routerLink]=\"'/cat/'+cat.slug\">\n                        {{ cat.name }}\n                    </a>\n                </h2>\n                <ul *ngIf=\"cat.childes.length\">\n                    <li *ngFor=\"let subCat of cat.childes\">\n                        <h3>\n                            <a class=\"text-eclipse\" href=\"javascript:void(0);\"\n                               [routerLink]=\"'/cat/'+cat.slug+'/'+subCat.slug\">\n                                {{ subCat.name }}\n                            </a>\n                        </h3>\n                    </li>\n                </ul>\n            </div>\n        </div>\n    </ng-container>\n    <div #preloader [hidden]=\"isLoadAll\" [class.not-visible]=\"!isLoading\">\n        <app-preloader></app-preloader>\n    </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {ProfileService} from '../../services/profile.service';\nimport {ActivatedRoute} from '@angular/router';\nimport {Subscription} from 'rxjs';\n\n@Component({\n    selector: 'app-page-check-email-through-hash',\n    templateUrl: './page-check-email-through-hash.component.html',\n    styleUrls: ['./page-check-email-through-hash.component.less']\n})\nexport class PageCheckEmailThroughHashComponent implements OnInit {\n    private subscriptions: Subscription[] = [];\n    isLoading: boolean = false;\n    result: number = -1;\n\n    constructor(\n        private serviceProfile: ProfileService,\n        private route: ActivatedRoute,\n    ) {\n    }\n\n    ngOnInit(): void {\n        let hash: string = this.route.snapshot.paramMap.get('hash');\n\n        if (hash) {\n            this.isLoading = true;\n            const s = this.serviceProfile.checkEmailThroughHash(hash).subscribe(\n                x => this.result = 1,\n                err => {\n                    this.isLoading = false;\n                    this.result = 0;\n                },\n                () => {\n                    this.isLoading = false;\n                }\n            );\n            this.subscriptions.push(s);\n        }\n    }\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach(x => x.unsubscribe());\n    }\n}\n","<div class=\"page-check-email-through-hash\">\n    <div *ngIf=\"isLoading\" class=\"page-check-email-through-hash_preloader\">\n        <app-preloader></app-preloader>\n    </div>\n    <div *ngIf=\"result === 1\">\n        <h1>Е-мэйл успешно подтвержден</h1>\n        <p>Пройдите в свою учетную запись, используя данные, которые вы указали ранее.</p>\n    </div>\n    <div *ngIf=\"result === 0\">\n        <h1>Проверка закончилась неудачей</h1>\n        <p>Перепроверьте пожалуйста данные, которые были высланы вам на эл. почту.</p>\n    </div>\n</div>\n","import {Component} from '@angular/core';\n\n@Component({\n    selector: 'app-page-login',\n    templateUrl: './page-login.component.html',\n    styleUrls: ['./page-login.component.less'],\n})\nexport class PageLoginComponent {\n}\n","<div class=\"page-login\">\n    <div class=\"page-login_box\">\n        <app-login></app-login>\n    </div>\n</div>\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {AdFullInterface} from '../../interfaces/response/ad';\nimport {Subscription} from 'rxjs';\nimport {Helpers} from '../../helpers';\nimport {PagesService} from '../../services/pages.service';\nimport {BreadcrumbsInterface} from '../../interfaces/breadcrumbs';\nimport {ManagerService} from '../../services/manager.service';\nimport {CatTreeInterface} from '../../interfaces/response/cat';\n\n@Component({\n    selector: 'app-page-main',\n    templateUrl: './page-main.component.html',\n    styleUrls: ['./page-main.component.less'],\n})\nexport class PageMainComponent implements OnInit, OnDestroy {\n    private subscriptions: Subscription[] = [];\n    private catsTree: CatTreeInterface;\n    lastAdsFull: AdFullInterface[] = [];\n    lastChainBC: BreadcrumbsInterface[] = [];\n    isLoading: boolean = false;\n\n    constructor(\n        private servicePages: PagesService,\n        private serviceManager: ManagerService,\n    ) {\n    }\n\n    ngOnInit(): void {\n        const s = this.serviceManager.settings$.subscribe(x => {\n            this.catsTree = x.catsTree;\n            this.start();\n        });\n        this.subscriptions.push(s);\n    }\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach(x => x.unsubscribe());\n    }\n\n    start(): void {\n        this.isLoading = true;\n        const s = this.servicePages.pageMain(10).subscribe(\n            x => {\n                this.lastAdsFull = x.lastAdsFull;\n\n                if (!this.lastAdsFull.length) {\n                    return;\n                }\n\n                const needCatId = this.lastAdsFull[0].catId;\n                let listCat = Helpers.getAncestors(this.catsTree.childes, needCatId);\n                this.lastChainBC = Helpers.buildBCFromCats(listCat);\n\n            },\n            err => this.isLoading = false,\n            () => this.isLoading = false\n        );\n        this.subscriptions.push(s);\n    }\n}\n","<div class=\"page-main\">\n    <div>\n        <h3 *ngIf=\"lastChainBC.length\" class=\"page-main_last-chain-cats\">\n            <ng-container *ngFor=\"let bc of lastChainBC; let i = index\">\n                <a [routerLink]=\"bc.url\">{{ bc.name }}</a>\n                <ng-container *ngIf=\"i < lastChainBC.length-1\">/</ng-container>\n                <ng-container *ngIf=\"i === lastChainBC.length-1\">:</ng-container>\n            </ng-container>\n        </h3>\n\n        <ng-container *ngIf=\"isLoading\">\n            <br/>\n            <app-preloader></app-preloader>\n        </ng-container>\n\n        <app-carousel *ngIf=\"lastAdsFull.length\">\n            <div *ngFor=\"let ad of lastAdsFull\">\n                <app-ad [ad]=\"ad\"></app-ad>\n            </div>\n        </app-carousel>\n    </div>\n</div>\n","import {Component} from '@angular/core';\n\n@Component({\n    selector: 'app-page-not-found',\n    templateUrl: './page-not-found.component.html',\n    styleUrls: ['./page-not-found.component.less'],\n})\nexport class PageNotFoundComponent {\n}\n","<div class=\"page-not-found\">\n    <app-not-found></app-not-found>\n</div>\n","import {AfterViewInit, Component, ElementRef, OnDestroy, OnInit, ViewChild} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {RecoverService} from '../../../services/recover.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {environment} from '../../../../environments/environment';\n\n@Component({\n    selector: 'app-page-recover-check-hash',\n    templateUrl: './check-hash.component.html',\n    styleUrls: ['./check-hash.component.less']\n})\nexport class PageRecoverCheckHashComponent implements OnInit, OnDestroy, AfterViewInit {\n    private subscriptions: Subscription[] = [];\n    private msg: string = 'Пароль успешно изменен.';\n    form: FormGroup;\n    isProdMode: boolean = environment.production;\n    @ViewChild('submitBtn', {static: true}) submitBtn: ElementRef;\n\n    constructor(\n        private fb: FormBuilder,\n        private serviceRecover: RecoverService,\n        private router: Router,\n        private route: ActivatedRoute,\n    ) {\n    }\n\n    ngOnInit(): void {\n        const hash = this.route.snapshot.paramMap.get('hash');\n        this.form = this.fb.group({\n            hash: [hash, [Validators.required, Validators.minLength(environment.minLenHash)]],\n            password: ['', [Validators.required, Validators.minLength(environment.minLenPassword)]],\n            passwordConfirm: ['', [Validators.required, Validators.minLength(environment.minLenPassword)]],\n        });\n    }\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach(x => x.unsubscribe());\n    }\n\n    ngAfterViewInit() {\n    }\n\n    onSubmit({target}): void {\n        if (this.form.invalid) {\n            for (let key in this.form.controls) {\n                const formControl = this.form.get(key);\n\n                if (formControl.status === 'INVALID') {\n                    console.log('INVALID:', key);\n                }\n            }\n            return;\n        }\n\n        const btnSubmit = this.submitBtn.nativeElement;\n        btnSubmit.disabled = true;\n        const s = this.serviceRecover.changePassword(this.form.value).subscribe(\n            x => {\n                alert(this.msg);\n                this.router.navigate(['/login']).then();\n            },\n            err => btnSubmit.disabled = false,\n            () => btnSubmit.disabled = false\n        );\n        this.subscriptions.push(s);\n    }\n}\n","<div class=\"page-recover-check-hash\">\n    <div class=\"page-recover-check-hash_box\">\n        <h1>Изменение пароля</h1>\n        <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit($event)\" class=\"form\">\n            <input formControlName=\"hash\" type=\"hidden\"/>\n\n            <div class=\"form_row\">\n                <div class=\"form_title\">Новый пароль:</div>\n                <input formControlName=\"password\" class=\"form_100\" type=\"text\"/>\n            </div>\n            <div class=\"form_row form_100\">\n                <div class=\"form_title\">Новый пароль (повтор):</div>\n                <input formControlName=\"passwordConfirm\" class=\"form_100\" type=\"text\"/>\n            </div>\n            <div class=\"form_row sx-submit align-right\">\n                <input #submitBtn type=\"submit\" [disabled]=\"form.invalid\" value=\"Изменить\"/>\n            </div>\n            <div *ngIf=\"!isProdMode\" class=\"form_row\">\n                {{ form.value | json }}\n            </div>\n        </form>\n    </div>\n</div>\n","import {AfterViewInit, Component, ElementRef, OnDestroy, OnInit, ViewChild} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {RecoverService} from '../../../services/recover.service';\nimport {Router} from '@angular/router';\nimport {environment} from '../../../../environments/environment';\n\n@Component({\n    selector: 'app-page-recover-sender',\n    templateUrl: './sender.component.html',\n    styleUrls: ['./sender.component.less']\n})\nexport class PageRecoverSenderComponent implements OnInit, OnDestroy, AfterViewInit {\n    private subscriptions: Subscription[] = [];\n    private msg: string = 'На Ваш е-мэйл отправлен проверочный код.\\nСледуйте указаниям в письме.';\n    form: FormGroup;\n    isProdMode: boolean = environment.production;\n    @ViewChild('submitBtn', {static: true}) submitBtn: ElementRef;\n\n    constructor(\n        private fb: FormBuilder,\n        private serviceRecover: RecoverService,\n        private router: Router,\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.form = this.fb.group({\n            email: ['', [Validators.required, Validators.email]]\n        });\n    }\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach(x => x.unsubscribe());\n    }\n\n    ngAfterViewInit() {\n    }\n\n    onSubmit({target}): void {\n        if (this.form.invalid) {\n            for (let key in this.form.controls) {\n                const formControl = this.form.get(key);\n\n                if (formControl.status === 'INVALID') {\n                    console.log('INVALID:', key);\n                }\n            }\n            return;\n        }\n\n        const btnSubmit = this.submitBtn.nativeElement;\n        btnSubmit.disabled = true;\n        const s = this.serviceRecover.sendHash(this.form.value).subscribe(\n            x => {\n                alert(this.msg);\n                this.router.navigate(['/main']).then();\n            },\n            err => btnSubmit.disabled = false,\n            () => btnSubmit.disabled = false\n        );\n        this.subscriptions.push(s);\n    }\n}\n","<div class=\"page-recover-sender\">\n    <div class=\"page-recover-sender_box\">\n        <h1>Восстановление пароля</h1>\n        <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit($event)\" class=\"form\">\n            <div class=\"form_row\">\n                <div class=\"form_title\">Е-мэйл:</div>\n                <input formControlName=\"email\" class=\"form_100\" type=\"email\"/>\n            </div>\n            <div class=\"form_row sx-submit align-right\">\n                <input #submitBtn type=\"submit\" [disabled]=\"form.invalid\" value=\"Отправить\"/>\n            </div>\n            <div *ngIf=\"!isProdMode\" class=\"form_row\">\n                {{ form.value | json }}\n            </div>\n        </form>\n    </div>\n</div>\n","import {Component} from '@angular/core';\n\n@Component({\n    selector: 'app-page-register-ok',\n    templateUrl: './ok.component.html',\n    styleUrls: ['./ok.component.less'],\n})\nexport class PageRegisterOkComponent {\n}\n","<div class=\"page-register-ok\">\n    <h1>Регистрация прошла успешно</h1>\n    <p>На ваш е-мэйл было вылано письмо, для его подтверждения.<br/>Следуйте инструкциям, указанным в письме.</p>\n</div>\n","import {AfterViewInit, Component, ElementRef, OnDestroy, OnInit, ViewChild} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {AuthService} from '../../services/auth.service';\nimport {Router} from '@angular/router';\nimport {ProfileService} from '../../services/profile.service';\nimport {environment} from '../../../environments/environment';\n\n@Component({\n    selector: 'app-page-register',\n    templateUrl: './page-register.component.html',\n    styleUrls: ['./page-register.component.less'],\n})\nexport class PageRegisterComponent implements OnInit, OnDestroy, AfterViewInit {\n    private subscriptions: Subscription[] = [];\n    form: FormGroup;\n    isProdMode: boolean = environment.production;\n    @ViewChild('submit', {static: true}) submit: ElementRef;\n\n    constructor(\n        private fb: FormBuilder,\n        private serviceAuth: AuthService,\n        private serviceProfile: ProfileService,\n        private router: Router,\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.form = this.fb.group({\n            email: ['', [Validators.required, Validators.email]],\n            password: ['', [Validators.required, Validators.minLength(environment.minLenPassword)]],\n            passwordConfirm: ['', [Validators.required, Validators.minLength(environment.minLenPassword)]],\n            agreeOffer: [false, Validators.requiredTrue],\n            agreePolicy: [false, Validators.requiredTrue],\n        });\n    }\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach(x => x.unsubscribe());\n    }\n\n    ngAfterViewInit(): void {\n    }\n\n    onSubmit(): void {\n        if (this.form.invalid) {\n            for (let key in this.form.controls) {\n                const formControl = this.form.get(key);\n\n                if (formControl.status === 'INVALID') {\n                    console.log('INVALID:', key);\n                }\n            }\n            return;\n        }\n\n        this.submit.nativeElement.disabled = true;\n        const s = this.serviceProfile.create(this.form.value).subscribe(\n            x => this.router.navigate(['/register/ok']).then(),\n            err => this.submit.nativeElement.disabled = false,\n            () => this.submit.nativeElement.disabled = false\n        );\n        this.subscriptions.push(s);\n    }\n}\n","<div class=\"page-register\">\n    <div class=\"page-register_box\">\n        <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\" class=\"form\">\n            <div class=\"form_row align-center\">\n                <h1>Регистрация</h1>\n            </div>\n            <div class=\"form_row\">\n                <div class=\"form_title\">Е-мэйл:</div>\n                <div>\n                    <input formControlName=\"email\" class=\"form_100\" type=\"email\"/>\n                </div>\n            </div>\n            <div class=\"form_row\">\n                <div class=\"form_title\">Пароль:</div>\n                <div>\n                    <input formControlName=\"password\" class=\"form_100\" type=\"password\"/>\n                </div>\n            </div>\n            <div class=\"form_row\">\n                <div class=\"form_title\">Пароль (повтор):</div>\n                <div>\n                    <input formControlName=\"passwordConfirm\" class=\"form_100\" type=\"password\"/>\n                </div>\n            </div>\n            <div class=\"form_row\">\n                <label>\n                    <input type=\"checkbox\" formControlName=\"agreeOffer\"/> Я принимаю условия оферты\n                </label>\n            </div>\n            <div class=\"form_row\">\n                <label>\n                    <input type=\"checkbox\" formControlName=\"agreePolicy\"/> Я принимаю политику конфиденциальности\n                </label>\n            </div>\n            <div class=\"form_row sx-submit align-right\">\n                <input #submit type=\"submit\" [disabled]=\"form.invalid\" value=\"Отправить\"/>\n            </div>\n            <div *ngIf=\"!isProdMode\" class=\"form_row\">\n                {{ form.value | json }}\n            </div>\n        </form>\n    </div>\n</div>\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {ActivatedRoute, NavigationEnd, Router} from '@angular/router';\nimport {AdInterface} from '../../interfaces/response/ad';\nimport {AdService} from '../../services/ad.service';\nimport {Subscription} from 'rxjs';\nimport {SearchService} from '../../services/search.service';\n\n@Component({\n    selector: 'app-page-search',\n    templateUrl: './page-search.component.html',\n    styleUrls: ['./page-search.component.less'],\n})\nexport class PageSearchComponent implements OnInit, OnDestroy {\n    private subscriptions: Subscription[] = [];\n    q: string;\n    ads: AdInterface[] = [];\n    isLoading: boolean = false;\n\n    constructor(\n        private route: ActivatedRoute,\n        private router: Router,\n        private serviceAd: AdService,\n        private serviceSearch: SearchService,\n    ) {\n    }\n\n    ngOnInit(): void {\n        const s = this.router.events.subscribe(event => {\n            if (event instanceof NavigationEnd) {\n                this.send();\n            }\n        });\n        this.subscriptions.push(s);\n\n        this.send();\n    }\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach(x => x.unsubscribe());\n        this.serviceSearch.watchForReset.next(true);\n    }\n\n    send(): void {\n        this.q = this.getQueryFromUrl();\n\n        if (!this.q) {\n            this.ads.length = 0;\n            return;\n        }\n\n        this.isLoading = true;\n        this.ads.length = 0;\n        const s = this.serviceAd.getByQuery(this.q, 0).subscribe(\n            x => this.ads = x,\n            err => this.isLoading = false,\n            () => this.isLoading = false\n        );\n        this.subscriptions.push(s);\n    }\n\n    getQueryFromUrl(): string {\n        let q = this.route.snapshot.queryParams['q'] || '';\n        return q.trim();\n    }\n}\n","<div class=\"page-search\">\n    <div *ngIf=\"!q\" class=\"page-search_box\">\n        <div class=\"text-mute\">укажите в фразу для поиска</div>\n    </div>\n    <div *ngIf=\"isLoading || (q && !ads.length && !isLoading)\" class=\"page-search_box\">\n        <app-preloader *ngIf=\"isLoading\"></app-preloader>\n        <div *ngIf=\"q && !ads.length && !isLoading\" class=\"text-mute\">по данному запросу ни чего не найдено</div>\n    </div>\n    <ng-container *ngIf=\"ads.length\">\n        <app-ad *ngFor=\"let ad of ads\" [ad]=\"ad\"></app-ad>\n    </ng-container>\n</div>\n","import {Component} from '@angular/core';\n\n@Component({\n    selector: 'app-preloader',\n    templateUrl: './preloader.component.html',\n    styleUrls: ['./preloader.component.less'],\n})\nexport class PreloaderComponent {\n}\n","<div class=\"preloader\">\n    <span class=\"preloader_point\"></span>\n    <span class=\"preloader_point\"></span>\n    <span class=\"preloader_point\"></span>\n</div>\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {Subscription} from 'rxjs';\nimport {SearchService} from '../../services/search.service';\nimport {MyErrorService} from '../../services/my-error.service';\n\n@Component({\n    selector: 'app-search',\n    templateUrl: './search.component.html',\n    styleUrls: ['./search.component.less'],\n})\nexport class SearchComponent implements OnInit, OnDestroy {\n    private subscriptions: Subscription[] = [];\n    form: FormGroup;\n\n    constructor(\n        private fb: FormBuilder,\n        private router: Router,\n        private route: ActivatedRoute,\n        private serviceSearch: SearchService,\n        private serviceMyError: MyErrorService,\n    ) {\n    }\n\n    ngOnInit(): void {\n        const s1 = this.route.queryParams.subscribe(\n            x => {\n                const q = x['q'];\n\n                if (!q) {\n                    return;\n                }\n\n                this.form.setValue({q: q});\n            },\n            err => this.serviceMyError.errors$.next({msg: err}),\n            () => {\n            }\n        );\n        this.subscriptions.push(s1);\n\n        this.form = this.fb.group({\n            q: ''\n        });\n\n        const s2 = this.serviceSearch.watchForReset.subscribe(x => this.reset());\n        this.subscriptions.push(s2);\n    }\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach(x => x.unsubscribe());\n    }\n\n    onSubmit() {\n        this.router.navigate(['/search'], {\n            queryParams: this.form.value\n        }).then();\n    }\n\n    reset(): void {\n        this.form.reset();\n    }\n}\n","<div class=\"search\">\n    <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\" class=\"search_form\">\n        <input class=\"search_form_query\" formControlName=\"q\" type=\"text\"/>\n        <input class=\"search_form_submit\" type=\"submit\" value=\"Поиск\"/>\n    </form>\n</div>\n","import {AfterViewInit, Component, ElementRef, OnDestroy, OnInit, Renderer2, ViewChild} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {CatService} from '../../services/cat.service';\nimport {Subscription} from 'rxjs';\nimport {Helpers} from '../../helpers';\nimport {CatTreeInterface} from '../../interfaces/response/cat';\nimport {ManagerService} from '../../services/manager.service';\nimport {MyErrorService} from '../../services/my-error.service';\n\n@Component({\n    selector: 'app-top-menu-cats-tree',\n    templateUrl: './top-menu-cats-tree.component.html',\n    styleUrls: ['./top-menu-cats-tree.component.less'],\n})\nexport class TopMenuCatsTreeComponent implements OnInit, OnDestroy, AfterViewInit {\n    private subscriptions: Subscription[] = [];\n    private detachClick: () => void;\n    isActive: boolean = false;\n    catTree: CatTreeInterface;\n    @ViewChild('button', {static: true}) button: ElementRef;\n\n    constructor(\n        private renderer: Renderer2,\n        private router: Router,\n        private serviceCat: CatService,\n        private serviceManager: ManagerService,\n    ) {\n    }\n\n    ngOnInit(): void {\n        const s = this.serviceManager.settings$.subscribe(x => this.catTree = x.catsTree);\n        this.subscriptions.push(s);\n    }\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach(x => x.unsubscribe());\n    }\n\n    ngAfterViewInit() {\n    }\n\n    toggleMenu(): void {\n        !this.isActive ? this.openMenu() : this.hideMenu();\n    }\n\n    openMenu(): void {\n        this.isActive = true;\n        this.detachClick = this.renderer.listen('document', 'click', (e) => {\n            const inZone = e.target.closest('.top-menu-cats-tree_tree');\n\n            if (e.target != this.button.nativeElement && !inZone || e.target.classList.contains('tree-in-the-top_go')) {\n                this.hideMenu();\n            }\n        });\n    }\n\n    hideMenu(): void {\n        this.isActive = false;\n        this.detachClick();\n    }\n}\n","<nav class=\"top-menu-cats-tree\">\n    <div #button (click)=\"toggleMenu()\" class=\"top-menu-cats-tree_emblem\"></div>\n    <div [hidden]=\"!isActive\" class=\"top-menu-cats-tree_tree\">\n        <app-tree-in-the-top *ngIf=\"catTree\" [catTree]=\"catTree\" url=\"/cat\"></app-tree-in-the-top>\n    </div>\n</nav>\n","import {Component, Input} from '@angular/core';\nimport {CatTreeInterface} from '../../interfaces/response/cat';\n\n@Component({\n    selector: 'app-tree-in-the-top',\n    templateUrl: './tree-in-the-top.component.html',\n    styleUrls: ['./tree-in-the-top.component.less'],\n})\nexport class TreeInTheTopComponent {\n    @Input() catTree: CatTreeInterface;\n    @Input() url: string;\n\n    constructor() {\n    }\n\n    showChildes({target}): void {\n        this.closeAll(target);\n        target.classList.add('sx-active');\n    }\n\n    closeAll(target: HTMLBaseElement): void {\n        target.closest('ul')\n            .querySelectorAll('.sx-active')\n            .forEach(x => x.classList.remove('sx-active'));\n    }\n}\n","<ul class=\"tree-in-the-top_ul\">\n    <li *ngFor=\"let cat of catTree.childes\">\n        <a *ngIf=\"cat.childes && cat.childes.length\"\n           (click)=\"showChildes($event)\"\n           class=\"text-eclipse sx-has-childes\"\n           [title]=\"cat.name\">{{cat.name}}</a>\n\n        <a *ngIf=\"!cat.childes || !cat.childes.length\"\n           class=\"tree-in-the-top_go text-eclipse\"\n           href=\"javascript:void(0);\"\n           [routerLink]=\"url + '/' + cat.slug\"\n           [title]=\"cat.name\">{{cat.name}}</a>\n\n        <div class=\"tree-in-the-top_list\">\n            <app-tree-in-the-top *ngIf=\"cat.childes && cat.childes.length\"\n                                 [catTree]=\"cat\"\n                                 [url]=\"url + '/' + cat.slug\"></app-tree-in-the-top>\n        </div>\n    </li>\n</ul>\n","import {Directive, ElementRef, HostListener} from '@angular/core';\n\n@Directive({\n    selector: '[appToggleActive]'\n})\nexport class ToggleActiveDirective {\n    constructor(\n        private el: ElementRef\n    ) {\n    }\n\n    @HostListener('click') onClick() {\n        this.el.nativeElement.classList.toggle('sx-active');\n    }\n}\n","import {CatInterface, CatTreeInterface, CatWithDeepInterface} from './interfaces/response/cat';\nimport {BreadcrumbsInterface} from './interfaces/breadcrumbs';\nimport {UrlSegment} from '@angular/router';\nimport {FormGroup} from '@angular/forms';\n\nexport class Helpers {\n    static rand(min: number, max: number) {\n        min = Math.ceil(min);\n        max = Math.floor(max);\n        return Math.floor(Math.random() * (max - min + 1)) + min;\n    }\n\n    static getNumberOfWeek(): number {\n        const today: any = new Date();\n        const firstDayOfYear: any = new Date(today.getFullYear(), 0, 1);\n        const pastDaysOfYear = (today - firstDayOfYear) / 86400000;\n        return Math.ceil((pastDaysOfYear + firstDayOfYear.getDay() + 1) / 7);\n    }\n\n    static getUniqHash(idStrLen: number = 32, prefix: string = ''): string {\n        let idStr = (Math.floor((Math.random() * 25)) + 10).toString(36);\n\n        idStr += (new Date()).getTime().toString(36);\n\n        do {\n            idStr += (Math.floor((Math.random() * 35))).toString(36);\n        } while (idStr.length < idStrLen);\n\n        return prefix + idStr;\n    }\n\n    static getCurDate(): string {\n        const today = new Date();\n        const dd = String(today.getDate()).padStart(2, '0');\n        const mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n        const yyyy = today.getFullYear();\n        const res = yyyy + '-' + mm + '-' + dd;\n\n        return res;\n    }\n\n    static animateScrollTo(selectorEl): void {\n        const personalFeed = document.querySelector(selectorEl);\n        const offsetTop = personalFeed.getBoundingClientRect().top + window.scrollY;\n\n        window.scrollTo({\n            top: offsetTop,\n            left: 0,\n            behavior: 'smooth'\n        });\n    }\n\n    static dateToHTML(serverDate: string): string {\n        return new Date(serverDate).toISOString().split('T')[0];\n    }\n\n    static getNewFormData(obj: Object): FormData {\n        let form = new FormData();\n\n        // выставляем одномерно\n        Object.keys(obj).forEach(key => {\n            if (key === 'files') {\n                if (obj[key]) { // файлов может и не быть\n                    for (let i = 0; i < obj[key].length; i++) {\n                        form.append(key, obj[key][i]);\n                    }\n                }\n\n                return true;\n            }\n\n            form.append(key, obj[key]);\n        });\n\n        return form;\n    }\n\n    static getAncestors(listCatTree: CatTreeInterface[], findCatId: number): CatInterface[] {\n        let list: CatInterface[] = [];\n\n        for (let i = 0; i < listCatTree.length; i++) {\n            const cat = listCatTree[i];\n\n            if (cat.catId === findCatId) {\n                const a = Object.assign({}, cat);\n                delete a.childes;\n                list.unshift(cat);\n\n                return list;\n            }\n            if (cat.childes && cat.childes.length) {\n                let res = this.getAncestors(cat.childes, findCatId);\n\n                if (res.length) {\n                    const a = Object.assign({}, cat);\n                    delete a.childes;\n\n                    list.unshift(...res);\n                    list.unshift(a);\n\n                    return list;\n                }\n            }\n        }\n\n        return list;\n    }\n\n    static getDescendants(listCatTree: CatTreeInterface[], findCatId: number, receiver: CatInterface[], deep: number): boolean {\n        for (let i = 0; i < listCatTree.length; i++) {\n            const cat = listCatTree[i];\n\n            if (cat.catId === findCatId) {\n                const a = Object.assign({}, cat);\n                delete a.childes;\n\n                receiver.unshift(a);\n                return true;\n            }\n            if (cat.childes && cat.childes.length) {\n                let res = this.getDescendants(cat.childes, findCatId, receiver, deep + 1);\n\n                if (res) {\n                    const a = Object.assign({}, cat);\n                    delete a.childes;\n\n                    receiver.unshift(a);\n\n                    if (!deep) {\n                        // тут конец\n                    }\n\n                    return res;\n                }\n            }\n        }\n\n        return false;\n    }\n\n    static buildBCFromCats(cats: CatInterface[]): BreadcrumbsInterface[] {\n        let bcItems: BreadcrumbsInterface[] = [];\n        let urlSave = '/';\n\n        urlSave += 'cat';\n        bcItems.push({\n            name: 'Каталог',\n            url: urlSave,\n        });\n\n        Object.keys(cats).forEach(key => {\n            const cat = cats[key];\n\n            urlSave += '/' + cat.slug;\n            bcItems.push({\n                name: cat.name,\n                url: urlSave,\n            });\n        });\n\n        return bcItems;\n    }\n\n    static getAdIdFromUrl(): number {\n        let result = 0;\n        const regexp = /_(\\d+)$/;\n        const a = document.createElement('a');\n\n        a.href = window.location.href;\n\n        let res = a.pathname.match(regexp);\n\n        if (res && res.length > 1) {\n            const adId = parseInt(res[1], 10);\n\n            if (adId) {\n                result = adId;\n            }\n        }\n\n        return result;\n    }\n\n    static findCatIdFromSlugs(catsTree: CatTreeInterface[], slugs: UrlSegment[]): number {\n        let catId = 0;\n\n        if (!slugs.length) {\n            return catId;\n        }\n\n        for (let i = 0; i < catsTree.length; i++) {\n            const cat = catsTree[i];\n\n            // нашли то что искали\n            if (cat.slug === slugs[0].path) {\n                if (cat.slug === slugs[0].path && slugs.length === 1) {\n                    return cat.catId;\n                }\n                if (cat.slug === slugs[0].path && slugs.length > 1 && cat.childes && cat.childes.length) {\n                    return this.findCatIdFromSlugs(cat.childes, slugs.slice(1));\n                }\n            }\n        }\n\n        return catId;\n    }\n\n    static masonry(parent: HTMLBaseElement, selectorChildes: string, margin: number = 10): boolean {\n        const widthParent: number = parent.offsetWidth;\n        let list: HTMLBaseElement[] = Array.from(parent.querySelectorAll(selectorChildes));\n        let aPasted: HTMLBaseElement[] = [];\n        let aLook: HTMLBaseElement[] = [];\n        let saveX: number = 0;\n        let saveY: number = 0;\n\n        if (!list.length) {\n            return false;\n        }\n\n        let widthChild: number = list[0].offsetWidth + margin;\n\n        for (let i = 0, j = 0, modeCheckHeight = false; i < list.length; i++) {\n            const el: HTMLBaseElement = list[i];\n            el.style.position = 'absolute';\n\n            // если наткнулись уже на правый край\n            if ((widthChild * (j + 1)) > widthParent) {\n                j = 0;\n\n                if (!modeCheckHeight) {\n                    modeCheckHeight = true;\n                }\n            }\n\n            if (modeCheckHeight) {\n                let finedIndex: number = 0;\n                let tmpY = 0;\n                for (let k = 0; k < aLook.length; k++) {\n                    const el2: HTMLBaseElement = aLook[k];\n                    const top: number = parseInt(el2.style.top, 10) + el2.offsetHeight + margin;\n\n                    if (!k) {\n                        tmpY = top;\n                        continue;\n                    }\n                    if (top < tmpY) {\n                        tmpY = top;\n                        finedIndex = k;\n                    }\n                }\n\n                saveX = parseInt(aLook[finedIndex].style.left, 10);\n                saveY = tmpY;\n                aLook[finedIndex] = el;\n\n            } else {\n                saveX = widthChild * j;\n                aLook.push(el);\n            }\n\n            el.style.left = saveX + 'px';\n            el.style.top = saveY + 'px';\n\n            j++;\n            aPasted.push(el);\n        }\n\n        // выставим в конце высоту родительсткого блока\n        saveY = 0;\n        for (let i = 0; i < aPasted.length; i++) {\n            const el: HTMLBaseElement = aPasted[i];\n            const top: number = parseInt(el.style.top, 10) + el.offsetHeight;\n\n            if (saveY < top) {\n                saveY = top;\n            }\n        }\n        parent.style.height = saveY + 'px';\n\n        return true;\n    }\n\n    static getCatTreeAsOneLevel(catTree: CatTreeInterface): CatWithDeepInterface[] {\n        let cats: CatWithDeepInterface[] = [];\n\n        this.walkGetCatTreeAsOneLevel(catTree.childes, 0, cats);\n\n        return cats;\n    }\n\n    static walkGetCatTreeAsOneLevel(catTree: CatTreeInterface[], deep: number, receiver: CatWithDeepInterface[]): void {\n        catTree.forEach(x => {\n            receiver.push({\n                catId: x.catId,\n                name: x.name,\n                slug: x.slug,\n                parentId: x.parentId,\n                pos: x.pos,\n                isDisabled: x.isDisabled,\n                priceAlias: x.priceAlias,\n                priceSuffix: x.priceSuffix,\n                titleHelp: x.titleHelp,\n                titleComment: x.titleComment,\n                isAutogenerateTitle: x.isAutogenerateTitle,\n                deep: deep,\n            });\n\n            if (x.childes && x.childes.length) {\n                this.walkGetCatTreeAsOneLevel(x.childes, deep + 1, receiver);\n            }\n        });\n    }\n\n    static isLeaf(catsTree: CatTreeInterface[], catId: number): number {\n        let x: number = -1;\n\n        for (let i = 0; i < catsTree.length; i++) {\n            const el = catsTree[i];\n\n            if (el.catId === catId) {\n                if (el.childes && el.childes.length) {\n                    return 0;\n                }\n\n                return 1;\n            }\n            if (el.childes && el.childes.length) {\n                let tmp = this.isLeaf(el.childes, catId);\n\n                if (tmp > -1) {\n                    return tmp;\n                }\n            }\n        }\n\n        return x;\n    }\n\n    static addScript(url: string): void {\n        var script = document.createElement('script');\n        script.src = url;\n        script.async = false; // чтобы гарантировать порядок\n        document.head.appendChild(script);\n    }\n\n    static addPhoto(target: HTMLFormElement, form: FormGroup): void {\n        const cFiles = form.get('files');\n        const totalFiles = target.files.length;\n\n        if (totalFiles) {\n            // form.markAsDirty();\n            cFiles.setValue(target.files);\n\n        } else {\n            cFiles.setValue(''); // null\n        }\n    }\n\n    static isArrayMdnOfficial(objToCheck) {\n        return Object.prototype.toString.call(objToCheck) === '[object Array]';\n    }\n\n    static youTubeLink(str: string): string {\n        let result: string = '';\n        let hash: string = '';\n        const parser = document.createElement('a');\n\n        parser.href = str;\n\n        if (parser.search) {\n            let str: string[] = parser.search.substr(1).split('&');\n            hash = str[0];\n\n            if (hash.indexOf('=') !== -1) {\n                const lastIndex: number = hash.lastIndexOf('=');\n                hash = hash.substr(lastIndex + 1);\n            }\n\n        } else if (parser.pathname) {\n            let str: string[] = parser.pathname.split('/');\n            hash = str[1];\n        }\n\n        if (hash) {\n            result = 'https://www.youtube.com/embed/' + hash;\n        }\n\n        return result;\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {AuthService} from '../services/auth.service';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n    private minOffsetTimeLifeAccessToken: number = 10;\n\n    constructor(\n        private serviceAuth: AuthService,\n    ) {\n    }\n\n    intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n        let req = request.clone({\n            withCredentials: true\n        });\n\n        // если это комманда на изменение или спец. страницы, то подставляем авторизацию\n        if (this.serviceAuth.JWT) {\n            req = req.clone({\n                setHeaders: {Authorization: 'Bearer ' + this.serviceAuth.JWT}\n            });\n\n            const jwt = this.serviceAuth.parseJWT(this.serviceAuth.JWT);\n            const timeDiff = new Date(jwt.Exp * 1000).getTime() - new Date().getTime();\n            const diffSec = Math.ceil(timeDiff / 1000);\n\n            // если осталось 10 секунд до окончания access-token-а\n            if (diffSec < this.minOffsetTimeLifeAccessToken) {\n                this.serviceAuth.refreshTokens().subscribe(x => {\n                    this.serviceAuth.JWT = x.JWT;\n                    this.serviceAuth.profile$.next(x.user);\n                });\n            }\n        }\n\n        return next.handle(req);\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http';\nimport {Observable, throwError} from 'rxjs';\nimport {catchError} from 'rxjs/operators';\nimport {MyErrorService} from '../services/my-error.service';\nimport {AuthService} from '../services/auth.service';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n\n    constructor(\n        private serviceMyError: MyErrorService,\n        private serviceAuth: AuthService,\n    ) {\n    }\n\n    intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n        return next.handle(request).pipe(\n            catchError(err => {\n                console.log('ErrorInterceptor', err);\n\n                if (err.status === 401) {\n                    this.serviceAuth.JWT = '';\n                    this.serviceAuth.toggleModalAuth$.next(true);\n\n                } else {\n                    let msg = typeof err.error === 'string' ? err.error : err.message;\n\n                    this.serviceMyError.errors$.next({\n                        title: `${err.statusText} (${err.status})`,\n                        msg: msg,\n                    });\n                }\n\n                return throwError(err);\n            })\n        );\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RouterModule} from '@angular/router';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {AdComponent} from '../../components/ad/ad.component';\nimport {AdFormComponent} from '../../components/ad-form/ad-form.component';\nimport {MyCurrencyPipe} from '../../pipes/my-currency.pipe';\nimport {PreloaderComponent} from '../../components/preloader/preloader.component';\nimport {ToggleActiveDirective} from '../../directives/toggle-active.directive';\n\n@NgModule({\n    declarations: [\n        AdComponent,\n        AdFormComponent,\n        MyCurrencyPipe,\n        PreloaderComponent,\n        ToggleActiveDirective,\n    ],\n    imports: [\n        CommonModule,\n        ReactiveFormsModule,\n        RouterModule,\n    ],\n    exports: [\n        AdComponent,\n        AdFormComponent,\n        MyCurrencyPipe,\n        PreloaderComponent,\n        ToggleActiveDirective,\n    ],\n})\nexport class SharedModule {\n}\n","import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n    name: 'myCurrency'\n})\nexport class MyCurrencyPipe implements PipeTransform {\n    transform(value: number): string {\n        if (!value) {\n            return;\n        }\n\n        let s = value.toString();\n        s = s.replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1 ');\n\n        return s;\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {environment} from '../../environments/environment';\nimport {AdFullInterface} from '../interfaces/response/ad';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AdService {\n    private url: string = environment.apiUrl;\n\n    constructor(\n        private http: HttpClient,\n    ) {\n    }\n\n    getOne(adId: number): Observable<AdFullInterface> {\n        return this.http.get<AdFullInterface>(`${this.url}/ads/${adId}`);\n    }\n\n    create(data: any): Observable<AdFullInterface> {\n        return this.http.post<AdFullInterface>(`${this.url}/ads`, data);\n    }\n\n    update(adId: number, data: any): Observable<AdFullInterface> {\n        return this.http.put<AdFullInterface>(`${this.url}/ads/${adId}`, data);\n    }\n\n    delete(adId: number): Observable<void> {\n        return this.http.delete<void>(`${this.url}/ads/${adId}`);\n    }\n\n    getFromCat(data: Object): Observable<AdFullInterface[]> {\n        return this.http.get<AdFullInterface[]>(`${this.url}/ads`, {\n            params: {\n                catId: data['catId'].toString(),\n                limit: data['limit'].toString(),\n                offset: data['offset'].toString(),\n            }\n        });\n    }\n\n    getByQuery(query: string, catId: number): Observable<AdFullInterface[]> {\n        return this.http.get<AdFullInterface[]>(`${this.url}/search/ads`, {\n            params: {\n                q: query,\n                catId: catId.toString(),\n            }\n        });\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, CanActivate, CanLoad, Route, RouterStateSnapshot, UrlSegment, UrlTree} from '@angular/router';\nimport {AuthService} from './auth.service';\nimport {Observable} from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthGuardService implements CanLoad, CanActivate {\n    private isLoggedIn: boolean = false;\n\n    constructor(\n        private serviceAuth: AuthService,\n    ) {\n        this.serviceAuth.profile$.subscribe(x => {\n            this.isLoggedIn = x ? true : false;\n        });\n    }\n\n    canLoad(route: Route, segments: UrlSegment[]): Observable<boolean> | Promise<boolean> | boolean {\n        if (this.isLoggedIn) {\n            return true;\n        }\n        return false;\n    }\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n        if (this.isLoggedIn) {\n            return true;\n        }\n        return false;\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {BehaviorSubject, Observable, Subject} from 'rxjs';\nimport {environment} from '../../environments/environment';\nimport {JwtInterface} from '../interfaces/response/jwt';\nimport {UserInterface} from '../interfaces/response/user';\nimport {JwtPayloadInterface} from '../interfaces/jwt-payload';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthService {\n    private url: string = environment.apiUrl;\n    profile$: BehaviorSubject<UserInterface> = new BehaviorSubject<UserInterface>(null);\n    toggleModalAuth$: Subject<boolean> = new Subject<boolean>();\n\n    set JWT(data: string) {\n        if (data === '') {\n            localStorage.removeItem('JWT');\n            return;\n        }\n\n        localStorage.setItem('JWT', data);\n    }\n\n    get JWT(): string {\n        return localStorage.getItem('JWT');\n    }\n\n    constructor(\n        private http: HttpClient,\n    ) {\n    }\n\n    login(data: any): Observable<JwtInterface> {\n        return this.http.post<JwtInterface>(`${this.url}/auth/login`, data);\n    }\n\n    logout(): Observable<void> {\n        return this.http.get<void>(`${this.url}/auth/logout`);\n    }\n\n    refreshTokens(): Observable<JwtInterface> {\n        return this.http.post<JwtInterface>(`${this.url}/auth/refresh-tokens`, null);\n    }\n\n    parseJWT(str: string): JwtPayloadInterface {\n        const part: string = str.substring(0, str.indexOf('.'));\n        return JSON.parse(atob(part));\n    }\n\n    check(): void {\n        const s = this.refreshTokens().subscribe(\n            x => {\n                this.JWT = x.JWT;\n                this.profile$.next(x.user);\n            },\n            err => s.unsubscribe(),\n            () => s.unsubscribe()\n        );\n    }\n\n    isAdmin(): boolean {\n        let result: boolean = false;\n\n        if (!this.JWT) {\n            return result;\n        }\n\n        const jwt = this.parseJWT(this.JWT);\n        result = jwt.UserRole === 'admin';\n\n        return result;\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {BreadcrumbsInterface} from '../interfaces/breadcrumbs';\nimport {BehaviorSubject} from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class BreadcrumbsService {\n    sender$: BehaviorSubject<BreadcrumbsInterface[]>;\n\n    constructor() {\n        this.sender$ = new BehaviorSubject([]); // все же нужен behavior\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {environment} from '../../environments/environment';\nimport {HttpClient} from '@angular/common/http';\nimport {CatFullInterface, CatInterface, CatTreeInterface} from '../interfaces/response/cat';\nimport {Observable} from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CatService {\n    private url: string = environment.apiUrl;\n\n    constructor(\n        private http: HttpClient\n    ) {\n    }\n\n    getList(): Observable<CatInterface> {\n        return this.http.get<CatInterface>(`${this.url}/cats`, {\n            params: {\n                asTree: 'false',\n            }\n        });\n    }\n\n    getTree(): Observable<CatTreeInterface> {\n        return this.http.get<CatTreeInterface>(`${this.url}/cats`, {\n            params: {\n                asTree: 'true'\n            }\n        });\n    }\n\n    getCatId(catId: number, isWithPropsOnlyFiltered: boolean): Observable<CatFullInterface> {\n        return this.http.get<CatFullInterface>(`${this.url}/cats/${catId}`, {\n            params: {\n                withPropsOnlyFiltered: isWithPropsOnlyFiltered ? 'true' : 'false',\n            }\n        });\n    }\n\n    post(data: any): Observable<CatFullInterface> {\n        return this.http.post<CatFullInterface>(`${this.url}/cats`, data);\n    }\n\n    put(catId: number, data: any): Observable<CatFullInterface> {\n        return this.http.put<CatFullInterface>(`${this.url}/cats/${catId}`, data);\n    }\n\n    delete(catId: number): Observable<void> {\n        return this.http.delete<void>(`${this.url}/cats/${catId}`);\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {environment} from '../../environments/environment';\nimport {SettingsInterface} from '../interfaces/response/settings';\nimport {AsyncSubject, Observable} from 'rxjs';\nimport {HttpClient} from '@angular/common/http';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ManagerService {\n    settings$: AsyncSubject<SettingsInterface> = new AsyncSubject<SettingsInterface>();\n    tagKindNumber: string[] = ['checkbox', 'radio', 'select', 'input_number'];\n\n    constructor(\n        private http: HttpClient,\n    ) {\n    }\n\n    private load(): Observable<SettingsInterface> {\n        return this.http.get<SettingsInterface>(environment.apiUrl);\n    }\n\n    getFirstSettings(): void {\n        const s = this.load().subscribe(\n            x => {\n                this.settings$.next(x); // дерево пошлем по дороге\n                this.settings$.complete();\n            },\n            err => s.unsubscribe(),\n            () => s.unsubscribe());\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {Subject} from 'rxjs';\nimport {MyErrorInterface} from '../interfaces/my-error';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class MyErrorService {\n    errors$: Subject<MyErrorInterface>;\n\n    constructor() {\n        this.errors$ = new Subject<MyErrorInterface>();\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {environment} from '../../environments/environment';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {PagesAdInterface, PagesMainInterface} from '../interfaces/response/pages';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class PagesService {\n    private url: string = environment.apiUrl;\n\n    constructor(\n        private http: HttpClient\n    ) {\n    }\n\n    pageAd(adId: number): Observable<PagesAdInterface> {\n        return this.http.get<PagesAdInterface>(`${this.url}/pages/ad/${adId}`);\n    }\n\n    pageMain(limit: number): Observable<PagesMainInterface> {\n        return this.http.get<PagesMainInterface>(`${this.url}/pages/main`, {\n            params: {\n                limit: limit.toString(),\n            }\n        });\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {environment} from '../../environments/environment';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {UserInterface} from '../interfaces/response/user';\nimport {AdFullInterface} from '../interfaces/response/ad';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ProfileService {\n    private url: string = environment.apiUrl;\n\n    constructor(\n        private http: HttpClient\n    ) {\n    }\n\n    getInfo(): Observable<UserInterface> {\n        return this.http.get<UserInterface>(`${this.url}/profile/info`);\n    }\n\n    getSettings(): Observable<string> {\n        return this.http.get<string>(`${this.url}/profile/settings`);\n    }\n\n    create(data: any): Observable<UserInterface> {\n        return this.http.post<UserInterface>(`${this.url}/profile`, data);\n    }\n\n    update(data: any): Observable<UserInterface> {\n        return this.http.put<UserInterface>(`${this.url}/profile`, data);\n    }\n\n    delete(): Observable<void> {\n        return this.http.delete<void>(`${this.url}/profile`);\n    }\n\n    getAds(limit: number, offset: number): Observable<AdFullInterface[]> {\n        return this.http.get<AdFullInterface[]>(`${this.url}/profile/ads`, {\n            params: {\n                limit: limit.toString(),\n                offset: offset.toString(),\n            }\n        });\n    }\n\n    getAd(adId: number): Observable<AdFullInterface> {\n        return this.http.get<AdFullInterface>(`${this.url}/profile/ads/${adId}`);\n    }\n\n    checkEmailThroughHash(hash: string): Observable<void> {\n        return this.http.get<void>(`${this.url}/profile/check-email-through/${hash}`);\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {environment} from '../../environments/environment';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {PropFullInterface} from '../interfaces/response/prop';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class PropService {\n    private url: string = environment.apiUrl;\n\n    constructor(\n        private http: HttpClient,\n    ) {\n    }\n\n    getPropsFullForCat(catId: number): Observable<PropFullInterface[]> {\n        return this.http.get<PropFullInterface[]>(`${this.url}/props`, {\n            params: {\n                catId: catId.toString(),\n            }\n        });\n    }\n\n    getOne(propId: number): Observable<PropFullInterface> {\n        return this.http.get<PropFullInterface>(`${this.url}/props/${propId}`);\n    }\n\n    create(data: any): Observable<PropFullInterface> {\n        return this.http.post<PropFullInterface>(`${this.url}/props`, data);\n    }\n\n    update(propId: number, data: any): Observable<PropFullInterface> {\n        return this.http.put<PropFullInterface>(`${this.url}/props/${propId}`, data);\n    }\n\n    delete(propId: number): Observable<void> {\n        return this.http.delete<void>(`${this.url}/props/${propId}`);\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {environment} from '../../environments/environment';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class RecoverService {\n    private url: string = environment.apiUrl;\n\n    constructor(\n        private http: HttpClient\n    ) {\n    }\n\n    sendHash(data: any): Observable<void> {\n        return this.http.post<void>(`${this.url}/recover/send-hash`, data);\n    }\n\n    changePassword(data: any): Observable<void> {\n        return this.http.post<void>(`${this.url}/recover/change-pass`, data);\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\nimport {environment} from '../../environments/environment';\nimport {HttpClient} from '@angular/common/http';\nimport {AdFullInterface} from '../interfaces/response/ad';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SearchService {\n    private url: string = environment.apiUrl;\n    watchForReset: Subject<boolean>;\n\n    constructor(\n        private http: HttpClient\n    ) {\n        this.watchForReset = new Subject();\n    }\n\n    ads(query: string, catId: string, limit: number, offset: number): Observable<AdFullInterface[]> {\n        return this.http.get<AdFullInterface[]>(`${this.url}/search/ads`, {\n            params: {\n                q: query,\n                catId: catId,\n                limit: limit.toString(),\n                offset: offset.toString(),\n            },\n        });\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n    production: false,\n    apiUrl: 'http://localhost:8080/api/v1',\n    emailSupport: 'support@altair.uz',\n    curYear: 2020,\n    minLenPassword: 6,\n    minLenHash: 32,\n    domain: 'http://localhost:4200',\n    ymapsPathScript: 'https://api-maps.yandex.ru/2.1/?apikey=777a18a8-eb0d-4f9b-ae88-99aed55c227b&lang=ru_RU',\n    youTubeExampleLink: 'https://www.youtube.com/watch?v=zU-LndSG5RE',\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {DEFAULT_CURRENCY_CODE, enableProdMode} from '@angular/core';\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\n\nimport {AppModule} from './app/app.module';\nimport {environment} from './environments/environment';\n\nif (environment.production) {\n    enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule, {\n    providers: [{provide: DEFAULT_CURRENCY_CODE, useValue: 'UZS'}]\n}).catch(err => console.error(err));\n"]}