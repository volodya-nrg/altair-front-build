{"version":3,"sources":["./src/app/interfaces/response/prop.ts","./src/app/modules/adm/adm-routing.module.ts","./src/app/modules/adm/adm.module.ts","./src/app/modules/adm/components/dynamic-prop/dynamic-prop.component.ts","./src/app/modules/adm/components/dynamic-prop/dynamic-prop.component.html","./src/app/modules/adm/components/dynamic-props/dynamic-props.component.ts","./src/app/modules/adm/components/dynamic-props/dynamic-props.component.html","./src/app/modules/adm/components/dynamic-value/dynamic-value.component.ts","./src/app/modules/adm/components/dynamic-value/dynamic-value.component.html","./src/app/modules/adm/components/dynamic-values/dynamic-values.component.ts","./src/app/modules/adm/components/dynamic-values/dynamic-values.component.html","./src/app/modules/adm/components/forms-ads/forms-ads-delete-ads-adid/forms-ads-delete-ads-adid.component.ts","./src/app/modules/adm/components/forms-ads/forms-ads-delete-ads-adid/forms-ads-delete-ads-adid.component.html","./src/app/modules/adm/components/forms-ads/forms-ads-get-ads-adid/forms-ads-get-ads-adid.component.ts","./src/app/modules/adm/components/forms-ads/forms-ads-get-ads-adid/forms-ads-get-ads-adid.component.html","./src/app/modules/adm/components/forms-ads/forms-ads-get-ads/forms-ads-get-ads.component.ts","./src/app/modules/adm/components/forms-ads/forms-ads-get-ads/forms-ads-get-ads.component.html","./src/app/modules/adm/components/forms-ads/forms-ads-post-ads/forms-ads-post-ads.component.ts","./src/app/modules/adm/components/forms-ads/forms-ads-post-ads/forms-ads-post-ads.component.html","./src/app/modules/adm/components/forms-ads/forms-ads-put-ads-adid/forms-ads-put-ads-adid.component.ts","./src/app/modules/adm/components/forms-ads/forms-ads-put-ads-adid/forms-ads-put-ads-adid.component.html","./src/app/modules/adm/components/forms-cats/forms-cats-delete-cats-catid/forms-cats-delete-cats-catid.component.ts","./src/app/modules/adm/components/forms-cats/forms-cats-delete-cats-catid/forms-cats-delete-cats-catid.component.html","./src/app/modules/adm/components/forms-cats/forms-cats-get-cats-catid/forms-cats-get-cats-catid.component.ts","./src/app/modules/adm/components/forms-cats/forms-cats-get-cats-catid/forms-cats-get-cats-catid.component.html","./src/app/modules/adm/components/forms-cats/forms-cats-get-cats/forms-cats-get-cats.component.ts","./src/app/modules/adm/components/forms-cats/forms-cats-get-cats/forms-cats-get-cats.component.html","./src/app/modules/adm/components/forms-cats/forms-cats-post-cats/forms-cats-post-cats.component.ts","./src/app/modules/adm/components/forms-cats/forms-cats-post-cats/forms-cats-post-cats.component.html","./src/app/modules/adm/components/forms-cats/forms-cats-put-cats-catid/forms-cats-put-cats-catid.component.ts","./src/app/modules/adm/components/forms-cats/forms-cats-put-cats-catid/forms-cats-put-cats-catid.component.html","./src/app/modules/adm/components/forms-kind-props/forms-kind-props-delete/forms-kind-props-delete.component.ts","./src/app/modules/adm/components/forms-kind-props/forms-kind-props-delete/forms-kind-props-delete.component.html","./src/app/modules/adm/components/forms-kind-props/forms-kind-props-get-all/forms-kind-props-get-all.component.ts","./src/app/modules/adm/components/forms-kind-props/forms-kind-props-get-all/forms-kind-props-get-all.component.html","./src/app/modules/adm/components/forms-kind-props/forms-kind-props-get-one/forms-kind-props-get-one.component.ts","./src/app/modules/adm/components/forms-kind-props/forms-kind-props-get-one/forms-kind-props-get-one.component.html","./src/app/modules/adm/components/forms-kind-props/forms-kind-props-post/forms-kind-props-post.component.ts","./src/app/modules/adm/components/forms-kind-props/forms-kind-props-post/forms-kind-props-post.component.html","./src/app/modules/adm/components/forms-kind-props/forms-kind-props-put/forms-kind-props-put.component.ts","./src/app/modules/adm/components/forms-kind-props/forms-kind-props-put/forms-kind-props-put.component.html","./src/app/modules/adm/components/forms-pages/forms-pages-ad-adid/forms-pages-ad-adid.component.ts","./src/app/modules/adm/components/forms-pages/forms-pages-ad-adid/forms-pages-ad-adid.component.html","./src/app/modules/adm/components/forms-pages/forms-pages-main/forms-pages-main.component.ts","./src/app/modules/adm/components/forms-pages/forms-pages-main/forms-pages-main.component.html","./src/app/modules/adm/components/forms-props/forms-props-delete-props-propid/forms-props-delete-props-propid.component.ts","./src/app/modules/adm/components/forms-props/forms-props-delete-props-propid/forms-props-delete-props-propid.component.html","./src/app/modules/adm/components/forms-props/forms-props-get-props-propid/forms-props-get-props-propid.component.ts","./src/app/modules/adm/components/forms-props/forms-props-get-props-propid/forms-props-get-props-propid.component.html","./src/app/modules/adm/components/forms-props/forms-props-get-props/forms-props-get-props.component.ts","./src/app/modules/adm/components/forms-props/forms-props-get-props/forms-props-get-props.component.html","./src/app/modules/adm/components/forms-props/forms-props-post-props/forms-props-post-props.component.ts","./src/app/modules/adm/components/forms-props/forms-props-post-props/forms-props-post-props.component.html","./src/app/modules/adm/components/forms-props/forms-props-post-put-prop/forms-props-post-put-prop.component.ts","./src/app/modules/adm/components/forms-props/forms-props-post-put-prop/forms-props-post-put-prop.component.html","./src/app/modules/adm/components/forms-props/forms-props-put-props-propid/forms-props-put-props-propid.component.ts","./src/app/modules/adm/components/forms-props/forms-props-put-props-propid/forms-props-put-props-propid.component.html","./src/app/modules/adm/components/forms-search/forms-search-ads/forms-search-ads.component.ts","./src/app/modules/adm/components/forms-search/forms-search-ads/forms-search-ads.component.html","./src/app/modules/adm/components/forms-test/forms-test.component.ts","./src/app/modules/adm/components/forms-test/forms-test.component.html","./src/app/modules/adm/components/forms-users/forms-users-delete-users-userid/forms-users-delete-users-userid.component.ts","./src/app/modules/adm/components/forms-users/forms-users-delete-users-userid/forms-users-delete-users-userid.component.html","./src/app/modules/adm/components/forms-users/forms-users-get-users-userid/forms-users-get-users-userid.component.ts","./src/app/modules/adm/components/forms-users/forms-users-get-users-userid/forms-users-get-users-userid.component.html","./src/app/modules/adm/components/forms-users/forms-users-get-users/forms-users-get-users.component.ts","./src/app/modules/adm/components/forms-users/forms-users-get-users/forms-users-get-users.component.html","./src/app/modules/adm/components/forms-users/forms-users-post-users/forms-users-post-users.component.ts","./src/app/modules/adm/components/forms-users/forms-users-post-users/forms-users-post-users.component.html","./src/app/modules/adm/components/forms-users/forms-users-put-users-userid/forms-users-put-users-userid.component.ts","./src/app/modules/adm/components/forms-users/forms-users-put-users-userid/forms-users-put-users-userid.component.html","./src/app/modules/adm/components/page-adm/page-adm.component.ts","./src/app/modules/adm/components/page-adm/page-adm.component.html","./src/app/modules/adm/pipes/pretty-json.pipe.ts","./src/app/services/kind-props.service.ts","./src/app/services/test.service.ts","./src/app/services/user.service.ts"],"names":[],"mappings":"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","file":"modules-adm-adm-module-es2015.js","sourcesContent":["import {ValuePropInterface} from './value-prop';\n\nexport interface PropInterface {\n    propId: number;\n    title: string;\n    kindPropId: number;\n    name: string;\n    suffix: string;\n    comment: string;\n    privateComment: string;\n}\n\nexport interface PropFullInterface extends PropInterface, PropDopInterface {\n}\n\ninterface PropDopInterface {\n    kindPropName: string;\n    propPos: number;\n    propIsRequire: boolean;\n    propIsCanAsFilter: boolean;\n    propComment: string;\n    values: ValuePropInterface[];\n}\n\nexport interface PropAssignedForCatInterface {\n    propId: number;\n    title: string;\n    comment: string;\n    pos: number;\n    isRequire: boolean;\n    isCanAsFilter: boolean;\n}\n\nexport class PropsAssignedForCat implements PropAssignedForCatInterface {\n    propId: number = 0;\n    title: string = '';\n    comment: string = '';\n    pos: number = 1;\n    isRequire: boolean = false;\n    isCanAsFilter: boolean = false;\n\n    constructor(x: PropFullInterface) {\n        this.propId = x.propId;\n        this.title = x.title + (x.privateComment ? ` (${x.privateComment})` : '');\n        this.comment = x.propComment;\n        this.pos = x.propPos;\n        this.isRequire = x.propIsRequire;\n        this.isCanAsFilter = x.propIsCanAsFilter;\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {PageAdmComponent} from './components/page-adm/page-adm.component';\n\nconst routes: Routes = [\n    {path: '', component: PageAdmComponent},\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class AdmRoutingModule {\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {AdmRoutingModule} from './adm-routing.module';\nimport {DynamicPropComponent} from './components/dynamic-prop/dynamic-prop.component';\nimport {DynamicPropsComponent} from './components/dynamic-props/dynamic-props.component';\nimport {DynamicValueComponent} from './components/dynamic-value/dynamic-value.component';\nimport {DynamicValuesComponent} from './components/dynamic-values/dynamic-values.component';\nimport {FormsAdsDeleteAdsAdidComponent} from './components/forms-ads/forms-ads-delete-ads-adid/forms-ads-delete-ads-adid.component';\nimport {FormsAdsGetAdsAdidComponent} from './components/forms-ads/forms-ads-get-ads-adid/forms-ads-get-ads-adid.component';\nimport {FormsAdsGetAdsComponent} from './components/forms-ads/forms-ads-get-ads/forms-ads-get-ads.component';\nimport {FormsAdsPostAdsComponent} from './components/forms-ads/forms-ads-post-ads/forms-ads-post-ads.component';\nimport {FormsAdsPutAdsAdidComponent} from './components/forms-ads/forms-ads-put-ads-adid/forms-ads-put-ads-adid.component';\nimport {FormsCatsDeleteCatsCatidComponent} from './components/forms-cats/forms-cats-delete-cats-catid/forms-cats-delete-cats-catid.component';\nimport {FormsCatsGetCatsCatidComponent} from './components/forms-cats/forms-cats-get-cats-catid/forms-cats-get-cats-catid.component';\nimport {FormsCatsGetCatsComponent} from './components/forms-cats/forms-cats-get-cats/forms-cats-get-cats.component';\nimport {FormsCatsPostCatsComponent} from './components/forms-cats/forms-cats-post-cats/forms-cats-post-cats.component';\nimport {FormsCatsPutCatsCatidComponent} from './components/forms-cats/forms-cats-put-cats-catid/forms-cats-put-cats-catid.component';\nimport {FormsKindPropsDeleteComponent} from './components/forms-kind-props/forms-kind-props-delete/forms-kind-props-delete.component';\nimport {FormsKindPropsGetAllComponent} from './components/forms-kind-props/forms-kind-props-get-all/forms-kind-props-get-all.component';\nimport {FormsKindPropsGetOneComponent} from './components/forms-kind-props/forms-kind-props-get-one/forms-kind-props-get-one.component';\nimport {FormsKindPropsPostComponent} from './components/forms-kind-props/forms-kind-props-post/forms-kind-props-post.component';\nimport {FormsKindPropsPutComponent} from './components/forms-kind-props/forms-kind-props-put/forms-kind-props-put.component';\nimport {FormsPagesAdAdidComponent} from './components/forms-pages/forms-pages-ad-adid/forms-pages-ad-adid.component';\nimport {FormsPagesMainComponent} from './components/forms-pages/forms-pages-main/forms-pages-main.component';\nimport {FormsPropsDeletePropsPropidComponent} from './components/forms-props/forms-props-delete-props-propid/forms-props-delete-props-propid.component';\nimport {FormsPropsGetPropsComponent} from './components/forms-props/forms-props-get-props/forms-props-get-props.component';\nimport {FormsPropsGetPropsPropidComponent} from './components/forms-props/forms-props-get-props-propid/forms-props-get-props-propid.component';\nimport {FormsPropsPostPropsComponent} from './components/forms-props/forms-props-post-props/forms-props-post-props.component';\nimport {FormsPropsPostPutPropComponent} from './components/forms-props/forms-props-post-put-prop/forms-props-post-put-prop.component';\nimport {FormsPropsPutPropsPropidComponent} from './components/forms-props/forms-props-put-props-propid/forms-props-put-props-propid.component';\nimport {FormsSearchAdsComponent} from './components/forms-search/forms-search-ads/forms-search-ads.component';\nimport {FormsTestComponent} from './components/forms-test/forms-test.component';\nimport {FormsUsersDeleteUsersUseridComponent} from './components/forms-users/forms-users-delete-users-userid/forms-users-delete-users-userid.component';\nimport {FormsUsersGetUsersComponent} from './components/forms-users/forms-users-get-users/forms-users-get-users.component';\nimport {FormsUsersGetUsersUseridComponent} from './components/forms-users/forms-users-get-users-userid/forms-users-get-users-userid.component';\nimport {FormsUsersPostUsersComponent} from './components/forms-users/forms-users-post-users/forms-users-post-users.component';\nimport {FormsUsersPutUsersUseridComponent} from './components/forms-users/forms-users-put-users-userid/forms-users-put-users-userid.component';\nimport {PageAdmComponent} from './components/page-adm/page-adm.component';\nimport {PrettyJsonPipe} from './pipes/pretty-json.pipe';\nimport {SharedModule} from '../shared/shared.module';\n\n@NgModule({\n    declarations: [\n        DynamicPropComponent,\n        DynamicPropsComponent,\n        DynamicValueComponent,\n        DynamicValuesComponent,\n        FormsAdsDeleteAdsAdidComponent,\n        FormsAdsGetAdsAdidComponent,\n        FormsAdsGetAdsComponent,\n        FormsAdsPostAdsComponent,\n        FormsAdsPutAdsAdidComponent,\n        FormsCatsDeleteCatsCatidComponent,\n        FormsCatsGetCatsCatidComponent,\n        FormsCatsGetCatsComponent,\n        FormsCatsPostCatsComponent,\n        FormsCatsPutCatsCatidComponent,\n        FormsKindPropsDeleteComponent,\n        FormsKindPropsGetAllComponent,\n        FormsKindPropsGetOneComponent,\n        FormsKindPropsPostComponent,\n        FormsKindPropsPutComponent,\n        FormsPagesAdAdidComponent,\n        FormsPagesMainComponent,\n        FormsPropsDeletePropsPropidComponent,\n        FormsPropsGetPropsComponent,\n        FormsPropsGetPropsPropidComponent,\n        FormsPropsPostPropsComponent,\n        FormsPropsPostPutPropComponent,\n        FormsPropsPutPropsPropidComponent,\n        FormsSearchAdsComponent,\n        FormsTestComponent,\n        FormsUsersDeleteUsersUseridComponent,\n        FormsUsersGetUsersComponent,\n        FormsUsersGetUsersUseridComponent,\n        FormsUsersPostUsersComponent,\n        FormsUsersPutUsersUseridComponent,\n        PageAdmComponent,\n        PrettyJsonPipe,\n    ],\n    imports: [\n        AdmRoutingModule,\n        CommonModule,\n        ReactiveFormsModule,\n        SharedModule,\n    ],\n    exports: [],\n})\nexport class AdmModule {\n}\n","import {Component, EventEmitter, Input, Output} from '@angular/core';\nimport {FormGroup} from '@angular/forms';\n\n@Component({\n    selector: 'app-dynamic-prop',\n    templateUrl: './dynamic-prop.component.html',\n    styleUrls: ['./dynamic-prop.component.less'],\n})\nexport class DynamicPropComponent {\n    @Input() index: number;\n    @Input() propAssigned: FormGroup;\n    @Output() removed: EventEmitter<number> = new EventEmitter<number>();\n}\n","<div class=\"dynamic-prop\" [formGroup]=\"propAssigned\">\n    <input type=\"hidden\" formControlName=\"propId\"/>\n\n    <div class=\"dynamic-prop_title\">\n        {{ propAssigned.get('title').value }}\n    </div>\n    <div class=\"dynamic-prop_content\">\n        <div>\n            <div class=\"dynamic-prop_inputs\">\n                <div>\n                    <input formControlName=\"comment\" type=\"text\" placeholder=\"комментарий (покажется под свойством)\"/>\n                </div>\n                <div>\n                    <input formControlName=\"pos\" type=\"number\" placeholder=\"позиция\"/>\n                </div>\n            </div>\n            <div class=\"dynamic-prop_dop\">\n                <div>\n                    <label>\n                        <input formControlName=\"isRequire\" type=\"checkbox\"/>\n                        обязателен\n                    </label>\n                </div>\n                <div>\n                    <label>\n                        <input formControlName=\"isCanAsFilter\" type=\"checkbox\"/>\n                        как фильтр (тоже)\n                    </label>\n                </div>\n            </div>\n        </div>\n        <div>\n            <button (click)=\"removed.emit(index)\" type=\"button\">-</button>\n        </div>\n    </div>\n</div>\n","import {AfterViewInit, Component, ElementRef, Input, OnDestroy, OnInit, ViewChild} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {FormArray, FormBuilder} from '@angular/forms';\nimport {PropFullInterface, PropInterface, PropsAssignedForCat} from '../../../../interfaces/response/prop';\nimport {ManagerService} from '../../../../services/manager.service';\n\n@Component({\n    selector: 'app-dynamic-props',\n    templateUrl: './dynamic-props.component.html',\n    styleUrls: ['./dynamic-props.component.less'],\n})\nexport class DynamicPropsComponent implements OnInit, OnDestroy, AfterViewInit {\n    private subscriptions: Subscription[] = [];\n    propsReserv: PropInterface[] = [];\n    @Input() propsAssignedFormArray: FormArray;\n    @ViewChild('select', {static: true}) select: ElementRef;\n\n    constructor(\n        private fb: FormBuilder,\n        private serviceManager: ManagerService,\n    ) {\n    }\n\n    ngOnInit(): void {\n        const s = this.serviceManager.settings$.subscribe(x => this.propsReserv = x.props);\n        this.subscriptions.push(s);\n    }\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach(x => x.unsubscribe());\n    }\n\n    ngAfterViewInit(): void {\n    }\n\n    addItem(): void {\n        let propId: number = parseInt(this.select.nativeElement.value, 10);\n\n        if (!propId) {\n            return;\n        }\n\n        this.propsReserv.forEach((x, i) => {\n            if (x.propId !== propId) {\n                return;\n            }\n\n            const tmp: PropFullInterface = {\n                propId: x.propId,\n                title: x.title,\n                comment: x.comment,\n                propPos: this.propsAssignedFormArray.length + 1,\n                privateComment: x.privateComment,\n                propIsRequire: false,\n                propIsCanAsFilter: false,\n                kindPropId: 0,\n                name: '',\n                suffix: '',\n                kindPropName: '',\n                propComment: '',\n                values: [],\n            };\n            this.propsAssignedFormArray.push(this.fb.group(new PropsAssignedForCat(tmp)));\n            return false; // только один раз\n        });\n\n        this.select.nativeElement.value = 0;\n    }\n\n    isSelected(id: number): boolean {\n        let result: boolean = false;\n\n        if (!this.propsAssignedFormArray.length) {\n            return result;\n        }\n\n        this.propsAssignedFormArray.controls.forEach(x => {\n            if (x.get('propId').value === id) {\n                result = true;\n                return false;\n            }\n        });\n\n        return result;\n    }\n}\n","<div class=\"dynamic-props\">\n    <div class=\"dynamic-props_header\">\n        <div>\n            <select #select>\n                <option value=\"0\"></option>\n                <option *ngFor=\"let x of propsReserv\" [value]=\"x.propId\" [disabled]=\"isSelected(x.propId)\">\n                    {{ x.title }}\n                    {{ x.privateComment ? ' (' + x.privateComment + ')' : '' }}\n                </option>\n            </select>\n        </div>\n        <div>\n            <button (click)=\"addItem()\" type=\"button\">+</button>\n        </div>\n    </div>\n    <div class=\"dynamic-props_body\">\n        <app-dynamic-prop *ngFor=\"let p of propsAssignedFormArray.controls; let i = index\"\n                          [index]=\"i\"\n                          [propAssigned]=\"p\"\n                          (removed)=\"propsAssignedFormArray.removeAt($event)\">\n        </app-dynamic-prop>\n    </div>\n</div>\n","import {Component, EventEmitter, Input, Output} from '@angular/core';\nimport {FormGroup} from '@angular/forms';\n\n@Component({\n    selector: 'app-dynamic-value',\n    templateUrl: './dynamic-value.component.html',\n    styleUrls: ['./dynamic-value.component.less'],\n})\nexport class DynamicValueComponent {\n    @Input() index: number;\n    @Input() value: FormGroup;\n    @Output() removed: EventEmitter<number> = new EventEmitter<number>();\n}\n","<div class=\"dynamic-value\" [formGroup]=\"value\">\n    <div>\n        <input type=\"hidden\" formControlName=\"valueId\"/>\n        <input type=\"hidden\" formControlName=\"propId\"/>\n        <input formControlName=\"title\" type=\"text\" placeholder=\"название\"/>\n    </div>\n    <div>\n        <input formControlName=\"pos\" type=\"number\" placeholder=\"позиция\"/>\n    </div>\n    <div>\n        <button (click)=\"removed.emit(index)\" type=\"button\">-</button>\n    </div>\n</div>\n","import {Component, Input} from '@angular/core';\nimport {FormArray, FormBuilder} from '@angular/forms';\nimport {ValuePropInterface} from '../../../../interfaces/response/value-prop';\n\n@Component({\n    selector: 'app-dynamic-values',\n    templateUrl: './dynamic-values.component.html',\n    styleUrls: ['./dynamic-values.component.less'],\n})\nexport class DynamicValuesComponent {\n    values: ValuePropInterface[] = [];\n    @Input() propId: number;\n    @Input() valuesFormArray: FormArray;\n\n    constructor(\n        private fb: FormBuilder,\n    ) {\n    }\n\n    addItem(): void {\n        this.valuesFormArray.push(this.fb.group({\n            valueId: 0,\n            title: '',\n            pos: this.valuesFormArray.length + 1,\n            propId: this.propId,\n        }));\n    }\n}\n","<div class=\"dynamic-values\">\n    <div class=\"dynamic-values_header\">\n        <div></div>\n        <div>\n            <button (click)=\"addItem()\" type=\"button\">+</button>\n        </div>\n    </div>\n    <div class=\"dynamic-values_body\">\n        <app-dynamic-value *ngFor=\"let value of valuesFormArray.controls; let i = index\"\n                           [index]=\"i\"\n                           [value]=\"value\"\n                           (removed)=\"valuesFormArray.removeAt($event)\">\n        </app-dynamic-value>\n    </div>\n</div>\n","import {Component, EventEmitter, OnDestroy, OnInit, Output} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {AdService} from '../../../../../services/ad.service';\n\n@Component({\n    selector: 'app-forms-ads-delete-ads-adid',\n    templateUrl: './forms-ads-delete-ads-adid.component.html',\n    styleUrls: ['./forms-ads-delete-ads-adid.component.less'],\n})\nexport class FormsAdsDeleteAdsAdidComponent implements OnInit, OnDestroy {\n    private subscriptions: Subscription[] = [];\n    form: FormGroup;\n    @Output() json: EventEmitter<any> = new EventEmitter();\n\n    constructor(\n        private fb: FormBuilder,\n        private serviceAds: AdService,\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.form = this.fb.group({\n            adId: [0, [Validators.required, Validators.min(1)]],\n        });\n    }\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach(x => x.unsubscribe());\n    }\n\n    submitForm({target}): void {\n        if (this.form.invalid) {\n            for (let key in this.form.controls) {\n                const formControl = this.form.get(key);\n\n                if (formControl.status === 'INVALID') {\n                    console.log('INVALID:', key);\n                }\n            }\n            return;\n        }\n\n        const s = this.serviceAds.delete(this.form.get('adId').value).subscribe(x => {\n            this.json.emit(x);\n            this.form.reset();\n        });\n        this.subscriptions.push(s);\n    }\n}\n","<div class=\"page-adm_box\">\n    <div class=\"page-adm_box_title\" appToggleActive>\n        DELETE: /api/v1/ads/:adId\n    </div>\n    <div class=\"page-adm_box_body\">\n        <form [formGroup]=\"form\" (ngSubmit)=\"submitForm($event)\" class=\"form\">\n            <div class=\"form_row\">\n                <div class=\"form_title\">id объявления</div>\n                <input type=\"number\" formControlName=\"adId\" class=\"form_100\"/>\n            </div>\n            <div class=\"form_row\">\n                <input type=\"submit\"/>\n            </div>\n            <div class=\"form_row\">\n                {{ form.value | json }}\n            </div>\n        </form>\n    </div>\n</div>\n","import {Component, EventEmitter, OnDestroy, OnInit, Output} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {AdService} from '../../../../../services/ad.service';\n\n@Component({\n    selector: 'app-forms-ads-get-ads-adid',\n    templateUrl: './forms-ads-get-ads-adid.component.html',\n    styleUrls: ['./forms-ads-get-ads-adid.component.less'],\n})\nexport class FormsAdsGetAdsAdidComponent implements OnInit, OnDestroy {\n    private subscriptions: Subscription[] = [];\n    form: FormGroup;\n    @Output() json: EventEmitter<any> = new EventEmitter();\n\n    constructor(\n        private fb: FormBuilder,\n        private serviceAds: AdService,\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.form = this.fb.group({\n            adId: [0, [Validators.required, Validators.min(1)]],\n        });\n    }\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach(x => x.unsubscribe());\n    }\n\n    submitForm({target}): void {\n        if (this.form.invalid) {\n            for (let key in this.form.controls) {\n                const formControl = this.form.get(key);\n\n                if (formControl.status === 'INVALID') {\n                    console.log('INVALID:', key);\n                }\n            }\n            return;\n        }\n\n        const s = this.serviceAds.getOne(this.form.get('adId').value).subscribe(x => this.json.emit(x));\n        this.subscriptions.push(s);\n    }\n}\n","<div class=\"page-adm_box\">\n    <div class=\"page-adm_box_title\" appToggleActive>\n        GET: /api/v1/ads/:adId\n    </div>\n    <div class=\"page-adm_box_body\">\n        <form [formGroup]=\"form\" (ngSubmit)=\"submitForm($event)\" class=\"form\">\n            <div class=\"form_row\">\n                <div class=\"form_title\">id объявления</div>\n                <input type=\"number\" formControlName=\"adId\" class=\"form_100\"/>\n            </div>\n            <div class=\"form_row\">\n                <input type=\"submit\"/>\n            </div>\n            <div class=\"form_row\">\n                {{ form.value | json }}\n            </div>\n        </form>\n    </div>\n</div>\n","import {Component, EventEmitter, OnDestroy, OnInit, Output} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {CatWithDeepInterface} from '../../../../../interfaces/response/cat';\nimport {AdService} from '../../../../../services/ad.service';\nimport {ManagerService} from '../../../../../services/manager.service';\nimport {Helpers} from '../../../../../helpers';\n\n@Component({\n    selector: 'app-forms-ads-get-ads',\n    templateUrl: './forms-ads-get-ads.component.html',\n    styleUrls: ['./forms-ads-get-ads.component.less'],\n})\nexport class FormsAdsGetAdsComponent implements OnInit, OnDestroy {\n    private subscriptions: Subscription[] = [];\n    form: FormGroup;\n    catTreeOneLevel: CatWithDeepInterface[] = [];\n    @Output() json: EventEmitter<any> = new EventEmitter();\n\n    constructor(\n        private fb: FormBuilder,\n        private serviceAds: AdService,\n        private serviceManager: ManagerService,\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.form = this.fb.group({\n            catId: ['0', Validators.required],\n            limit: [10, [Validators.required, Validators.min(1), Validators.max(100)]],\n            offset: [0, Validators.min(0)],\n        });\n\n        const s = this.serviceManager.settings$\n            .subscribe(x => this.catTreeOneLevel = Helpers.getCatTreeAsOneLevel(x.catsTree));\n        this.subscriptions.push(s);\n    }\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach(x => x.unsubscribe());\n    }\n\n    submitForm({target}): void {\n        if (this.form.invalid) {\n            for (let key in this.form.controls) {\n                const formControl = this.form.get(key);\n\n                if (formControl.status === 'INVALID') {\n                    console.log('INVALID:', key);\n                }\n            }\n            return;\n        }\n\n        const s = this.serviceAds.getFromCat(this.form.value).subscribe(x => this.json.emit(x));\n        this.subscriptions.push(s);\n    }\n}\n","<div class=\"page-adm_box\">\n    <div class=\"page-adm_box_title\" appToggleActive>\n        GET: /api/v1/ads\n    </div>\n    <div class=\"page-adm_box_body\">\n        <form [formGroup]=\"form\" (ngSubmit)=\"submitForm($event)\" class=\"form\">\n            <div class=\"form_row\">\n                <div class=\"form_title\">id категории</div>\n                <select formControlName=\"catId\" class=\"form_100\">\n                    <option value=\"0\"></option>\n                    <option *ngFor=\"let cat of catTreeOneLevel\" [value]=\"cat.catId\">\n                        {{ '|----'.repeat(cat.deep) }} {{ cat.name }}\n                    </option>\n                </select>\n            </div>\n            <div class=\"form_row\">\n                <div class=\"form_title\">лимит</div>\n                <input type=\"number\" formControlName=\"limit\" class=\"form_100\" min=\"1\" value=\"0\"/>\n            </div>\n            <div class=\"form_row\">\n                <div class=\"form_title\">offset</div>\n                <input type=\"number\" formControlName=\"offset\" class=\"form_100\" min=\"0\" value=\"0\"/>\n            </div>\n            <div class=\"form_row\">\n                <input type=\"submit\"/>\n            </div>\n            <div class=\"form_row\">\n                {{ form.value | json }}\n            </div>\n        </form>\n    </div>\n</div>\n","import {Component, EventEmitter, Output} from '@angular/core';\n\n@Component({\n    selector: 'app-forms-ads-post-ads',\n    templateUrl: './forms-ads-post-ads.component.html',\n    styleUrls: ['./forms-ads-post-ads.component.less'],\n})\nexport class FormsAdsPostAdsComponent {\n    @Output() json: EventEmitter<any> = new EventEmitter();\n\n    constructor() {\n    }\n}\n","<div class=\"page-adm_box\">\n    <div class=\"page-adm_box_title\" appToggleActive>\n        POST: /api/v1/ads\n    </div>\n    <div class=\"page-adm_box_body\">\n        <app-ad-form mode=\"private\" (json)=\"json.emit($event)\"></app-ad-form>\n    </div>\n</div>\n","import {AfterViewInit, Component, ElementRef, EventEmitter, OnDestroy, OnInit, Output, ViewChild} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {AdService} from '../../../../../services/ad.service';\nimport {AdFormComponent} from '../../../../../components/ad-form/ad-form.component';\n\n@Component({\n    selector: 'app-forms-ads-put-ads-adid',\n    templateUrl: './forms-ads-put-ads-adid.component.html',\n    styleUrls: ['./forms-ads-put-ads-adid.component.less'],\n})\nexport class FormsAdsPutAdsAdidComponent implements OnInit, OnDestroy, AfterViewInit {\n    private subscriptions: Subscription[] = [];\n    form: FormGroup;\n    @Output() json: EventEmitter<any> = new EventEmitter();\n    @ViewChild('formPostPutWrap', {static: true}) formPostPutWrap: ElementRef;\n    @ViewChild(AdFormComponent) adForm: AdFormComponent;\n\n    constructor(\n        private fb: FormBuilder,\n        private serviceAds: AdService,\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.form = this.fb.group({\n            adId: [0, [Validators.required, Validators.min(1)]],\n        });\n    }\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach(x => x.unsubscribe());\n    }\n\n    ngAfterViewInit(): void {\n    }\n\n    submitForm({target}): void {\n        if (this.form.invalid) {\n            for (let key in this.form.controls) {\n                const formControl = this.form.get(key);\n\n                if (formControl.status === 'INVALID') {\n                    console.log('INVALID:', key);\n                }\n            }\n            return;\n        }\n\n        const s = this.serviceAds.getOne(this.form.get('adId').value).subscribe(x => {\n            this.json.emit(x);\n            this.formPostPutWrap.nativeElement.classList.remove('hidden');\n            this.adForm.ad = x;\n        });\n        this.subscriptions.push(s);\n    }\n}\n","<div class=\"page-adm_box\">\n    <div class=\"page-adm_box_title\" appToggleActive>\n        PUT: /api/v1/ads/:adId\n    </div>\n    <div class=\"page-adm_box_body\">\n        <form [formGroup]=\"form\" (ngSubmit)=\"submitForm($event)\" class=\"form\">\n            <div class=\"form_row\">\n                <div class=\"form_title\">id объявления</div>\n                <input type=\"number\" formControlName=\"adId\" class=\"form_100\"/>\n            </div>\n            <div class=\"form_row\">\n                <input type=\"submit\"/>\n            </div>\n        </form>\n        <div #formPostPutWrap class=\"hidden\">\n            <app-ad-form mode=\"private\" (json)=\"json.emit($event)\"></app-ad-form>\n        </div>\n    </div>\n</div>\n","import {Component, EventEmitter, OnDestroy, OnInit, Output, ViewEncapsulation} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport {CatWithDeepInterface} from '../../../../../interfaces/response/cat';\nimport {ManagerService} from '../../../../../services/manager.service';\nimport {CatService} from '../../../../../services/cat.service';\nimport {Helpers} from '../../../../../helpers';\n\n@Component({\n    selector: 'app-forms-cats-delete-cats-catid',\n    templateUrl: './forms-cats-delete-cats-catid.component.html',\n    styleUrls: ['./forms-cats-delete-cats-catid.component.less'],\n})\nexport class FormsCatsDeleteCatsCatidComponent implements OnInit, OnDestroy {\n    private subscriptions: Subscription[] = [];\n    formDeleteCatsCatId: FormGroup;\n    catTreeOneLevel: CatWithDeepInterface[] = [];\n    @Output() json: EventEmitter<any> = new EventEmitter();\n\n    constructor(\n        private fb: FormBuilder,\n        private serviceCats: CatService,\n        private serviceManager: ManagerService,\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.formDeleteCatsCatId = this.fb.group({\n            catId: 0,\n        });\n        const s = this.serviceManager.settings$\n            .subscribe(x => this.catTreeOneLevel = Helpers.getCatTreeAsOneLevel(x.catsTree));\n        this.subscriptions.push(s);\n    }\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach(x => x.unsubscribe());\n    }\n\n    submitFormDeleteCatsCatId({target}): void {\n        if (this.formDeleteCatsCatId.invalid) {\n            for (let key in this.formDeleteCatsCatId.controls) {\n                const formControl = this.formDeleteCatsCatId.get(key);\n\n                if (formControl.status === 'INVALID') {\n                    console.log('INVALID:', key);\n                }\n            }\n            return;\n        }\n\n        const s = this.serviceCats.delete(this.formDeleteCatsCatId.get('catId').value).subscribe(x => {\n            this.json.emit(x);\n            target.reset();\n            this.formDeleteCatsCatId.reset();\n        });\n        this.subscriptions.push(s);\n    }\n}\n","<div class=\"page-adm_box\">\n    <div class=\"page-adm_box_title\" appToggleActive>\n        DELETE: /api/v1/cats/:catId\n    </div>\n    <div class=\"page-adm_box_body\">\n        <form [formGroup]=\"formDeleteCatsCatId\" (ngSubmit)=\"submitFormDeleteCatsCatId($event)\" class=\"form\">\n            <div class=\"form_row\">\n                <div class=\"form_title\">catId</div>\n                <select formControlName=\"catId\" class=\"form_100\">\n                    <option value=\"0\"></option>\n                    <option *ngFor=\"let cat of catTreeOneLevel\" [value]=\"cat.catId\">\n                        {{ '|----'.repeat(cat.deep) }} {{ cat.name }}\n                    </option>\n                </select>\n            </div>\n            <div class=\"form_row\">\n                <input type=\"submit\"/>\n            </div>\n            <div class=\"form_row\">\n                {{ formDeleteCatsCatId.value | json }}\n            </div>\n        </form>\n    </div>\n</div>\n","import {Component, EventEmitter, OnDestroy, OnInit, Output, ViewEncapsulation} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport {SettingsInterface} from '../../../../../interfaces/response/settings';\nimport {CatWithDeepInterface} from '../../../../../interfaces/response/cat';\nimport {CatService} from '../../../../../services/cat.service';\nimport {ManagerService} from '../../../../../services/manager.service';\nimport {Helpers} from '../../../../../helpers';\n\n@Component({\n    selector: 'app-forms-cats-get-cats-catid',\n    templateUrl: './forms-cats-get-cats-catid.component.html',\n    styleUrls: ['./forms-cats-get-cats-catid.component.less'],\n})\nexport class FormsCatsGetCatsCatidComponent implements OnInit, OnDestroy {\n    private subscriptions: Subscription[] = [];\n    formGetCatsCatId: FormGroup;\n    settings: SettingsInterface;\n    catTreeOneLevel: CatWithDeepInterface[] = [];\n    @Output() json: EventEmitter<any> = new EventEmitter();\n\n    constructor(\n        private fb: FormBuilder,\n        private serviceCats: CatService,\n        private serviceManager: ManagerService,\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.formGetCatsCatId = this.fb.group({\n            catId: 0,\n            withPropsOnlyFiltered: false,\n        });\n        const s = this.serviceManager.settings$\n            .subscribe(x => this.catTreeOneLevel = Helpers.getCatTreeAsOneLevel(x.catsTree));\n        this.subscriptions.push(s);\n    }\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach(x => x.unsubscribe());\n    }\n\n    submitFormGetCatsCatId({target}): void {\n        if (this.formGetCatsCatId.invalid) {\n            for (let key in this.formGetCatsCatId.controls) {\n                const formControl = this.formGetCatsCatId.get(key);\n\n                if (formControl.status === 'INVALID') {\n                    console.log('INVALID:', key);\n                }\n            }\n            return;\n        }\n\n        const catId: number = parseInt(this.formGetCatsCatId.get('catId').value, 10);\n        const isWithPropsOnlyFiltered: boolean = this.formGetCatsCatId.get('withPropsOnlyFiltered').value;\n        const s = this.serviceCats.getCatId(catId, isWithPropsOnlyFiltered).subscribe(x => this.json.emit(x));\n        this.subscriptions.push(s);\n    }\n}\n","<div class=\"page-adm_box\">\n    <div class=\"page-adm_box_title\" appToggleActive>\n        GET: /api/v1/cats/:catId\n    </div>\n    <div class=\"page-adm_box_body\">\n        <form [formGroup]=\"formGetCatsCatId\" (ngSubmit)=\"submitFormGetCatsCatId($event)\" class=\"form\">\n            <div class=\"form_row\">\n                <div class=\"form_title\">catId</div>\n                <select formControlName=\"catId\" class=\"form_100\">\n                    <option value=\"0\"></option>\n                    <option *ngFor=\"let cat of catTreeOneLevel\" [value]=\"cat.catId\">\n                        {{ '|----'.repeat(cat.deep) }} {{ cat.name }}\n                    </option>\n                </select>\n            </div>\n            <div class=\"form_row\">\n                <label>\n                    <input type=\"checkbox\" formControlName=\"withPropsOnlyFiltered\"/> св-ва как фильтры\n                </label>\n            </div>\n            <div class=\"form_row\">\n                <input type=\"submit\"/>\n            </div>\n            <div class=\"form_row\">\n                {{ formGetCatsCatId.value | json }}\n            </div>\n        </form>\n    </div>\n</div>\n","import {Component, EventEmitter, OnDestroy, OnInit, Output, ViewEncapsulation} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport {CatService} from '../../../../../services/cat.service';\n\n@Component({\n    selector: 'app-forms-cats-get-cats',\n    templateUrl: './forms-cats-get-cats.component.html',\n    styleUrls: ['./forms-cats-get-cats.component.less'],\n})\nexport class FormsCatsGetCatsComponent implements OnInit, OnDestroy {\n    private subscriptions: Subscription[] = [];\n    formGetCats: FormGroup;\n    @Output() json: EventEmitter<any> = new EventEmitter();\n\n    constructor(\n        private fb: FormBuilder,\n        private serviceCats: CatService,\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.formGetCats = this.fb.group({\n            asTree: false,\n        });\n    }\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach(x => x.unsubscribe());\n    }\n\n    submitFormGetCats({target}): void {\n        if (this.formGetCats.invalid) {\n            for (let key in this.formGetCats.controls) {\n                const formControl = this.formGetCats.get(key);\n\n                if (formControl.status === 'INVALID') {\n                    console.log('INVALID:', key);\n                }\n            }\n            return;\n        }\n\n        let fn: any = this.formGetCats.get('asTree').value ? this.serviceCats.getTree() : this.serviceCats.getList();\n        const s = fn.subscribe(x => this.json.emit(x));\n        this.subscriptions.push(s);\n    }\n}\n","<div class=\"page-adm_box\">\n    <div class=\"page-adm_box_title\" appToggleActive>\n        GET: /api/v1/cats\n    </div>\n    <div class=\"page-adm_box_body\">\n        <form [formGroup]=\"formGetCats\" (ngSubmit)=\"submitFormGetCats($event)\" class=\"form\">\n            <div class=\"form_row\">\n                <label>\n                    <input type=\"checkbox\" formControlName=\"asTree\"/> как дерево\n                </label>\n            </div>\n            <div class=\"form_row\">\n                <input type=\"submit\"/>\n            </div>\n            <div class=\"form_row\">\n                {{ formGetCats.value | json }}\n            </div>\n        </form>\n    </div>\n</div>\n","import {Component, EventEmitter, OnDestroy, OnInit, Output} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {FormArray, FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {SettingsInterface} from '../../../../../interfaces/response/settings';\nimport {CatWithDeepInterface} from '../../../../../interfaces/response/cat';\nimport {PropAssignedForCatInterface} from '../../../../../interfaces/response/prop';\nimport {CatService} from '../../../../../services/cat.service';\nimport {ManagerService} from '../../../../../services/manager.service';\nimport {Helpers} from '../../../../../helpers';\n\n@Component({\n    selector: 'app-forms-cats-post-cats',\n    templateUrl: './forms-cats-post-cats.component.html',\n    styleUrls: ['./forms-cats-post-cats.component.less'],\n})\nexport class FormsCatsPostCatsComponent implements OnInit, OnDestroy {\n    private subscriptions: Subscription[] = [];\n    form: FormGroup;\n    settings: SettingsInterface;\n    catTreeOneLevel: CatWithDeepInterface[] = [];\n    @Output() json: EventEmitter<any> = new EventEmitter();\n\n    constructor(\n        private fb: FormBuilder,\n        private serviceCats: CatService,\n        private serviceManager: ManagerService,\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.form = this.fb.group({\n            name: ['', [Validators.required, Validators.minLength(2)]],\n            parentId: [0, Validators.min(0)],\n            pos: [0, Validators.min(0)],\n            priceAlias: '',\n            priceSuffix: '',\n            titleHelp: '',\n            titleComment: '',\n            isAutogenerateTitle: false,\n            propsAssignedForCat: this.fb.array(<PropAssignedForCatInterface[]> []),\n        });\n\n        const s = this.serviceManager.settings$\n            .subscribe(x => this.catTreeOneLevel = Helpers.getCatTreeAsOneLevel(x.catsTree));\n        this.subscriptions.push(s);\n    }\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach(x => x.unsubscribe());\n    }\n\n    submitFormPostCats({target}): void {\n        if (this.form.invalid) {\n            for (let key in this.form.controls) {\n                const formControl = this.form.get(key);\n\n                if (formControl.status === 'INVALID') {\n                    console.log('INVALID:', key);\n                }\n            }\n            return;\n        }\n\n        const s = this.serviceCats.post(this.form.value).subscribe(x => {\n            this.json.emit(x);\n            target.reset();\n            this.form.reset();\n            (this.form.get('propsAssignedForCat') as FormArray).clear();\n        });\n        this.subscriptions.push(s);\n    }\n}\n","<div class=\"page-adm_box\">\n    <div class=\"page-adm_box_title\" appToggleActive>\n        POST: /api/v1/cats\n    </div>\n    <div class=\"page-adm_box_body\">\n        <form [formGroup]=\"form\" (ngSubmit)=\"submitFormPostCats($event)\" class=\"form\">\n            <div class=\"form_row\">\n                <div class=\"form_title\">название</div>\n                <input formControlName=\"name\" class=\"form_100\" type=\"text\"/>\n            </div>\n            <div class=\"form_row\">\n                <div class=\"form_title\">parentId</div>\n                <select formControlName=\"parentId\" class=\"form_100\">\n                    <option value=\"0\"></option>\n                    <option *ngFor=\"let cat of catTreeOneLevel\" [value]=\"cat.catId\">\n                        {{ '|----'.repeat(cat.deep) }} {{ cat.name }}\n                    </option>\n                </select>\n            </div>\n            <div class=\"form_row\">\n                <div class=\"form_title\">позиция</div>\n                <input type=\"number\" formControlName=\"pos\" class=\"form_100\"/>\n            </div>\n            <div class=\"form_row\">\n                <div class=\"form_title\">алиас для цены</div>\n                <input type=\"text\" formControlName=\"priceAlias\" class=\"form_100\"/>\n            </div>\n            <div class=\"form_row\">\n                <div class=\"form_title\">суффик на цену</div>\n                <input type=\"text\" formControlName=\"priceSuffix\" class=\"form_100\"/>\n            </div>\n            <div class=\"form_row\">\n                <div class=\"form_title\">вспомог-ый текст для заголовка</div>\n                <input type=\"text\" formControlName=\"titleHelp\" class=\"form_100\"/>\n            </div>\n            <div class=\"form_row\">\n                <div class=\"form_title\">комментарий под заголовок</div>\n                <input type=\"text\" formControlName=\"titleComment\" class=\"form_100\"/>\n            </div>\n            <div class=\"form_row\">\n                <label>\n                    <input type=\"checkbox\" formControlName=\"isAutogenerateTitle\"/> isAutogenerateTitle\n                </label>\n            </div>\n            <div class=\"form_row\">\n                <div class=\"form_title\">назначенные свойства</div>\n                <app-dynamic-props formArrayName=\"propsAssignedForCat\"\n                                   [propsAssignedFormArray]=\"form.get('propsAssignedForCat')\"></app-dynamic-props>\n            </div>\n            <div class=\"form_row\">\n                <input type=\"submit\"/>\n            </div>\n            <div class=\"form_row\">\n                {{ form.value | json }}\n            </div>\n        </form>\n    </div>\n</div>\n","import {AfterViewInit, Component, ElementRef, EventEmitter, OnDestroy, OnInit, Output, ViewChild} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {FormArray, FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {SettingsInterface} from '../../../../../interfaces/response/settings';\nimport {CatWithDeepInterface} from '../../../../../interfaces/response/cat';\nimport {PropAssignedForCatInterface, PropsAssignedForCat} from '../../../../../interfaces/response/prop';\nimport {CatService} from '../../../../../services/cat.service';\nimport {ManagerService} from '../../../../../services/manager.service';\nimport {Helpers} from '../../../../../helpers';\n\n@Component({\n    selector: 'app-forms-cats-put-cats-catid',\n    templateUrl: './forms-cats-put-cats-catid.component.html',\n    styleUrls: ['./forms-cats-put-cats-catid.component.less'],\n})\nexport class FormsCatsPutCatsCatidComponent implements OnInit, OnDestroy, AfterViewInit {\n    private subscriptions: Subscription[] = [];\n    formGet: FormGroup;\n    formPut: FormGroup;\n    settings: SettingsInterface;\n    catTreeOneLevel: CatWithDeepInterface[] = [];\n    @Output() json: EventEmitter<any> = new EventEmitter();\n    @ViewChild('formPutEl', {static: true}) formPutEl: ElementRef;\n\n    constructor(\n        private fb: FormBuilder,\n        private serviceCats: CatService,\n        private serviceManager: ManagerService,\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.formGet = this.fb.group({\n            catId: 0,\n        });\n        this.formPut = this.fb.group({\n            catId: [0, [Validators.required, Validators.min(1)]],\n            name: ['', [Validators.required, Validators.minLength(2)]],\n            slug: '',\n            parentId: [0, Validators.min(0)],\n            pos: [0, Validators.min(0)],\n            isDisabled: false,\n            priceAlias: '',\n            priceSuffix: '',\n            titleHelp: '',\n            titleComment: '',\n            isAutogenerateTitle: false,\n            propsAssignedForCat: this.fb.array(<PropAssignedForCatInterface[]> []),\n        });\n\n        const s = this.serviceManager.settings$\n            .subscribe(x => this.catTreeOneLevel = Helpers.getCatTreeAsOneLevel(x.catsTree));\n        this.subscriptions.push(s);\n    }\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach(x => x.unsubscribe());\n    }\n\n    ngAfterViewInit(): void {\n    }\n\n    submitFormGetCatDataForPut({target}): void {\n        if (this.formGet.invalid) {\n            for (let key in this.formGet.controls) {\n                const formControl = this.formGet.get(key);\n\n                if (formControl.status === 'INVALID') {\n                    console.log('INVALID:', key);\n                }\n            }\n            return;\n        }\n\n        const catId: number = this.formGet.get('catId').value;\n        const s = this.serviceCats.getCatId(catId, false).subscribe(x => {\n            this.json.emit(x);\n            this.formPutEl.nativeElement.classList.remove('hidden');\n\n            this.formPut.reset();\n            (this.formPut.get('propsAssignedForCat') as FormArray).clear();\n            this.formPut.patchValue(x);\n\n            // преобразуем нормально в массивы св-ва и их значения\n            const aProps = x.props.map(y => this.fb.group(new PropsAssignedForCat(y)));\n            this.formPut.setControl('propsAssignedForCat', this.fb.array(aProps));\n        });\n        this.subscriptions.push(s);\n    }\n\n    submitFormPutCatsCatId({target}): void {\n        if (this.formPut.invalid) {\n            for (let key in this.formPut.controls) {\n                const formControl = this.formPut.get(key);\n\n                if (formControl.status === 'INVALID') {\n                    console.log('INVALID:', key);\n                }\n            }\n            return;\n        }\n\n        const s = this.serviceCats.put(this.formPut.get('catId').value, this.formPut.value)\n            .subscribe(x => this.json.emit(x));\n        this.subscriptions.push(s);\n    }\n}\n","<div class=\"page-adm_box\">\n    <div class=\"page-adm_box_title\" appToggleActive>\n        PUT: /api/v1/cats/:catId\n    </div>\n    <div class=\"page-adm_box_body\">\n        <form [formGroup]=\"formGet\" (ngSubmit)=\"submitFormGetCatDataForPut($event)\" class=\"form\">\n            <div class=\"form_row\">\n                <div class=\"form_title\">id категории</div>\n                <select formControlName=\"catId\" class=\"form_100\">\n                    <option value=\"0\"></option>\n                    <option *ngFor=\"let cat of catTreeOneLevel\" [value]=\"cat.catId\">\n                        {{ '|----'.repeat(cat.deep) }} {{ cat.name }}\n                    </option>\n                </select>\n            </div>\n            <div class=\"form_row\">\n                <input type=\"submit\"/>\n            </div>\n        </form>\n        <form #formPutEl [formGroup]=\"formPut\" (ngSubmit)=\"submitFormPutCatsCatId($event)\"\n              class=\"form hidden\">\n\n            <input type=\"hidden\" formControlName=\"catId\"/>\n\n            <div class=\"form_row\">\n                <div class=\"form_title\">название</div>\n                <input type=\"text\" formControlName=\"name\" class=\"form_100\"/>\n            </div>\n            <div class=\"form_row\">\n                <div class=\"form_title\">slug</div>\n                <input type=\"text\" formControlName=\"slug\" readonly=\"readonly\" class=\"form_100\"/>\n            </div>\n            <div class=\"form_row\">\n                <div class=\"form_title\">id родителя</div>\n                <select formControlName=\"parentId\" class=\"form_100\">\n                    <option value=\"0\"></option>\n                    <option *ngFor=\"let cat of catTreeOneLevel\" [value]=\"cat.catId\">\n                        {{ '|----'.repeat(cat.deep) }} {{ cat.name }}\n                    </option>\n                </select>\n            </div>\n            <div class=\"form_row\">\n                <div class=\"form_title\">позиция</div>\n                <input type=\"number\" formControlName=\"pos\" class=\"form_100\"/>\n            </div>\n            <div class=\"form_row\">\n                <div class=\"form_title\">алиас для цены</div>\n                <input type=\"text\" formControlName=\"priceAlias\" class=\"form_100\"/>\n            </div>\n            <div class=\"form_row\">\n                <div class=\"form_title\">суффик на цену</div>\n                <input type=\"text\" formControlName=\"priceSuffix\" class=\"form_100\"/>\n            </div>\n            <div class=\"form_row\">\n                <div class=\"form_title\">вспомог-ый текст для заголовока</div>\n                <input type=\"text\" formControlName=\"titleHelp\" class=\"form_100\"/>\n            </div>\n            <div class=\"form_row\">\n                <div class=\"form_title\">комментарий под заголовок</div>\n                <input type=\"text\" formControlName=\"titleComment\" class=\"form_100\"/>\n            </div>\n            <div class=\"form_row\">\n                <label>\n                    <input type=\"checkbox\" formControlName=\"isAutogenerateTitle\"/> isAutogenerateTitle\n                </label>\n            </div>\n            <div class=\"form_row\">\n                <label>\n                    <input type=\"checkbox\" formControlName=\"isDisabled\"/> is_disabled\n                </label>\n            </div>\n            <div class=\"form_row\">\n                <div class=\"form_title\">назначенные свойства</div>\n                <app-dynamic-props formArrayName=\"propsAssignedForCat\"\n                                   [propsAssignedFormArray]=\"formPut.get('propsAssignedForCat')\"></app-dynamic-props>\n            </div>\n            <div class=\"form_row\">\n                <input type=\"submit\"/>\n            </div>\n            <div class=\"form_row\">\n                {{ formPut.value | json }}\n            </div>\n        </form>\n    </div>\n</div>\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {KindPropsService} from '../../../../../services/kind-props.service';\n\n@Component({\n    selector: 'app-forms-kind-props-delete',\n    templateUrl: './forms-kind-props-delete.component.html',\n    styleUrls: ['./forms-kind-props-delete.component.less'],\n})\nexport class FormsKindPropsDeleteComponent implements OnInit {\n    private subscriptions: Subscription[] = [];\n    form: FormGroup;\n    @Output() json: EventEmitter<any> = new EventEmitter();\n\n    constructor(\n        private fb: FormBuilder,\n        private serviceKindProps: KindPropsService,\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.form = this.fb.group({\n            kindPropId: [0, [Validators.required, Validators.min(1)]],\n        });\n    }\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach(x => x.unsubscribe());\n    }\n\n    submitForm({target}): void {\n        if (this.form.invalid) {\n            for (let key in this.form.controls) {\n                const formControl = this.form.get(key);\n\n                if (formControl.status === 'INVALID') {\n                    console.log('INVALID:', key);\n                }\n            }\n            return;\n        }\n\n        const s = this.serviceKindProps.delete(this.form.get('kindPropId').value).subscribe(x => {\n            this.json.emit(x);\n            this.form.reset();\n        });\n        this.subscriptions.push(s);\n    }\n}\n","<div class=\"page-adm_box\">\n    <div class=\"page-adm_box_title\" appToggleActive>\n        DELETE: /api/v1/kind_props/:kindPropId\n    </div>\n    <div class=\"page-adm_box_body\">\n        <form [formGroup]=\"form\" (ngSubmit)=\"submitForm($event)\" class=\"form\">\n            <div class=\"form_row\">\n                <div class=\"form_title\">id типа свойства</div>\n                <input type=\"number\" formControlName=\"kindPropId\" class=\"form_100\"/>\n            </div>\n            <div class=\"form_row\">\n                <input type=\"submit\"/>\n            </div>\n            <div class=\"form_row\">\n                {{ form.value | json }}\n            </div>\n        </form>\n    </div>\n</div>\n","import {Component, EventEmitter, OnDestroy, OnInit, Output} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport {KindPropsService} from '../../../../../services/kind-props.service';\n\n@Component({\n    selector: 'app-forms-kind-props-get-all',\n    templateUrl: './forms-kind-props-get-all.component.html',\n    styleUrls: ['./forms-kind-props-get-all.component.less'],\n})\nexport class FormsKindPropsGetAllComponent implements OnInit, OnDestroy {\n    private subscriptions: Subscription[] = [];\n    form: FormGroup;\n    @Output() json: EventEmitter<any> = new EventEmitter();\n\n    constructor(\n        private fb: FormBuilder,\n        private serviceKindProps: KindPropsService,\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.form = this.fb.group({});\n    }\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach(x => x.unsubscribe());\n    }\n\n    submitForm({target}): void {\n        const s = this.serviceKindProps.getAll().subscribe(x => this.json.emit(x));\n        this.subscriptions.push(s);\n    }\n}\n","<div class=\"page-adm_box\">\n    <div class=\"page-adm_box_title\" appToggleActive>\n        GET: /api/v1/kind_props\n    </div>\n    <div class=\"page-adm_box_body\">\n        <form [formGroup]=\"form\" (ngSubmit)=\"submitForm($event)\" class=\"form\">\n            <div class=\"form_row\">\n                <input type=\"submit\"/>\n            </div>\n        </form>\n    </div>\n</div>\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {KindPropsService} from '../../../../../services/kind-props.service';\n\n@Component({\n    selector: 'app-forms-kind-props-get-one',\n    templateUrl: './forms-kind-props-get-one.component.html',\n    styleUrls: ['./forms-kind-props-get-one.component.less'],\n})\nexport class FormsKindPropsGetOneComponent implements OnInit {\n    private subscriptions: Subscription[] = [];\n    form: FormGroup;\n    @Output() json: EventEmitter<any> = new EventEmitter();\n\n    constructor(\n        private fb: FormBuilder,\n        private serviceKindProps: KindPropsService,\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.form = this.fb.group({\n            kindPropId: [0, [Validators.required, Validators.min(1)]],\n        });\n    }\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach(x => x.unsubscribe());\n    }\n\n    submitForm({target}): void {\n        if (this.form.invalid) {\n            for (let key in this.form.controls) {\n                const formControl = this.form.get(key);\n\n                if (formControl.status === 'INVALID') {\n                    console.log('INVALID:', key);\n                }\n            }\n            return;\n        }\n\n        const s = this.serviceKindProps.getOne(this.form.get('kindPropId').value).subscribe(x => this.json.emit(x));\n        this.subscriptions.push(s);\n    }\n}\n","<div class=\"page-adm_box\">\n    <div class=\"page-adm_box_title\" appToggleActive>\n        GET: /api/v1/kind_props/:kindPropId\n    </div>\n    <div class=\"page-adm_box_body\">\n        <form [formGroup]=\"form\" (ngSubmit)=\"submitForm($event)\" class=\"form\">\n            <div class=\"form_row\">\n                <div class=\"form_title\">id вида свойства</div>\n                <input type=\"number\" formControlName=\"kindPropId\" class=\"form_100\"/>\n            </div>\n            <div class=\"form_row\">\n                <input type=\"submit\"/>\n            </div>\n            <div class=\"form_row\">\n                {{ form.value | json }}\n            </div>\n        </form>\n    </div>\n</div>\n","import {Component, EventEmitter, OnDestroy, OnInit, Output} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {KindPropsService} from '../../../../../services/kind-props.service';\n\n@Component({\n    selector: 'app-forms-kind-props-post',\n    templateUrl: './forms-kind-props-post.component.html',\n    styleUrls: ['./forms-kind-props-post.component.less'],\n})\nexport class FormsKindPropsPostComponent implements OnInit, OnDestroy {\n    private subscriptions: Subscription[] = [];\n    form: FormGroup;\n    @Output() json: EventEmitter<any> = new EventEmitter();\n\n    constructor(\n        private fb: FormBuilder,\n        private serviceKindProps: KindPropsService,\n    ) {}\n\n    ngOnInit(): void {\n        this.form = this.fb.group({\n            name: ['', Validators.required],\n        });\n    }\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach(x => x.unsubscribe());\n    }\n\n    submitForm({target}): void {\n        if (this.form.invalid) {\n            for (let key in this.form.controls) {\n                const formControl = this.form.get(key);\n\n                if (formControl.status === 'INVALID') {\n                    console.log('INVALID:', key);\n                }\n            }\n            return;\n        }\n\n        const s = this.serviceKindProps.create(this.form.value).subscribe(x => {\n            this.json.emit(x);\n            this.form.reset();\n        });\n        this.subscriptions.push(s);\n    }\n}\n","<div class=\"page-adm_box\">\n    <div class=\"page-adm_box_title\" appToggleActive>\n        POST: /api/v1/kind_props\n    </div>\n    <div class=\"page-adm_box_body\">\n        <form [formGroup]=\"form\" (ngSubmit)=\"submitForm($event)\" class=\"form\">\n            <div class=\"form_row\">\n                <div class=\"form_title\">Название</div>\n                <input type=\"text\" formControlName=\"name\" class=\"form_100\"/>\n            </div>\n            <div class=\"form_row\">\n                <input type=\"submit\"/>\n            </div>\n            <div class=\"form_row\">\n                {{ form.value | json }}\n            </div>\n        </form>\n    </div>\n</div>\n","import {AfterViewInit, Component, ElementRef, EventEmitter, OnDestroy, OnInit, Output, ViewChild} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {KindPropsService} from '../../../../../services/kind-props.service';\n\n@Component({\n    selector: 'app-forms-kind-props-put',\n    templateUrl: './forms-kind-props-put.component.html',\n    styleUrls: ['./forms-kind-props-put.component.less'],\n})\nexport class FormsKindPropsPutComponent implements OnInit, OnDestroy, AfterViewInit {\n    private subscriptions: Subscription[] = [];\n    formGet: FormGroup;\n    form: FormGroup;\n    @Output() json: EventEmitter<any> = new EventEmitter();\n    @ViewChild('formPut', {static: true}) formPut: ElementRef;\n\n    constructor(\n        private fb: FormBuilder,\n        private serviceKindProps: KindPropsService,\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.formGet = this.fb.group({\n            kindPropId: [0, [Validators.required, Validators.min(1)]],\n        });\n        this.form = this.fb.group({\n            kindPropId: [0, [Validators.required, Validators.min(0)]],\n            name: ['', Validators.required],\n        });\n    }\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach(x => x.unsubscribe());\n    }\n\n    ngAfterViewInit(): void {\n    }\n\n    submitFormGet({target}): void {\n        if (this.formGet.invalid) {\n            for (let key in this.formGet.controls) {\n                const formControl = this.formGet.get(key);\n\n                if (formControl.status === 'INVALID') {\n                    console.log('INVALID:', key);\n                }\n            }\n            return;\n        }\n\n        const kindPropId: number = this.formGet.get('kindPropId').value;\n        const s = this.serviceKindProps.getOne(kindPropId).subscribe(x => {\n            this.json.emit(x);\n            this.formPut.nativeElement.classList.remove('hidden');\n            this.form.reset();\n            this.form.patchValue(x);\n        });\n        this.subscriptions.push(s);\n    }\n\n    submitFormPut({target}): void {\n        if (this.form.invalid) {\n            for (let key in this.form.controls) {\n                const formControl = this.form.get(key);\n\n                if (formControl.status === 'INVALID') {\n                    console.log('INVALID:', key);\n                }\n            }\n            return;\n        }\n\n        const s = this.serviceKindProps.update(this.form.get('kindPropId').value, this.form.value)\n            .subscribe(x => this.json.emit(x));\n        this.subscriptions.push(s);\n    }\n}\n","<div class=\"page-adm_box\">\n    <div class=\"page-adm_box_title\" appToggleActive>\n        PUT: /api/v1/kind_props/:kindPropId\n    </div>\n    <div class=\"page-adm_box_body\">\n        <form [formGroup]=\"formGet\" (ngSubmit)=\"submitFormGet($event)\" class=\"form\">\n            <div class=\"form_row\">\n                <div class=\"form_title\">id вида св-ва</div>\n                <input type=\"number\" formControlName=\"kindPropId\" class=\"form_100\"/>\n            </div>\n            <div class=\"form_row\">\n                <input type=\"submit\"/>\n            </div>\n        </form>\n        <form #formPut [formGroup]=\"form\" (ngSubmit)=\"submitFormPut($event)\" class=\"form hidden\">\n            <input type=\"hidden\" formControlName=\"kindPropId\"/>\n\n            <div class=\"form_row\">\n                <div class=\"form_title\">название</div>\n                <input type=\"text\" formControlName=\"name\" class=\"form_100\"/>\n            </div>\n            <div class=\"form_row\">\n                <input type=\"submit\"/>\n            </div>\n            <div class=\"form_row\">\n                {{ form.value | json }}\n            </div>\n        </form>\n    </div>\n</div>\n","import {Component, EventEmitter, OnDestroy, OnInit, Output} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {PagesService} from '../../../../../services/pages.service';\n\n@Component({\n    selector: 'app-forms-pages-ad-adid',\n    templateUrl: './forms-pages-ad-adid.component.html',\n    styleUrls: ['./forms-pages-ad-adid.component.less'],\n})\nexport class FormsPagesAdAdidComponent implements OnInit, OnDestroy {\n    private subscriptions: Subscription[] = [];\n    form: FormGroup;\n    @Output() json: EventEmitter<any> = new EventEmitter();\n\n    constructor(\n        private fb: FormBuilder,\n        private servicePages: PagesService,\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.form = this.fb.group({\n            adId: [0, [Validators.required, Validators.min(1)]],\n        });\n    }\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach(x => x.unsubscribe());\n    }\n\n    submitForm({target}): void {\n        if (this.form.invalid) {\n            for (let key in this.form.controls) {\n                const formControl = this.form.get(key);\n\n                if (formControl.status === 'INVALID') {\n                    console.log('INVALID:', key);\n                }\n            }\n            return;\n        }\n\n        const s = this.servicePages.pageAd(this.form.get('adId').value)\n            .subscribe(x => this.json.emit(x));\n        this.subscriptions.push(s);\n    }\n}\n","<div class=\"page-adm_box\">\n    <div class=\"page-adm_box_title\" appToggleActive>\n        GET: /api/v1/pages/ad/:adId\n    </div>\n    <div class=\"page-adm_box_body\">\n        <form [formGroup]=\"form\" (ngSubmit)=\"submitForm($event)\" class=\"form\">\n            <div class=\"form_row\">\n                <div class=\"form_title\">adId</div>\n                <input type=\"number\" formControlName=\"adId\" class=\"form_100\"/>\n            </div>\n            <div class=\"form_row\">\n                <input type=\"submit\"/>\n            </div>\n            <div class=\"form_row\">\n                {{ form.value | json }}\n            </div>\n        </form>\n    </div>\n</div>\n","import {Component, EventEmitter, OnDestroy, OnInit, Output} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {PagesService} from '../../../../../services/pages.service';\n\n@Component({\n    selector: 'app-forms-pages-main',\n    templateUrl: './forms-pages-main.component.html',\n    styleUrls: ['./forms-pages-main.component.less'],\n})\nexport class FormsPagesMainComponent implements OnInit, OnDestroy {\n    private subscriptions: Subscription[] = [];\n    form: FormGroup;\n    @Output() json: EventEmitter<any> = new EventEmitter();\n\n    constructor(\n        private fb: FormBuilder,\n        private servicePages: PagesService,\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.form = this.fb.group({\n            limit: [0, [Validators.min(1), Validators.max(10)]],\n        });\n    }\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach(x => x.unsubscribe());\n    }\n\n    submitForm({target}): void {\n        if (this.form.invalid) {\n            for (let key in this.form.controls) {\n                const formControl = this.form.get(key);\n\n                if (formControl.status === 'INVALID') {\n                    console.log('INVALID:', key);\n                }\n            }\n            return;\n        }\n\n        const s = this.servicePages.pageMain(this.form.get('limit').value).subscribe(x => this.json.emit(x));\n        this.subscriptions.push(s);\n    }\n}\n","<div class=\"page-adm_box\">\n    <div class=\"page-adm_box_title\" appToggleActive>\n        GET: /api/v1/pages/main\n    </div>\n    <div class=\"page-adm_box_body\">\n        <form [formGroup]=\"form\" (ngSubmit)=\"submitForm($event)\" class=\"form\">\n            <div class=\"form_row\">\n                <div class=\"form_title\">limit</div>\n                <input type=\"number\" formControlName=\"limit\" class=\"form_100\"/>\n            </div>\n            <div class=\"form_row\">\n                <input type=\"submit\"/>\n            </div>\n            <div class=\"form_row\">\n                {{ form.value | json }}\n            </div>\n        </form>\n    </div>\n</div>\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {PropService} from '../../../../../services/prop.service';\n\n@Component({\n    selector: 'app-forms-props-delete-props-propid',\n    templateUrl: './forms-props-delete-props-propid.component.html',\n    styleUrls: ['./forms-props-delete-props-propid.component.less'],\n})\nexport class FormsPropsDeletePropsPropidComponent implements OnInit {\n    private subscriptions: Subscription[] = [];\n    form: FormGroup;\n    @Output() json: EventEmitter<any> = new EventEmitter();\n\n    constructor(\n        private fb: FormBuilder,\n        private serviceProps: PropService,\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.form = this.fb.group({\n            propId: [0, [Validators.required, Validators.min(1)]],\n        });\n    }\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach(x => x.unsubscribe());\n    }\n\n    submitForm({target}): void {\n        if (this.form.invalid) {\n            for (let key in this.form.controls) {\n                const formControl = this.form.get(key);\n\n                if (formControl.status === 'INVALID') {\n                    console.log('INVALID:', key);\n                }\n            }\n            return;\n        }\n\n        const s = this.serviceProps.delete(this.form.get('propId').value).subscribe(x => {\n            this.json.emit(x);\n            this.form.reset();\n        });\n        this.subscriptions.push(s);\n    }\n}\n","<div class=\"page-adm_box\">\n    <div class=\"page-adm_box_title\" appToggleActive>\n        DELETE: /api/v1/props/:propId\n    </div>\n    <div class=\"page-adm_box_body\">\n        <form [formGroup]=\"form\" (ngSubmit)=\"submitForm($event)\" class=\"form\">\n            <div class=\"form_row\">\n                <div class=\"form_title\">id свойства</div>\n                <input type=\"number\" formControlName=\"propId\" class=\"form_100\"/>\n            </div>\n            <div class=\"form_row\">\n                <input type=\"submit\"/>\n            </div>\n            <div class=\"form_row\">\n                {{ form.value | json }}\n            </div>\n        </form>\n    </div>\n</div>\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {PropService} from '../../../../../services/prop.service';\n\n@Component({\n    selector: 'app-forms-props-get-props-propid',\n    templateUrl: './forms-props-get-props-propid.component.html',\n    styleUrls: ['./forms-props-get-props-propid.component.less'],\n})\nexport class FormsPropsGetPropsPropidComponent implements OnInit {\n    private subscriptions: Subscription[] = [];\n    form: FormGroup;\n    @Output() json: EventEmitter<any> = new EventEmitter();\n\n    constructor(\n        private fb: FormBuilder,\n        private serviceProps: PropService,\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.form = this.fb.group({\n            propId: [0, [Validators.required, Validators.min(1)]],\n        });\n    }\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach(x => x.unsubscribe());\n    }\n\n    submitForm({target}): void {\n        if (this.form.invalid) {\n            for (let key in this.form.controls) {\n                const formControl = this.form.get(key);\n\n                if (formControl.status === 'INVALID') {\n                    console.log('INVALID:', key);\n                }\n            }\n            return;\n        }\n\n        const s = this.serviceProps.getOne(this.form.get('propId').value).subscribe(x => this.json.emit(x));\n        this.subscriptions.push(s);\n    }\n}\n","<div class=\"page-adm_box\">\n    <div class=\"page-adm_box_title\" appToggleActive>\n        GET: /api/v1/props/:propId\n    </div>\n    <div class=\"page-adm_box_body\">\n        <form [formGroup]=\"form\" (ngSubmit)=\"submitForm($event)\" class=\"form\">\n            <div class=\"form_row\">\n                <div class=\"form_title\">id свойства</div>\n                <input type=\"number\" formControlName=\"propId\" class=\"form_100\"/>\n            </div>\n            <div class=\"form_row\">\n                <input type=\"submit\"/>\n            </div>\n            <div class=\"form_row\">\n                {{ form.value | json }}\n            </div>\n        </form>\n    </div>\n</div>\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {CatWithDeepInterface} from '../../../../../interfaces/response/cat';\nimport {ManagerService} from '../../../../../services/manager.service';\nimport {Helpers} from '../../../../../helpers';\nimport {PropService} from '../../../../../services/prop.service';\n\n@Component({\n    selector: 'app-forms-props-get-props',\n    templateUrl: './forms-props-get-props.component.html',\n    styleUrls: ['./forms-props-get-props.component.less'],\n})\nexport class FormsPropsGetPropsComponent implements OnInit {\n    private subscriptions: Subscription[] = [];\n    form: FormGroup;\n    catTreeOneLevel: CatWithDeepInterface[] = [];\n    @Output() json: EventEmitter<any> = new EventEmitter();\n\n    constructor(\n        private fb: FormBuilder,\n        private serviceProps: PropService,\n        private serviceManager: ManagerService,\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.form = this.fb.group({\n            catId: ['0', [Validators.required]],\n        });\n\n        const s = this.serviceManager.settings$.subscribe(x => this.catTreeOneLevel = Helpers.getCatTreeAsOneLevel(x.catsTree));\n        this.subscriptions.push(s);\n    }\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach(x => x.unsubscribe());\n    }\n\n    submitForm({target}): void {\n        if (this.form.invalid) {\n            for (let key in this.form.controls) {\n                const formControl = this.form.get(key);\n\n                if (formControl.status === 'INVALID') {\n                    console.log('INVALID:', key);\n                }\n            }\n            return;\n        }\n\n        const s = this.serviceProps.getPropsFullForCat(this.form.get('catId').value).subscribe(x => this.json.emit(x));\n        this.subscriptions.push(s);\n    }\n}\n","<div class=\"page-adm_box\">\n    <div class=\"page-adm_box_title\" appToggleActive>\n        GET: /api/v1/props\n    </div>\n    <div class=\"page-adm_box_body\">\n        <form [formGroup]=\"form\" (ngSubmit)=\"submitForm($event)\" class=\"form\">\n            <div class=\"form_row\">\n                <div class=\"form_title\">id категории</div>\n                <select formControlName=\"catId\" class=\"form_100\">\n                    <option value=\"0\"></option>\n                    <option *ngFor=\"let cat of catTreeOneLevel\" [value]=\"cat.catId\">\n                        {{ '|----'.repeat(cat.deep) }} {{ cat.name }}\n                    </option>\n                </select>\n            </div>\n            <div class=\"form_row\">\n                <input type=\"submit\"/>\n            </div>\n            <div class=\"form_row\">\n                {{ form.value | json }}\n            </div>\n        </form>\n    </div>\n</div>\n","import {Component, EventEmitter, OnDestroy, OnInit, Output} from '@angular/core';\n\n@Component({\n    selector: 'app-forms-props-post-props',\n    templateUrl: './forms-props-post-props.component.html',\n    styleUrls: ['./forms-props-post-props.component.less'],\n})\nexport class FormsPropsPostPropsComponent implements OnInit, OnDestroy {\n    @Output() json: EventEmitter<any> = new EventEmitter();\n\n    constructor() {\n    }\n\n    ngOnInit(): void {\n    }\n\n    ngOnDestroy(): void {\n    }\n}\n","<div class=\"page-adm_box\">\n    <div class=\"page-adm_box_title\" appToggleActive>\n        POST: /api/v1/props\n    </div>\n    <div class=\"page-adm_box_body\">\n        <app-forms-props-post-put-prop (json)=\"json.emit($event)\"></app-forms-props-post-put-prop>\n    </div>\n</div>\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {KindPropInterface} from '../../../../../interfaces/response/kind-prop';\nimport {ValuePropInterface} from '../../../../../interfaces/response/value-prop';\nimport {FormArray, FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {PropFullInterface} from '../../../../../interfaces/response/prop';\nimport {PropService} from '../../../../../services/prop.service';\nimport {ManagerService} from '../../../../../services/manager.service';\n\n@Component({\n    selector: 'app-forms-props-post-put-prop',\n    templateUrl: './forms-props-post-put-prop.component.html',\n    styleUrls: ['./forms-props-post-put-prop.component.less']\n})\nexport class FormsPropsPostPutPropComponent implements OnInit {\n    private subscriptions: Subscription[] = [];\n    private _editPropFull: PropFullInterface;\n    form: FormGroup;\n    defaultControls: Object = {};\n    curKindPropName: string;\n    kindProps: KindPropInterface[] = [];\n    values: ValuePropInterface[] = [];\n    private tagKindNumber: string[] = this.serviceManager.tagKindNumber;\n    @Output() json: EventEmitter<any> = new EventEmitter();\n\n    set editPropFull(x: PropFullInterface) {\n        this.form.reset();\n        this.form.patchValue(x);\n        this.form.get('kindPropId').setValue(this.form.get('kindPropId').value.toString()); // нужна именно строчка\n\n        let tmp = this.form.get('values') as FormArray;\n        tmp.clear();\n        x.values.forEach(y => tmp.push(this.fb.group(y)));\n        this._editPropFull = x;\n    }\n\n    get editPropFull(): PropFullInterface {\n        return this._editPropFull;\n    }\n\n    constructor(\n        private fb: FormBuilder,\n        private serviceProps: PropService,\n        private serviceManager: ManagerService,\n    ) {\n        this.defaultControls = {\n            propId: 0, // необходимо для назначеных значений\n            title: ['', Validators.required],\n            kindPropId: [0, [Validators.required, Validators.min(0)]],\n            name: ['', Validators.required],\n            suffix: '',\n            comment: '',\n            privateComment: '',\n            selectAsTextarea: '',\n            values: this.fb.array(this.values),\n        };\n    }\n\n    ngOnInit(): void {\n        this.form = this.fb.group(this.defaultControls);\n        this.form.get('kindPropId').valueChanges.subscribe(x => {\n            this.curKindPropName = '';\n\n            this.kindProps.forEach(y => {\n                if (y.kindPropId == x) {\n                    this.curKindPropName = y.name;\n                }\n            });\n\n            if (this.curKindPropName !== 'select') {\n                this.form.get('selectAsTextarea').setValue('');\n            }\n\n            if (this.tagKindNumber.indexOf(this.curKindPropName) === -1) {\n                let tmp = this.form.get('values') as FormArray;\n                tmp.clear();\n            }\n        });\n\n        const s = this.serviceManager.settings$.subscribe(x => this.kindProps = x.kindProps);\n        this.subscriptions.push(s);\n    }\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach(x => x.unsubscribe());\n    }\n\n    ngAfterViewInit(): void {\n    }\n\n    submitForm({target}): void {\n        if (this.form.invalid) {\n            for (let key in this.form.controls) {\n                const formControl = this.form.get(key);\n\n                if (formControl.status === 'INVALID') {\n                    console.log('INVALID:', key);\n                }\n            }\n            return;\n        }\n\n        const propId: number = this.form.get('propId').value;\n        const fn = propId ? this.serviceProps.update(propId, this.form.value) : this.serviceProps.create(this.form.value);\n        const s = fn.subscribe(x => this.json.emit(x));\n        this.subscriptions.push(s);\n    }\n}\n","<form [formGroup]=\"form\" (ngSubmit)=\"submitForm($event)\" class=\"form\">\n    <input type=\"hidden\" formControlName=\"propId\"/>\n\n    <div class=\"form_row\">\n        <div class=\"form_title\">заголовок</div>\n        <input type=\"text\" formControlName=\"title\" class=\"form_100\"/>\n    </div>\n    <div class=\"form_row\">\n        <div class=\"form_title\">[name=] *</div>\n        <input type=\"text\" formControlName=\"name\" class=\"form_100\"/>\n    </div>\n    <div class=\"form_row\">\n        <div class=\"form_title\">суффикс</div>\n        <input type=\"text\" formControlName=\"suffix\" class=\"form_100\"/>\n    </div>\n    <div class=\"form_row\">\n        <div class=\"form_title\">комментарий</div>\n        <input type=\"text\" formControlName=\"comment\" class=\"form_100\"/>\n    </div>\n    <div class=\"form_row\">\n        <div class=\"form_title\">приватный комментарий</div>\n        <input type=\"text\" formControlName=\"privateComment\" class=\"form_100\"/>\n    </div>\n    <div class=\"form_row\">\n        <div class=\"form_title\">разновидность тега</div>\n        <select formControlName=\"kindPropId\" class=\"form_100\">\n            <option value=\"0\" selected=\"selected\"></option>\n            <option *ngFor=\"let kind of kindProps\" [value]=\"kind.kindPropId\">\n                {{ kind.name }}\n            </option>\n        </select>\n        <div [hidden]=\" editPropFull || curKindPropName != 'select' \">\n            <br/>\n            <textarea formControlName=\"selectAsTextarea\"></textarea>\n        </div>\n    </div>\n    <div class=\"form_row\">\n        <div class=\"form_title\">значения для св-ва</div>\n        <app-dynamic-values formArrayName=\"values\"\n                            [propId]=\"form.get('propId').value\"\n                            [valuesFormArray]=\"form.get('values')\"></app-dynamic-values>\n    </div>\n    <div class=\"form_row\">\n        <input type=\"submit\"/>\n    </div>\n    <div class=\"form_row\">\n        {{ form.value | json }}\n    </div>\n</form>\n","import {Component, ElementRef, EventEmitter, OnDestroy, OnInit, Output, ViewChild} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {PropService} from '../../../../../services/prop.service';\nimport {FormsPropsPostPutPropComponent} from '../forms-props-post-put-prop/forms-props-post-put-prop.component';\n\n@Component({\n    selector: 'app-forms-props-put-props-propid',\n    templateUrl: './forms-props-put-props-propid.component.html',\n    styleUrls: ['./forms-props-put-props-propid.component.less'],\n})\nexport class FormsPropsPutPropsPropidComponent implements OnInit, OnDestroy {\n    private subscriptions: Subscription[] = [];\n    form: FormGroup;\n    @Output() json: EventEmitter<any> = new EventEmitter();\n    @ViewChild('formPutWrapper', {static: true}) formPutWrapper: ElementRef;\n    @ViewChild(FormsPropsPostPutPropComponent) formsPropsPostPutProp: FormsPropsPostPutPropComponent;\n\n    constructor(\n        private fb: FormBuilder,\n        private serviceProps: PropService,\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.form = this.fb.group({\n            propId: [0, [Validators.required, Validators.min(1)]],\n        });\n    }\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach(x => x.unsubscribe());\n    }\n\n    ngAfterViewInit(): void {\n    }\n\n    submitForm({target}): void {\n        if (this.form.invalid) {\n            for (let key in this.form.controls) {\n                const formControl = this.form.get(key);\n\n                if (formControl.status === 'INVALID') {\n                    console.log('INVALID:', key);\n                }\n            }\n            return;\n        }\n\n        const s = this.serviceProps.getOne(this.form.get('propId').value).subscribe(x => {\n            this.formPutWrapper.nativeElement.classList.remove('hidden');\n            this.formsPropsPostPutProp.editPropFull = x;\n        });\n        this.subscriptions.push(s);\n    }\n}\n","<div class=\"page-adm_box\">\n    <div class=\"page-adm_box_title\" appToggleActive>\n        PUT: /api/v1/props/:propId\n    </div>\n    <div class=\"page-adm_box_body\">\n        <form [formGroup]=\"form\" (ngSubmit)=\"submitForm($event)\" class=\"form\">\n            <div class=\"form_row\">\n                <div class=\"form_title\">id св-ва</div>\n                <input type=\"number\" formControlName=\"propId\" class=\"form_100\"/>\n            </div>\n            <div class=\"form_row\">\n                <input type=\"submit\"/>\n            </div>\n        </form>\n        <div #formPutWrapper class=\"hidden\">\n            <app-forms-props-post-put-prop (json)=\"json.emit($event)\"></app-forms-props-post-put-prop>\n        </div>\n    </div>\n</div>\n","import {Component, EventEmitter, OnDestroy, OnInit, Output} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {Helpers} from '../../../../../helpers';\nimport {SearchService} from '../../../../../services/search.service';\nimport {ManagerService} from '../../../../../services/manager.service';\nimport {CatWithDeepInterface} from '../../../../../interfaces/response/cat';\n\n@Component({\n    selector: 'app-forms-search-ads',\n    templateUrl: './forms-search-ads.component.html',\n    styleUrls: ['./forms-search-ads.component.less'],\n})\nexport class FormsSearchAdsComponent implements OnInit, OnDestroy {\n    private subscriptions: Subscription[] = [];\n    form: FormGroup;\n    catTreeOneLevel: CatWithDeepInterface[] = [];\n    @Output() json: EventEmitter<any> = new EventEmitter();\n\n    constructor(\n        private fb: FormBuilder,\n        private serviceSearch: SearchService,\n        private serviceManager: ManagerService,\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.form = this.fb.group({\n            query: ['', [Validators.required, Validators.minLength(2)]],\n            catId: ['0', [Validators.required]],\n            limit: [5, [Validators.required, Validators.min(1), Validators.max(10)]],\n            offset: [0, [Validators.required, Validators.min(0)]],\n        });\n        const s = this.serviceManager.settings$\n            .subscribe(x => this.catTreeOneLevel = Helpers.getCatTreeAsOneLevel(x.catsTree));\n        this.subscriptions.push(s);\n    }\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach(x => x.unsubscribe());\n    }\n\n    submitForm({target}): void {\n        if (this.form.invalid) {\n            for (let key in this.form.controls) {\n                const formControl = this.form.get(key);\n\n                if (formControl.status === 'INVALID') {\n                    console.log('INVALID:', key);\n                }\n            }\n            return;\n        }\n\n        const query: string = this.form.get('query').value;\n        const catId: string = this.form.get('catId').value;\n        const limit: number = this.form.get('limit').value;\n        const offset: number = this.form.get('offset').value;\n\n        const s = this.serviceSearch.ads(query, catId, limit, offset).subscribe(x => this.json.emit(x));\n        this.subscriptions.push(s);\n    }\n}\n","<div class=\"page-adm_box\">\n    <div class=\"page-adm_box_title\" appToggleActive>\n        GET: /api/v1/search/ads\n    </div>\n    <div class=\"page-adm_box_body\">\n        <form [formGroup]=\"form\" (ngSubmit)=\"submitForm($event)\" class=\"form\">\n            <div class=\"form_row\">\n                <div class=\"form_title\">поисковая фраза</div>\n                <input type=\"text\" formControlName=\"query\" class=\"form_100\"/>\n            </div>\n            <div class=\"form_row\">\n                <div class=\"form_title\">id категории</div>\n                <select formControlName=\"catId\" class=\"form_100\">\n                    <option value=\"0\"></option>\n                    <option *ngFor=\"let cat of catTreeOneLevel\" [value]=\"cat.catId\">\n                        {{ '|----'.repeat(cat.deep) }} {{ cat.name }}\n                    </option>\n                </select>\n            </div>\n            <div class=\"form_row\">\n                <div class=\"form_title\">limit</div>\n                <input type=\"number\" formControlName=\"limit\" class=\"form_100\"/>\n            </div>\n            <div class=\"form_row\">\n                <div class=\"form_title\">offset</div>\n                <input type=\"number\" formControlName=\"offset\" class=\"form_100\"/>\n            </div>\n            <div class=\"form_row\">\n                <input type=\"submit\"/>\n            </div>\n            <div class=\"form_row\">\n                {{ form.value | json }}\n            </div>\n        </form>\n    </div>\n</div>\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport {TestService} from '../../../../services/test.service';\n\n@Component({\n    selector: 'app-forms-test',\n    templateUrl: './forms-test.component.html',\n    styleUrls: ['./forms-test.component.less'],\n})\nexport class FormsTestComponent implements OnInit {\n    private subscriptions: Subscription[] = [];\n    form: FormGroup;\n    @Output() json: EventEmitter<any> = new EventEmitter();\n\n    constructor(\n        private fb: FormBuilder,\n        private serviceTest: TestService,\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.form = this.fb.group({});\n    }\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach(x => x.unsubscribe());\n    }\n\n    submitForm({target}): void {\n        const s = this.serviceTest.request().subscribe(x => this.json.emit(x));\n        this.subscriptions.push(s);\n    }\n}\n","<div class=\"page-adm_box\">\n    <div class=\"page-adm_box_title\" appToggleActive>\n        GET: /api/v1/test\n    </div>\n    <div class=\"page-adm_box_body\">\n        <form [formGroup]=\"form\" (ngSubmit)=\"submitForm($event)\" class=\"form\">\n            <div class=\"form_row\">\n                <input type=\"submit\"/>\n            </div>\n        </form>\n    </div>\n</div>\n","import {Component, EventEmitter, OnDestroy, OnInit, Output} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {UserService} from '../../../../../services/user.service';\n\n@Component({\n    selector: 'app-forms-users-delete-users-userid',\n    templateUrl: './forms-users-delete-users-userid.component.html',\n    styleUrls: ['./forms-users-delete-users-userid.component.less'],\n})\nexport class FormsUsersDeleteUsersUseridComponent implements OnInit, OnDestroy {\n    private subscriptions: Subscription[] = [];\n    form: FormGroup;\n    @Output() json: EventEmitter<any> = new EventEmitter();\n\n    constructor(\n        private fb: FormBuilder,\n        private serviceUsers: UserService,\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.form = this.fb.group({\n            userId: [0, [Validators.required, Validators.min(1)]],\n        });\n    }\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach(x => x.unsubscribe());\n    }\n\n    submitForm({target}): void {\n        if (this.form.invalid) {\n            for (let key in this.form.controls) {\n                const formControl = this.form.get(key);\n\n                if (formControl.status === 'INVALID') {\n                    console.log('INVALID:', key);\n                }\n            }\n            return;\n        }\n\n        const s = this.serviceUsers.delete(this.form.get('userId').value).subscribe(x => {\n            this.json.emit(x);\n            this.form.reset();\n        });\n        this.subscriptions.push(s);\n    }\n}\n","<div class=\"page-adm_box\">\n    <div class=\"page-adm_box_title\" appToggleActive>\n        DELETE: /api/v1/users/:userId\n    </div>\n    <div class=\"page-adm_box_body\">\n        <div>\n            <form [formGroup]=\"form\" (ngSubmit)=\"submitForm($event)\" class=\"form\">\n                <div class=\"form_row\">\n                    <div class=\"form_title\">userId</div>\n                    <input type=\"number\" formControlName=\"userId\" class=\"form_100\"/>\n                </div>\n                <div class=\"form_row\">\n                    <input type=\"submit\"/>\n                </div>\n                <div class=\"form_row\">\n                    {{ form.value | json }}\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n","import {Component, EventEmitter, OnDestroy, OnInit, Output} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {UserService} from '../../../../../services/user.service';\n\n@Component({\n    selector: 'app-forms-users-get-users-userid',\n    templateUrl: './forms-users-get-users-userid.component.html',\n    styleUrls: ['./forms-users-get-users-userid.component.less'],\n})\nexport class FormsUsersGetUsersUseridComponent implements OnInit, OnDestroy {\n    private subscriptions: Subscription[] = [];\n    form: FormGroup;\n    @Output() json: EventEmitter<any> = new EventEmitter();\n\n    constructor(\n        private fb: FormBuilder,\n        private serviceUsers: UserService,\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.form = this.fb.group({\n            userId: [0, [Validators.required, Validators.min(1)]],\n        });\n    }\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach(x => x.unsubscribe());\n    }\n\n    submitForm({target}): void {\n        if (this.form.invalid) {\n            for (let key in this.form.controls) {\n                const formControl = this.form.get(key);\n\n                if (formControl.status === 'INVALID') {\n                    console.log('INVALID:', key);\n                }\n            }\n            return;\n        }\n\n        const s = this.serviceUsers.getUser(this.form.get('userId').value).subscribe(x => this.json.emit(x));\n        this.subscriptions.push(s);\n    }\n}\n","<div class=\"page-adm_box\">\n    <div class=\"page-adm_box_title\" appToggleActive>\n        GET: /api/v1/users/:userId\n    </div>\n    <div class=\"page-adm_box_body\">\n        <div>\n            <form [formGroup]=\"form\" (ngSubmit)=\"submitForm($event)\" class=\"form\">\n                <div class=\"form_row\">\n                    <div class=\"form_title\">userId</div>\n                    <input type=\"number\" formControlName=\"userId\" class=\"form_100\"/>\n                </div>\n                <div class=\"form_row\">\n                    <input type=\"submit\"/>\n                </div>\n                <div class=\"form_row\">\n                    {{ form.value | json }}\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n","import {Component, EventEmitter, OnDestroy, OnInit, Output} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport {UserService} from '../../../../../services/user.service';\n\n@Component({\n    selector: 'app-forms-users-get-users',\n    templateUrl: './forms-users-get-users.component.html',\n    styleUrls: ['./forms-users-get-users.component.less'],\n})\nexport class FormsUsersGetUsersComponent implements OnInit, OnDestroy {\n    private subscriptions: Subscription[] = [];\n    form: FormGroup;\n    @Output() json: EventEmitter<any> = new EventEmitter();\n\n    constructor(\n        private fb: FormBuilder,\n        private serviceUsers: UserService,\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.form = this.fb.group({});\n    }\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach(x => x.unsubscribe());\n    }\n\n    submitFormGetUsers({target}): void {\n        const s = this.serviceUsers.getUsers().subscribe(x => this.json.emit(x));\n        this.subscriptions.push(s);\n    }\n}\n","<div class=\"page-adm_box\">\n    <div class=\"page-adm_box_title\" appToggleActive>\n        GET: /api/v1/users\n    </div>\n    <div class=\"page-adm_box_body\">\n        <div>\n            <form [formGroup]=\"form\" (ngSubmit)=\"submitFormGetUsers($event)\" class=\"form\">\n                <div class=\"form_row\">\n                    <input type=\"submit\"/>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n","import {Component, EventEmitter, OnDestroy, OnInit, Output} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {UserService} from '../../../../../services/user.service';\nimport {Helpers} from '../../../../../helpers';\nimport {environment} from '../../../../../../environments/environment';\n\n@Component({\n    selector: 'app-forms-users-post-users',\n    templateUrl: './forms-users-post-users.component.html',\n    styleUrls: ['./forms-users-post-users.component.less'],\n})\nexport class FormsUsersPostUsersComponent implements OnInit, OnDestroy {\n    private subscriptions: Subscription[] = [];\n    form: FormGroup;\n    @Output() json: EventEmitter<any> = new EventEmitter();\n\n    constructor(\n        private fb: FormBuilder,\n        private serviceUsers: UserService,\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.form = this.fb.group({\n            email: ['', [Validators.required, Validators.email]],\n            password: ['', [Validators.required, Validators.minLength(environment.minLenPassword)]],\n            passwordConfirm: ['', [Validators.required, Validators.minLength(environment.minLenPassword)]],\n            files: '',\n            name: '',\n            isEmailConfirmed: false,\n        });\n    }\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach(x => x.unsubscribe());\n    }\n\n    submitForm({target}): void {\n        if (this.form.invalid) {\n            for (let key in this.form.controls) {\n                const formControl = this.form.get(key);\n\n                if (formControl.status === 'INVALID') {\n                    console.log('INVALID:', key);\n                }\n            }\n            return;\n        }\n\n        const newFormData = Helpers.getNewFormData(this.form.value);\n        const s = this.serviceUsers.create(newFormData).subscribe(x => {\n            this.json.emit(x);\n            target.reset();\n            this.form.reset();\n        });\n        this.subscriptions.push(s);\n    }\n\n    addPhoto({target}): void {\n        Helpers.addPhoto(target, this.form);\n    }\n}\n","<div class=\"page-adm_box\">\n    <div class=\"page-adm_box_title\" appToggleActive>\n        POST: /api/v1/users\n    </div>\n    <div class=\"page-adm_box_body\">\n        <div>\n            <form [formGroup]=\"form\" (ngSubmit)=\"submitForm($event)\" class=\"form\">\n                <div class=\"form_row\">\n                    <div class=\"form_title\">avatar</div>\n                    <input type=\"hidden\" formControlName=\"files\"/>\n                    <input class=\"form_100\" type=\"file\" accept=\"image/jpeg,image/png\" (change)=\"addPhoto($event)\"/>\n                </div>\n                <div class=\"form_row\">\n                    <div class=\"form_title\">name</div>\n                    <input type=\"text\" formControlName=\"name\" class=\"form_100\"/>\n                </div>\n                <div class=\"form_row\">\n                    <div class=\"form_title\">email</div>\n                    <input type=\"email\" formControlName=\"email\" class=\"form_100\"/>\n                </div>\n                <div class=\"form_row\">\n                    <div class=\"form_title\">password</div>\n                    <input type=\"text\" formControlName=\"password\" class=\"form_100\"/>\n                </div>\n                <div class=\"form_row\">\n                    <div class=\"form_title\">passwordConfirm</div>\n                    <input type=\"text\" formControlName=\"passwordConfirm\" class=\"form_100\"/>\n                </div>\n                <div class=\"form_row\">\n                    <label>\n                        <input type=\"checkbox\" formControlName=\"isEmailConfirmed\" value=\"true\"/>\n                        is_email_confirmed\n                    </label>\n                </div>\n                <div class=\"form_row\">\n                    <input type=\"submit\"/>\n                </div>\n                <div class=\"form_row\">\n                    {{ form.value | json }}\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n","import {AfterViewInit, Component, ElementRef, EventEmitter, OnDestroy, OnInit, Output, ViewChild} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {UserService} from '../../../../../services/user.service';\nimport {Helpers} from '../../../../../helpers';\nimport {environment} from '../../../../../../environments/environment';\n\n@Component({\n    selector: 'app-forms-users-put-users-userid',\n    templateUrl: './forms-users-put-users-userid.component.html',\n    styleUrls: ['./forms-users-put-users-userid.component.less'],\n})\nexport class FormsUsersPutUsersUseridComponent implements OnInit, OnDestroy, AfterViewInit {\n    private subscriptions: Subscription[] = [];\n    formGet: FormGroup;\n    formPut: FormGroup;\n    url: string = environment.apiUrl;\n    @Output() json: EventEmitter<any> = new EventEmitter();\n    @ViewChild('formPutTag', {static: true}) formPutTag: ElementRef;\n\n    constructor(\n        private fb: FormBuilder,\n        private serviceUsers: UserService,\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.formGet = this.fb.group({\n            userId: [0, [Validators.required, Validators.min(1)]],\n        });\n        this.formPut = this.fb.group({\n            userId: [0, [Validators.required, Validators.min(1)]],\n            email: ['', [Validators.required, Validators.email]],\n            password: '',\n            passwordConfirm: '', // не null, проверка не нужна\n            files: '',\n            avatar: '',\n            name: '',\n            isEmailConfirmed: false,\n        });\n    }\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach(x => x.unsubscribe());\n    }\n\n    ngAfterViewInit(): void {\n    }\n\n    submitFormGetUsersUserId({target}): void {\n        if (this.formGet.invalid) {\n            for (let key in this.formGet.controls) {\n                const formControl = this.formGet.get(key);\n\n                if (formControl.status === 'INVALID') {\n                    console.log('INVALID:', key);\n                }\n            }\n            return;\n        }\n\n        const s = this.serviceUsers.getUser(this.formGet.get('userId').value).subscribe(x => {\n            this.json.emit(x);\n            this.formPutTag.nativeElement.classList.remove('hidden');\n            this.formPut.patchValue(x);\n        });\n        this.subscriptions.push(s);\n    }\n\n    submitFormPutUsersUserId({target}): void {\n        if (this.formPut.invalid) {\n            for (let key in this.formPut.controls) {\n                const formControl = this.formPut.get(key);\n\n                if (formControl.status === 'INVALID') {\n                    console.log('INVALID:', key);\n                }\n            }\n            return;\n        }\n\n        const newFormData = Helpers.getNewFormData(this.formPut.value);\n        const s = this.serviceUsers.update(this.formPut.get('userId').value, newFormData).subscribe(x => {\n            this.json.emit(x);\n            target.reset();\n            this.formPut.reset();\n            this.formPut.patchValue(x);\n            this.formPut.get('password').setValue(''); // чтоб не было null\n            this.formPut.get('passwordConfirm').setValue(''); // чтоб не было null\n        });\n        this.subscriptions.push(s);\n    }\n\n    addPhoto({target}): void {\n        Helpers.addPhoto(target, this.formPut);\n    }\n\n    removePhoto({target}): void {\n        this.formPut.get('avatar').setValue('');\n    }\n}\n","<div class=\"page-adm_box\">\n    <div class=\"page-adm_box_title\" appToggleActive>\n        PUT: /api/v1/user\n    </div>\n    <div class=\"page-adm_box_body\">\n        <div>\n            <form [formGroup]=\"formGet\" (ngSubmit)=\"submitFormGetUsersUserId($event)\" class=\"form\">\n                <div class=\"form_row\">\n                    <div class=\"form_title\">userId</div>\n                    <input type=\"number\" formControlName=\"userId\" class=\"form_100\"/>\n                </div>\n                <div class=\"form_row\">\n                    <input type=\"submit\"/>\n                </div>\n            </form>\n            <form #formPutTag [formGroup]=\"formPut\"\n                  (ngSubmit)=\"submitFormPutUsersUserId($event)\" class=\"form hidden\">\n                <input type=\"hidden\" formControlName=\"userId\"/>\n\n                <div class=\"form_row\">\n                    <div class=\"form_title\">avatar</div>\n                    <input type=\"hidden\" formControlName=\"files\"/>\n                    <input class=\"form_100\" type=\"file\" accept=\"image/jpeg,image/png\"\n                           (change)=\"addPhoto($event)\"/>\n\n                    <div *ngIf=\"formPut.get('avatar').value\" class=\"form_thumbnails\">\n                        <div class=\"form_thumbnails_thumbnail\">\n                            <div (click)=\"removePhoto($event)\" class=\"form_thumbnails_thumbnail_close\"></div>\n                            <img [src]=\"url + '/resample/0/100/' + formPut.get('avatar').value\"/>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"form_row\">\n                    <div class=\"form_title\">name</div>\n                    <input type=\"text\" formControlName=\"name\" class=\"form_100\"/>\n                </div>\n                <div class=\"form_row\">\n                    <div class=\"form_title\">email</div>\n                    <input type=\"email\" formControlName=\"email\" class=\"form_100\" readonly=\"readonly\"/>\n                </div>\n                <div class=\"form_row\">\n                    <div class=\"form_title\">password</div>\n                    <input type=\"text\" formControlName=\"password\" class=\"form_100\"/>\n                </div>\n                <div class=\"form_row\">\n                    <div class=\"form_title\">passwordConfirm</div>\n                    <input type=\"text\" formControlName=\"passwordConfirm\" class=\"form_100\"/>\n                </div>\n                <div class=\"form_row\">\n                    <label>\n                        <input type=\"checkbox\" formControlName=\"isEmailConfirmed\" value=\"true\"/> is_email_confirmed\n                    </label>\n                </div>\n                <div class=\"form_row\">\n                    <input type=\"submit\"/>\n                </div>\n                <div class=\"form_row\">\n                    {{ formPut.value | json }}\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n","import {Component, OnDestroy, OnInit, ViewEncapsulation} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {CatTreeInterface} from '../../../../interfaces/response/cat';\nimport {ManagerService} from '../../../../services/manager.service';\n\n@Component({\n    selector: 'app-page-adm',\n    templateUrl: './page-adm.component.html',\n    styleUrls: ['./page-adm.component.less'],\n    encapsulation: ViewEncapsulation.None,\n})\nexport class PageAdmComponent implements OnInit, OnDestroy {\n    private subscriptions: Subscription[] = [];\n    jsonResult: Object;\n    catTree: CatTreeInterface;\n\n    constructor(\n        private serviceManager: ManagerService,\n    ) {\n    }\n\n    ngOnInit(): void {\n        document.body.classList.add('sx-adm');\n        const s = this.serviceManager.settings$.subscribe(x => this.catTree = x.catsTree);\n        this.subscriptions.push(s);\n    }\n\n    ngOnDestroy(): void {\n        document.body.classList.remove('sx-adm');\n        this.subscriptions.forEach(x => x.unsubscribe());\n    }\n}\n","<div class=\"page-adm\">\n    <div class=\"page-adm_columns\">\n        <div>\n            <ul class=\"page-adm_list\">\n                <li>\n                    <div class=\"page-adm_box\">\n                        <div class=\"page-adm_box_title\" appToggleActive>\n                            Категории\n                        </div>\n                        <div class=\"page-adm_box_body\">\n                            <app-forms-cats-get-cats\n                                (json)=\"jsonResult = $event\"></app-forms-cats-get-cats>\n                            <app-forms-cats-get-cats-catid\n                                (json)=\"jsonResult = $event\"></app-forms-cats-get-cats-catid>\n                            <app-forms-cats-post-cats\n                                (json)=\"jsonResult = $event\"></app-forms-cats-post-cats>\n                            <app-forms-cats-put-cats-catid\n                                (json)=\"jsonResult = $event\"></app-forms-cats-put-cats-catid>\n                            <app-forms-cats-delete-cats-catid\n                                (json)=\"jsonResult = $event\"></app-forms-cats-delete-cats-catid>\n                        </div>\n                    </div>\n                </li>\n                <li>\n                    <div class=\"page-adm_box\">\n                        <div class=\"page-adm_box_title\" appToggleActive>\n                            Пользователи\n                        </div>\n                        <div class=\"page-adm_box_body\">\n                            <app-forms-users-get-users\n                                (json)=\"jsonResult = $event\"></app-forms-users-get-users>\n                            <app-forms-users-get-users-userid\n                                (json)=\"jsonResult = $event\"></app-forms-users-get-users-userid>\n                            <app-forms-users-post-users\n                                (json)=\"jsonResult = $event\"></app-forms-users-post-users>\n                            <app-forms-users-put-users-userid\n                                (json)=\"jsonResult = $event\"></app-forms-users-put-users-userid>\n                            <app-forms-users-delete-users-userid\n                                (json)=\"jsonResult = $event\"></app-forms-users-delete-users-userid>\n                        </div>\n                    </div>\n                </li>\n                <li>\n                    <div class=\"page-adm_box\">\n                        <div class=\"page-adm_box_title\" appToggleActive>\n                            Объявления\n                        </div>\n                        <div class=\"page-adm_box_body\">\n                            <app-forms-ads-get-ads\n                                (json)=\"jsonResult = $event\"></app-forms-ads-get-ads>\n                            <app-forms-ads-get-ads-adid\n                                (json)=\"jsonResult = $event\"></app-forms-ads-get-ads-adid>\n                            <app-forms-ads-post-ads\n                                (json)=\"jsonResult = $event\"></app-forms-ads-post-ads>\n                            <app-forms-ads-put-ads-adid\n                                (json)=\"jsonResult = $event\"></app-forms-ads-put-ads-adid>\n                            <app-forms-ads-delete-ads-adid\n                                (json)=\"jsonResult = $event\"></app-forms-ads-delete-ads-adid>\n                        </div>\n                    </div>\n                </li>\n                <li>\n                    <div class=\"page-adm_box\">\n                        <div class=\"page-adm_box_title\" appToggleActive>\n                            Свойства для категорий\n                        </div>\n                        <div class=\"page-adm_box_body\">\n                            <app-forms-props-get-props\n                                (json)=\"jsonResult = $event\"></app-forms-props-get-props>\n                            <app-forms-props-get-props-propid\n                                (json)=\"jsonResult = $event\"></app-forms-props-get-props-propid>\n                            <app-forms-props-post-props\n                                (json)=\"jsonResult = $event\"></app-forms-props-post-props>\n                            <app-forms-props-put-props-propid\n                                (json)=\"jsonResult = $event\"></app-forms-props-put-props-propid>\n                            <app-forms-props-delete-props-propid\n                                (json)=\"jsonResult = $event\"></app-forms-props-delete-props-propid>\n                        </div>\n                    </div>\n                </li>\n                <li>\n                    <div class=\"page-adm_box\">\n                        <div class=\"page-adm_box_title\" appToggleActive>\n                            Разновидности типов св-в для категорий\n                        </div>\n                        <div class=\"page-adm_box_body\">\n                            <app-forms-kind-props-get-all\n                                (json)=\"jsonResult = $event\"></app-forms-kind-props-get-all>\n                            <app-forms-kind-props-get-one\n                                (json)=\"jsonResult = $event\"></app-forms-kind-props-get-one>\n                            <app-forms-kind-props-post\n                                (json)=\"jsonResult = $event\"></app-forms-kind-props-post>\n                            <app-forms-kind-props-put\n                                (json)=\"jsonResult = $event\"></app-forms-kind-props-put>\n                            <app-forms-kind-props-delete\n                                (json)=\"jsonResult = $event\"></app-forms-kind-props-delete>\n                        </div>\n                    </div>\n                </li>\n                <li>\n                    <div class=\"page-adm_box\">\n                        <div class=\"page-adm_box_title\" appToggleActive>\n                            Страницы\n                        </div>\n                        <div class=\"page-adm_box_body\">\n                            <app-forms-pages-ad-adid\n                                (json)=\"jsonResult = $event\"></app-forms-pages-ad-adid>\n                            <app-forms-pages-main\n                                (json)=\"jsonResult = $event\"></app-forms-pages-main>\n                        </div>\n                    </div>\n                </li>\n                <li>\n                    <div class=\"page-adm_box\">\n                        <div class=\"page-adm_box_title\" appToggleActive>\n                            Поиск\n                        </div>\n                        <div class=\"page-adm_box_body\">\n                            <app-forms-search-ads\n                                (json)=\"jsonResult = $event\"></app-forms-search-ads>\n                        </div>\n                    </div>\n                </li>\n                <li>\n                    <div class=\"page-adm_box\">\n                        <div class=\"page-adm_box_title\" appToggleActive>\n                            Тест\n                        </div>\n                        <div class=\"page-adm_box_body\">\n                            <app-forms-test\n                                (json)=\"jsonResult = $event\"></app-forms-test>\n                        </div>\n                    </div>\n                </li>\n            </ul>\n        </div>\n        <pre class=\"page-adm_json-result\">{{ jsonResult | prettyJson }}</pre>\n    </div>\n</div>\n","import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n    name: 'prettyJson'\n})\nexport class PrettyJsonPipe implements PipeTransform {\n    transform(value: unknown): string {\n        let res = JSON.stringify(value, null, '    ');\n        return res;\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {environment} from '../../environments/environment';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {KindPropInterface} from '../interfaces/response/kind-prop';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class KindPropsService {\n    private url: string = environment.apiUrl;\n\n    constructor(\n        private http: HttpClient,\n    ) {\n    }\n\n    getAll(): Observable<KindPropInterface[]> {\n        return this.http.get<KindPropInterface[]>(`${this.url}/kind_props`);\n    }\n\n    getOne(elId: number): Observable<KindPropInterface> {\n        return this.http.get<KindPropInterface>(`${this.url}/kind_props/${elId}`);\n    }\n\n    create(data: any): Observable<KindPropInterface> {\n        return this.http.post<KindPropInterface>(`${this.url}/kind_props`, data);\n    }\n\n    update(elId: number, data: any): Observable<KindPropInterface> {\n        return this.http.put<KindPropInterface>(`${this.url}/kind_props/${elId}`, data);\n    }\n\n    delete(elId: number): Observable<void> {\n        return this.http.delete<void>(`${this.url}/kind_props/${elId}`);\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {environment} from '../../environments/environment';\nimport {Observable} from 'rxjs';\nimport {HttpClient} from '@angular/common/http';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class TestService {\n    private url: string = environment.apiUrl;\n\n    constructor(\n        private http: HttpClient\n    ) {\n    }\n\n    request(): Observable<any> {\n        return this.http.get<any>(`${this.url}/test`);\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {environment} from '../../environments/environment';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {UserInterface} from '../interfaces/response/user';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class UserService {\n    private url: string = environment.apiUrl;\n\n    constructor(\n        private http: HttpClient\n    ) {\n    }\n\n    getUsers(): Observable<UserInterface[]> {\n        return this.http.get<UserInterface[]>(`${this.url}/users`);\n    }\n\n    getUser(userId: number): Observable<UserInterface> {\n        return this.http.get<UserInterface>(`${this.url}/users/${userId}`);\n    }\n\n    create(data: any): Observable<UserInterface> {\n        return this.http.post<UserInterface>(`${this.url}/users`, data);\n    }\n\n    update(userId: number, data: any): Observable<UserInterface> {\n        return this.http.put<UserInterface>(`${this.url}/users/${userId}`, data);\n    }\n\n    delete(userId: number): Observable<void> {\n        return this.http.delete<void>(`${this.url}/users/${userId}`);\n    }\n}\n"],"sourceRoot":"webpack:///"}